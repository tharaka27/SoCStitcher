// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module warpTransform (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        p_src_mat_rows_dout,
        p_src_mat_rows_empty_n,
        p_src_mat_rows_read,
        p_src_mat_cols_dout,
        p_src_mat_cols_empty_n,
        p_src_mat_cols_read,
        p_src_mat_data_V_dout,
        p_src_mat_data_V_empty_n,
        p_src_mat_data_V_read,
        p_dst_mat_rows_dout,
        p_dst_mat_rows_empty_n,
        p_dst_mat_rows_read,
        p_dst_mat_cols_dout,
        p_dst_mat_cols_empty_n,
        p_dst_mat_cols_read,
        p_dst_mat_data_V_din,
        p_dst_mat_data_V_full_n,
        p_dst_mat_data_V_write,
        P_matrix_address0,
        P_matrix_ce0,
        P_matrix_d0,
        P_matrix_q0,
        P_matrix_we0,
        P_matrix_address1,
        P_matrix_ce1,
        P_matrix_d1,
        P_matrix_q1,
        P_matrix_we1,
        p_dst_mat_rows_out_din,
        p_dst_mat_rows_out_full_n,
        p_dst_mat_rows_out_write,
        p_dst_mat_cols_out_din,
        p_dst_mat_cols_out_full_n,
        p_dst_mat_cols_out_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [11:0] p_src_mat_rows_dout;
input   p_src_mat_rows_empty_n;
output   p_src_mat_rows_read;
input  [11:0] p_src_mat_cols_dout;
input   p_src_mat_cols_empty_n;
output   p_src_mat_cols_read;
input  [7:0] p_src_mat_data_V_dout;
input   p_src_mat_data_V_empty_n;
output   p_src_mat_data_V_read;
input  [11:0] p_dst_mat_rows_dout;
input   p_dst_mat_rows_empty_n;
output   p_dst_mat_rows_read;
input  [11:0] p_dst_mat_cols_dout;
input   p_dst_mat_cols_empty_n;
output   p_dst_mat_cols_read;
output  [7:0] p_dst_mat_data_V_din;
input   p_dst_mat_data_V_full_n;
output   p_dst_mat_data_V_write;
output  [3:0] P_matrix_address0;
output   P_matrix_ce0;
output  [31:0] P_matrix_d0;
input  [31:0] P_matrix_q0;
output   P_matrix_we0;
output  [3:0] P_matrix_address1;
output   P_matrix_ce1;
output  [31:0] P_matrix_d1;
input  [31:0] P_matrix_q1;
output   P_matrix_we1;
output  [11:0] p_dst_mat_rows_out_din;
input   p_dst_mat_rows_out_full_n;
output   p_dst_mat_rows_out_write;
output  [11:0] p_dst_mat_cols_out_din;
input   p_dst_mat_cols_out_full_n;
output   p_dst_mat_cols_out_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    warpTransform_Block_1_U0_ap_start;
wire    warpTransform_Block_1_U0_ap_done;
wire    warpTransform_Block_1_U0_ap_continue;
wire    warpTransform_Block_1_U0_ap_idle;
wire    warpTransform_Block_1_U0_ap_ready;
wire    warpTransform_Block_1_U0_start_out;
wire    warpTransform_Block_1_U0_start_write;
wire    warpTransform_Block_1_U0_scalar_dst_mat_cols_read;
wire   [11:0] warpTransform_Block_1_U0_p_dst_mat_cols_out_din;
wire    warpTransform_Block_1_U0_p_dst_mat_cols_out_write;
wire    warpTransform_Block_1_U0_scalar_dst_mat_rows_read;
wire   [11:0] warpTransform_Block_1_U0_p_dst_mat_rows_out_din;
wire    warpTransform_Block_1_U0_p_dst_mat_rows_out_write;
wire    warpTransform_Block_1_U0_p_src_mat_cols_read;
wire    warpTransform_Block_1_U0_p_src_mat_rows_read;
wire   [11:0] warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din;
wire    warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write;
wire   [11:0] warpTransform_Block_1_U0_p_src_mat_rows_c_i_din;
wire    warpTransform_Block_1_U0_p_src_mat_rows_c_i_write;
wire   [11:0] warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din;
wire    warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write;
wire   [11:0] warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din;
wire    warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write;
wire    ap_sync_continue;
wire    warpTransform_Loop_1_U0_ap_start;
wire    warpTransform_Loop_1_U0_ap_done;
wire    warpTransform_Loop_1_U0_ap_continue;
wire    warpTransform_Loop_1_U0_ap_idle;
wire    warpTransform_Loop_1_U0_ap_ready;
wire    warpTransform_Loop_1_U0_p_src_mat_rows_read;
wire    warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read;
wire    warpTransform_Loop_1_U0_p_src_mat_data_V_read;
wire   [7:0] warpTransform_Loop_1_U0_in_stream_V_V_din;
wire    warpTransform_Loop_1_U0_in_stream_V_V_write;
wire   [11:0] warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din;
wire    warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write;
wire   [11:0] warpTransform_Loop_1_U0_ap_return;
wire    ap_channel_done_p_src_mat_rows_load;
wire    p_src_mat_rows_load_full_n;
wire    warpTransform_Block_U0_ap_start;
wire    warpTransform_Block_U0_ap_done;
wire    warpTransform_Block_U0_ap_continue;
wire    warpTransform_Block_U0_ap_idle;
wire    warpTransform_Block_U0_ap_ready;
wire   [3:0] warpTransform_Block_U0_P_matrix_address0;
wire    warpTransform_Block_U0_P_matrix_ce0;
wire    warpTransform_Block_U0_p_src_mat_cols_load337_loc_read;
wire    warpTransform_Block_U0_in_stream_V_V_read;
wire   [7:0] warpTransform_Block_U0_out_stream_V_V_din;
wire    warpTransform_Block_U0_out_stream_V_V_write;
wire    warpTransform_Loop_4_U0_ap_start;
wire    warpTransform_Loop_4_U0_ap_done;
wire    warpTransform_Loop_4_U0_ap_continue;
wire    warpTransform_Loop_4_U0_ap_idle;
wire    warpTransform_Loop_4_U0_ap_ready;
wire    warpTransform_Loop_4_U0_p_dst_mat_rows_read;
wire    warpTransform_Loop_4_U0_p_dst_mat_cols_read;
wire    warpTransform_Loop_4_U0_out_stream_V_V_read;
wire   [7:0] warpTransform_Loop_4_U0_p_dst_mat_data_V_din;
wire    warpTransform_Loop_4_U0_p_dst_mat_data_V_write;
wire    p_src_mat_cols_load33_1_full_n;
wire   [11:0] p_src_mat_cols_load33_1_dout;
wire    p_src_mat_cols_load33_1_empty_n;
wire    p_src_mat_rows_c_i_full_n;
wire   [11:0] p_src_mat_rows_c_i_dout;
wire    p_src_mat_rows_c_i_empty_n;
wire    p_dst_mat_rows_c_i_full_n;
wire   [11:0] p_dst_mat_rows_c_i_dout;
wire    p_dst_mat_rows_c_i_empty_n;
wire    p_dst_mat_cols_c_i_full_n;
wire   [11:0] p_dst_mat_cols_c_i_dout;
wire    p_dst_mat_cols_c_i_empty_n;
wire    in_stream_V_V_full_n;
wire   [7:0] in_stream_V_V_dout;
wire    in_stream_V_V_empty_n;
wire    p_src_mat_cols_load33_full_n;
wire   [11:0] p_src_mat_cols_load33_dout;
wire    p_src_mat_cols_load33_empty_n;
wire   [11:0] p_src_mat_rows_load_dout;
wire    p_src_mat_rows_load_empty_n;
wire    out_stream_V_V_full_n;
wire   [7:0] out_stream_V_V_dout;
wire    out_stream_V_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_warpTransform_Block_1_U0_ap_ready;
wire    ap_sync_warpTransform_Block_1_U0_ap_ready;
reg   [1:0] warpTransform_Block_1_U0_ap_ready_count;
reg    ap_sync_reg_warpTransform_Loop_1_U0_ap_ready;
wire    ap_sync_warpTransform_Loop_1_U0_ap_ready;
reg   [1:0] warpTransform_Loop_1_U0_ap_ready_count;
reg    ap_sync_reg_warpTransform_Block_U0_ap_ready;
wire    ap_sync_warpTransform_Block_U0_ap_ready;
reg   [1:0] warpTransform_Block_U0_ap_ready_count;
wire   [0:0] start_for_warpTransform_Loop_4_U0_din;
wire    start_for_warpTransform_Loop_4_U0_full_n;
wire   [0:0] start_for_warpTransform_Loop_4_U0_dout;
wire    start_for_warpTransform_Loop_4_U0_empty_n;
wire    warpTransform_Loop_1_U0_start_full_n;
wire    warpTransform_Loop_1_U0_start_write;
wire    warpTransform_Block_U0_start_full_n;
wire    warpTransform_Block_U0_start_write;
wire    warpTransform_Loop_4_U0_start_full_n;
wire    warpTransform_Loop_4_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_sync_reg_warpTransform_Block_1_U0_ap_ready = 1'b0;
#0 warpTransform_Block_1_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_warpTransform_Loop_1_U0_ap_ready = 1'b0;
#0 warpTransform_Loop_1_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_warpTransform_Block_U0_ap_ready = 1'b0;
#0 warpTransform_Block_U0_ap_ready_count = 2'd0;
end

warpTransform_Block_1 warpTransform_Block_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(warpTransform_Block_1_U0_ap_start),
    .start_full_n(start_for_warpTransform_Loop_4_U0_full_n),
    .ap_done(warpTransform_Block_1_U0_ap_done),
    .ap_continue(warpTransform_Block_1_U0_ap_continue),
    .ap_idle(warpTransform_Block_1_U0_ap_idle),
    .ap_ready(warpTransform_Block_1_U0_ap_ready),
    .start_out(warpTransform_Block_1_U0_start_out),
    .start_write(warpTransform_Block_1_U0_start_write),
    .scalar_dst_mat_cols_dout(p_dst_mat_cols_dout),
    .scalar_dst_mat_cols_empty_n(p_dst_mat_cols_empty_n),
    .scalar_dst_mat_cols_read(warpTransform_Block_1_U0_scalar_dst_mat_cols_read),
    .p_dst_mat_cols_out_din(warpTransform_Block_1_U0_p_dst_mat_cols_out_din),
    .p_dst_mat_cols_out_full_n(p_dst_mat_cols_out_full_n),
    .p_dst_mat_cols_out_write(warpTransform_Block_1_U0_p_dst_mat_cols_out_write),
    .scalar_dst_mat_rows_dout(p_dst_mat_rows_dout),
    .scalar_dst_mat_rows_empty_n(p_dst_mat_rows_empty_n),
    .scalar_dst_mat_rows_read(warpTransform_Block_1_U0_scalar_dst_mat_rows_read),
    .p_dst_mat_rows_out_din(warpTransform_Block_1_U0_p_dst_mat_rows_out_din),
    .p_dst_mat_rows_out_full_n(p_dst_mat_rows_out_full_n),
    .p_dst_mat_rows_out_write(warpTransform_Block_1_U0_p_dst_mat_rows_out_write),
    .p_src_mat_cols_dout(p_src_mat_cols_dout),
    .p_src_mat_cols_empty_n(p_src_mat_cols_empty_n),
    .p_src_mat_cols_read(warpTransform_Block_1_U0_p_src_mat_cols_read),
    .p_src_mat_rows_dout(p_src_mat_rows_dout),
    .p_src_mat_rows_empty_n(p_src_mat_rows_empty_n),
    .p_src_mat_rows_read(warpTransform_Block_1_U0_p_src_mat_rows_read),
    .p_src_mat_cols_load337_loc_c_i_din(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din),
    .p_src_mat_cols_load337_loc_c_i_full_n(p_src_mat_cols_load33_1_full_n),
    .p_src_mat_cols_load337_loc_c_i_write(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write),
    .p_src_mat_rows_c_i_din(warpTransform_Block_1_U0_p_src_mat_rows_c_i_din),
    .p_src_mat_rows_c_i_full_n(p_src_mat_rows_c_i_full_n),
    .p_src_mat_rows_c_i_write(warpTransform_Block_1_U0_p_src_mat_rows_c_i_write),
    .p_dst_mat_rows_c_i_din(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din),
    .p_dst_mat_rows_c_i_full_n(p_dst_mat_rows_c_i_full_n),
    .p_dst_mat_rows_c_i_write(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write),
    .p_dst_mat_cols_c_i_din(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din),
    .p_dst_mat_cols_c_i_full_n(p_dst_mat_cols_c_i_full_n),
    .p_dst_mat_cols_c_i_write(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write)
);

warpTransform_Loop_1 warpTransform_Loop_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(warpTransform_Loop_1_U0_ap_start),
    .ap_done(warpTransform_Loop_1_U0_ap_done),
    .ap_continue(warpTransform_Loop_1_U0_ap_continue),
    .ap_idle(warpTransform_Loop_1_U0_ap_idle),
    .ap_ready(warpTransform_Loop_1_U0_ap_ready),
    .p_src_mat_rows_dout(p_src_mat_rows_c_i_dout),
    .p_src_mat_rows_empty_n(p_src_mat_rows_c_i_empty_n),
    .p_src_mat_rows_read(warpTransform_Loop_1_U0_p_src_mat_rows_read),
    .p_src_mat_cols_load337_loc_dout(p_src_mat_cols_load33_1_dout),
    .p_src_mat_cols_load337_loc_empty_n(p_src_mat_cols_load33_1_empty_n),
    .p_src_mat_cols_load337_loc_read(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read),
    .p_src_mat_data_V_dout(p_src_mat_data_V_dout),
    .p_src_mat_data_V_empty_n(p_src_mat_data_V_empty_n),
    .p_src_mat_data_V_read(warpTransform_Loop_1_U0_p_src_mat_data_V_read),
    .in_stream_V_V_din(warpTransform_Loop_1_U0_in_stream_V_V_din),
    .in_stream_V_V_full_n(in_stream_V_V_full_n),
    .in_stream_V_V_write(warpTransform_Loop_1_U0_in_stream_V_V_write),
    .p_src_mat_cols_load337_loc_out_din(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din),
    .p_src_mat_cols_load337_loc_out_full_n(p_src_mat_cols_load33_full_n),
    .p_src_mat_cols_load337_loc_out_write(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write),
    .ap_return(warpTransform_Loop_1_U0_ap_return)
);

warpTransform_Block_s warpTransform_Block_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(warpTransform_Block_U0_ap_start),
    .ap_done(warpTransform_Block_U0_ap_done),
    .ap_continue(warpTransform_Block_U0_ap_continue),
    .ap_idle(warpTransform_Block_U0_ap_idle),
    .ap_ready(warpTransform_Block_U0_ap_ready),
    .P_matrix_address0(warpTransform_Block_U0_P_matrix_address0),
    .P_matrix_ce0(warpTransform_Block_U0_P_matrix_ce0),
    .P_matrix_q0(P_matrix_q0),
    .p_read(p_src_mat_rows_load_dout),
    .p_src_mat_cols_load337_loc_dout(p_src_mat_cols_load33_dout),
    .p_src_mat_cols_load337_loc_empty_n(p_src_mat_cols_load33_empty_n),
    .p_src_mat_cols_load337_loc_read(warpTransform_Block_U0_p_src_mat_cols_load337_loc_read),
    .in_stream_V_V_dout(in_stream_V_V_dout),
    .in_stream_V_V_empty_n(in_stream_V_V_empty_n),
    .in_stream_V_V_read(warpTransform_Block_U0_in_stream_V_V_read),
    .out_stream_V_V_din(warpTransform_Block_U0_out_stream_V_V_din),
    .out_stream_V_V_full_n(out_stream_V_V_full_n),
    .out_stream_V_V_write(warpTransform_Block_U0_out_stream_V_V_write)
);

warpTransform_Loop_4 warpTransform_Loop_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(warpTransform_Loop_4_U0_ap_start),
    .ap_done(warpTransform_Loop_4_U0_ap_done),
    .ap_continue(warpTransform_Loop_4_U0_ap_continue),
    .ap_idle(warpTransform_Loop_4_U0_ap_idle),
    .ap_ready(warpTransform_Loop_4_U0_ap_ready),
    .p_dst_mat_rows_dout(p_dst_mat_rows_c_i_dout),
    .p_dst_mat_rows_empty_n(p_dst_mat_rows_c_i_empty_n),
    .p_dst_mat_rows_read(warpTransform_Loop_4_U0_p_dst_mat_rows_read),
    .p_dst_mat_cols_dout(p_dst_mat_cols_c_i_dout),
    .p_dst_mat_cols_empty_n(p_dst_mat_cols_c_i_empty_n),
    .p_dst_mat_cols_read(warpTransform_Loop_4_U0_p_dst_mat_cols_read),
    .out_stream_V_V_dout(out_stream_V_V_dout),
    .out_stream_V_V_empty_n(out_stream_V_V_empty_n),
    .out_stream_V_V_read(warpTransform_Loop_4_U0_out_stream_V_V_read),
    .p_dst_mat_data_V_din(warpTransform_Loop_4_U0_p_dst_mat_data_V_din),
    .p_dst_mat_data_V_full_n(p_dst_mat_data_V_full_n),
    .p_dst_mat_data_V_write(warpTransform_Loop_4_U0_p_dst_mat_data_V_write)
);

fifo_w12_d2_A p_src_mat_cols_load33_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din),
    .if_full_n(p_src_mat_cols_load33_1_full_n),
    .if_write(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write),
    .if_dout(p_src_mat_cols_load33_1_dout),
    .if_empty_n(p_src_mat_cols_load33_1_empty_n),
    .if_read(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read)
);

fifo_w12_d2_A p_src_mat_rows_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Block_1_U0_p_src_mat_rows_c_i_din),
    .if_full_n(p_src_mat_rows_c_i_full_n),
    .if_write(warpTransform_Block_1_U0_p_src_mat_rows_c_i_write),
    .if_dout(p_src_mat_rows_c_i_dout),
    .if_empty_n(p_src_mat_rows_c_i_empty_n),
    .if_read(warpTransform_Loop_1_U0_p_src_mat_rows_read)
);

fifo_w12_d4_A p_dst_mat_rows_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din),
    .if_full_n(p_dst_mat_rows_c_i_full_n),
    .if_write(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write),
    .if_dout(p_dst_mat_rows_c_i_dout),
    .if_empty_n(p_dst_mat_rows_c_i_empty_n),
    .if_read(warpTransform_Loop_4_U0_p_dst_mat_rows_read)
);

fifo_w12_d4_A p_dst_mat_cols_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din),
    .if_full_n(p_dst_mat_cols_c_i_full_n),
    .if_write(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write),
    .if_dout(p_dst_mat_cols_c_i_dout),
    .if_empty_n(p_dst_mat_cols_c_i_empty_n),
    .if_read(warpTransform_Loop_4_U0_p_dst_mat_cols_read)
);

fifo_w8_d2_A in_stream_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Loop_1_U0_in_stream_V_V_din),
    .if_full_n(in_stream_V_V_full_n),
    .if_write(warpTransform_Loop_1_U0_in_stream_V_V_write),
    .if_dout(in_stream_V_V_dout),
    .if_empty_n(in_stream_V_V_empty_n),
    .if_read(warpTransform_Block_U0_in_stream_V_V_read)
);

fifo_w12_d2_A p_src_mat_cols_load33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din),
    .if_full_n(p_src_mat_cols_load33_full_n),
    .if_write(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write),
    .if_dout(p_src_mat_cols_load33_dout),
    .if_empty_n(p_src_mat_cols_load33_empty_n),
    .if_read(warpTransform_Block_U0_p_src_mat_cols_load337_loc_read)
);

fifo_w12_d2_A p_src_mat_rows_load_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Loop_1_U0_ap_return),
    .if_full_n(p_src_mat_rows_load_full_n),
    .if_write(warpTransform_Loop_1_U0_ap_done),
    .if_dout(p_src_mat_rows_load_dout),
    .if_empty_n(p_src_mat_rows_load_empty_n),
    .if_read(warpTransform_Block_U0_ap_ready)
);

fifo_w8_d2_A out_stream_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(warpTransform_Block_U0_out_stream_V_V_din),
    .if_full_n(out_stream_V_V_full_n),
    .if_write(warpTransform_Block_U0_out_stream_V_V_write),
    .if_dout(out_stream_V_V_dout),
    .if_empty_n(out_stream_V_V_empty_n),
    .if_read(warpTransform_Loop_4_U0_out_stream_V_V_read)
);

start_for_warpTrab2s start_for_warpTrab2s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_warpTransform_Loop_4_U0_din),
    .if_full_n(start_for_warpTransform_Loop_4_U0_full_n),
    .if_write(warpTransform_Block_1_U0_start_write),
    .if_dout(start_for_warpTransform_Loop_4_U0_dout),
    .if_empty_n(start_for_warpTransform_Loop_4_U0_empty_n),
    .if_read(warpTransform_Loop_4_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_warpTransform_Block_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_warpTransform_Block_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_warpTransform_Block_1_U0_ap_ready <= ap_sync_warpTransform_Block_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_warpTransform_Block_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_warpTransform_Block_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_warpTransform_Block_U0_ap_ready <= ap_sync_warpTransform_Block_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_warpTransform_Loop_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_warpTransform_Loop_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_warpTransform_Loop_1_U0_ap_ready <= ap_sync_warpTransform_Loop_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((warpTransform_Block_1_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        warpTransform_Block_1_U0_ap_ready_count <= (warpTransform_Block_1_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (warpTransform_Block_1_U0_ap_ready == 1'b1))) begin
        warpTransform_Block_1_U0_ap_ready_count <= (warpTransform_Block_1_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((warpTransform_Block_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        warpTransform_Block_U0_ap_ready_count <= (warpTransform_Block_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (warpTransform_Block_U0_ap_ready == 1'b1))) begin
        warpTransform_Block_U0_ap_ready_count <= (warpTransform_Block_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((warpTransform_Loop_1_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        warpTransform_Loop_1_U0_ap_ready_count <= (warpTransform_Loop_1_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (warpTransform_Loop_1_U0_ap_ready == 1'b1))) begin
        warpTransform_Loop_1_U0_ap_ready_count <= (warpTransform_Loop_1_U0_ap_ready_count + 2'd1);
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign P_matrix_address0 = warpTransform_Block_U0_P_matrix_address0;

assign P_matrix_address1 = 4'd0;

assign P_matrix_ce0 = warpTransform_Block_U0_P_matrix_ce0;

assign P_matrix_ce1 = 1'b0;

assign P_matrix_d0 = 32'd0;

assign P_matrix_d1 = 32'd0;

assign P_matrix_we0 = 1'b0;

assign P_matrix_we1 = 1'b0;

assign ap_channel_done_p_src_mat_rows_load = warpTransform_Loop_1_U0_ap_done;

assign ap_done = ap_sync_done;

assign ap_idle = (warpTransform_Loop_4_U0_ap_idle & warpTransform_Loop_1_U0_ap_idle & warpTransform_Block_U0_ap_idle & warpTransform_Block_1_U0_ap_idle & (p_src_mat_rows_load_empty_n ^ 1'b1));

assign ap_ready = internal_ap_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (warpTransform_Loop_4_U0_ap_done & warpTransform_Block_1_U0_ap_done);

assign ap_sync_ready = (ap_sync_warpTransform_Loop_1_U0_ap_ready & ap_sync_warpTransform_Block_U0_ap_ready & ap_sync_warpTransform_Block_1_U0_ap_ready);

assign ap_sync_warpTransform_Block_1_U0_ap_ready = (warpTransform_Block_1_U0_ap_ready | ap_sync_reg_warpTransform_Block_1_U0_ap_ready);

assign ap_sync_warpTransform_Block_U0_ap_ready = (warpTransform_Block_U0_ap_ready | ap_sync_reg_warpTransform_Block_U0_ap_ready);

assign ap_sync_warpTransform_Loop_1_U0_ap_ready = (warpTransform_Loop_1_U0_ap_ready | ap_sync_reg_warpTransform_Loop_1_U0_ap_ready);

assign internal_ap_ready = ap_sync_ready;

assign p_dst_mat_cols_out_din = warpTransform_Block_1_U0_p_dst_mat_cols_out_din;

assign p_dst_mat_cols_out_write = warpTransform_Block_1_U0_p_dst_mat_cols_out_write;

assign p_dst_mat_cols_read = warpTransform_Block_1_U0_scalar_dst_mat_cols_read;

assign p_dst_mat_data_V_din = warpTransform_Loop_4_U0_p_dst_mat_data_V_din;

assign p_dst_mat_data_V_write = warpTransform_Loop_4_U0_p_dst_mat_data_V_write;

assign p_dst_mat_rows_out_din = warpTransform_Block_1_U0_p_dst_mat_rows_out_din;

assign p_dst_mat_rows_out_write = warpTransform_Block_1_U0_p_dst_mat_rows_out_write;

assign p_dst_mat_rows_read = warpTransform_Block_1_U0_scalar_dst_mat_rows_read;

assign p_src_mat_cols_read = warpTransform_Block_1_U0_p_src_mat_cols_read;

assign p_src_mat_data_V_read = warpTransform_Loop_1_U0_p_src_mat_data_V_read;

assign p_src_mat_rows_read = warpTransform_Block_1_U0_p_src_mat_rows_read;

assign start_for_warpTransform_Loop_4_U0_din = 1'b1;

assign start_out = real_start;

assign warpTransform_Block_1_U0_ap_continue = ap_sync_continue;

assign warpTransform_Block_1_U0_ap_start = (real_start & (ap_sync_reg_warpTransform_Block_1_U0_ap_ready ^ 1'b1));

assign warpTransform_Block_U0_ap_continue = 1'b1;

assign warpTransform_Block_U0_ap_start = (real_start & p_src_mat_rows_load_empty_n & (ap_sync_reg_warpTransform_Block_U0_ap_ready ^ 1'b1));

assign warpTransform_Block_U0_start_full_n = 1'b1;

assign warpTransform_Block_U0_start_write = 1'b0;

assign warpTransform_Loop_1_U0_ap_continue = p_src_mat_rows_load_full_n;

assign warpTransform_Loop_1_U0_ap_start = (real_start & (ap_sync_reg_warpTransform_Loop_1_U0_ap_ready ^ 1'b1));

assign warpTransform_Loop_1_U0_start_full_n = 1'b1;

assign warpTransform_Loop_1_U0_start_write = 1'b0;

assign warpTransform_Loop_4_U0_ap_continue = ap_sync_continue;

assign warpTransform_Loop_4_U0_ap_start = start_for_warpTransform_Loop_4_U0_empty_n;

assign warpTransform_Loop_4_U0_start_full_n = 1'b1;

assign warpTransform_Loop_4_U0_start_write = 1'b0;

endmodule //warpTransform
