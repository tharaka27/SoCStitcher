// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "xfMat2AXIvideo.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xfMat2AXIvideo::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xfMat2AXIvideo::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> xfMat2AXIvideo::ap_ST_fsm_state1 = "1";
const sc_lv<4> xfMat2AXIvideo::ap_ST_fsm_state2 = "10";
const sc_lv<4> xfMat2AXIvideo::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> xfMat2AXIvideo::ap_ST_fsm_state6 = "1000";
const sc_lv<32> xfMat2AXIvideo::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool xfMat2AXIvideo::ap_const_boolean_1 = true;
const sc_lv<1> xfMat2AXIvideo::ap_const_lv1_0 = "0";
const sc_lv<1> xfMat2AXIvideo::ap_const_lv1_1 = "1";
const sc_lv<2> xfMat2AXIvideo::ap_const_lv2_0 = "00";
const sc_lv<2> xfMat2AXIvideo::ap_const_lv2_2 = "10";
const sc_lv<2> xfMat2AXIvideo::ap_const_lv2_3 = "11";
const sc_lv<2> xfMat2AXIvideo::ap_const_lv2_1 = "1";
const sc_lv<32> xfMat2AXIvideo::ap_const_lv32_2 = "10";
const bool xfMat2AXIvideo::ap_const_boolean_0 = false;
const sc_lv<32> xfMat2AXIvideo::ap_const_lv32_1 = "1";
const sc_lv<11> xfMat2AXIvideo::ap_const_lv11_0 = "00000000000";
const sc_lv<32> xfMat2AXIvideo::ap_const_lv32_3 = "11";
const sc_lv<13> xfMat2AXIvideo::ap_const_lv13_1FFF = "1111111111111";
const sc_lv<11> xfMat2AXIvideo::ap_const_lv11_1 = "1";

xfMat2AXIvideo::xfMat2AXIvideo(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_ack_in);
    sensitive << ( AXI_video_strm_V_data_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_ack_out);
    sensitive << ( p_dst_TREADY );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_data_out);
    sensitive << ( AXI_video_strm_V_data_V_1_payload_A );
    sensitive << ( AXI_video_strm_V_data_V_1_payload_B );
    sensitive << ( AXI_video_strm_V_data_V_1_sel );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_load_A);
    sensitive << ( AXI_video_strm_V_data_V_1_sel_wr );
    sensitive << ( AXI_video_strm_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_load_B);
    sensitive << ( AXI_video_strm_V_data_V_1_sel_wr );
    sensitive << ( AXI_video_strm_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_sel);
    sensitive << ( AXI_video_strm_V_data_V_1_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_state_cmp_full);
    sensitive << ( AXI_video_strm_V_data_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_AXI_video_strm_V_data_V_1_vld_out);
    sensitive << ( AXI_video_strm_V_data_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_1_ack_in);
    sensitive << ( AXI_video_strm_V_dest_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_1_ack_out);
    sensitive << ( p_dst_TREADY );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_1_data_out);
    sensitive << ( AXI_video_strm_V_dest_V_1_sel );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_1_sel);
    sensitive << ( AXI_video_strm_V_dest_V_1_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_AXI_video_strm_V_dest_V_1_vld_out);
    sensitive << ( AXI_video_strm_V_dest_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_id_V_1_ack_in);
    sensitive << ( AXI_video_strm_V_id_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_id_V_1_ack_out);
    sensitive << ( p_dst_TREADY );

    SC_METHOD(thread_AXI_video_strm_V_id_V_1_data_out);
    sensitive << ( AXI_video_strm_V_id_V_1_sel );

    SC_METHOD(thread_AXI_video_strm_V_id_V_1_sel);
    sensitive << ( AXI_video_strm_V_id_V_1_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_id_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_AXI_video_strm_V_id_V_1_vld_out);
    sensitive << ( AXI_video_strm_V_id_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_1_ack_in);
    sensitive << ( AXI_video_strm_V_keep_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_1_ack_out);
    sensitive << ( p_dst_TREADY );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_1_data_out);
    sensitive << ( AXI_video_strm_V_keep_V_1_sel );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_1_sel);
    sensitive << ( AXI_video_strm_V_keep_V_1_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_AXI_video_strm_V_keep_V_1_vld_out);
    sensitive << ( AXI_video_strm_V_keep_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_ack_in);
    sensitive << ( AXI_video_strm_V_last_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_ack_out);
    sensitive << ( p_dst_TREADY );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_data_out);
    sensitive << ( AXI_video_strm_V_last_V_1_payload_A );
    sensitive << ( AXI_video_strm_V_last_V_1_payload_B );
    sensitive << ( AXI_video_strm_V_last_V_1_sel );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_load_A);
    sensitive << ( AXI_video_strm_V_last_V_1_sel_wr );
    sensitive << ( AXI_video_strm_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_load_B);
    sensitive << ( AXI_video_strm_V_last_V_1_sel_wr );
    sensitive << ( AXI_video_strm_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_sel);
    sensitive << ( AXI_video_strm_V_last_V_1_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_state_cmp_full);
    sensitive << ( AXI_video_strm_V_last_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_AXI_video_strm_V_last_V_1_vld_out);
    sensitive << ( AXI_video_strm_V_last_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_1_ack_in);
    sensitive << ( AXI_video_strm_V_strb_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_1_ack_out);
    sensitive << ( p_dst_TREADY );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_1_data_out);
    sensitive << ( AXI_video_strm_V_strb_V_1_sel );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_1_sel);
    sensitive << ( AXI_video_strm_V_strb_V_1_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_AXI_video_strm_V_strb_V_1_vld_out);
    sensitive << ( AXI_video_strm_V_strb_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_ack_in);
    sensitive << ( AXI_video_strm_V_user_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_ack_out);
    sensitive << ( p_dst_TREADY );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_data_out);
    sensitive << ( AXI_video_strm_V_user_V_1_payload_A );
    sensitive << ( AXI_video_strm_V_user_V_1_payload_B );
    sensitive << ( AXI_video_strm_V_user_V_1_sel );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_load_A);
    sensitive << ( AXI_video_strm_V_user_V_1_sel_wr );
    sensitive << ( AXI_video_strm_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_load_B);
    sensitive << ( AXI_video_strm_V_user_V_1_sel_wr );
    sensitive << ( AXI_video_strm_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_sel);
    sensitive << ( AXI_video_strm_V_user_V_1_sel_rd );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_state_cmp_full);
    sensitive << ( AXI_video_strm_V_user_V_1_state );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_AXI_video_strm_V_user_V_1_vld_out);
    sensitive << ( AXI_video_strm_V_user_V_1_state );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( img_data_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( img_data_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( img_data_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( img_rows_empty_n );
    sensitive << ( img_cols_empty_n );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( AXI_video_strm_V_data_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_keep_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_strb_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_user_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_last_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_id_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( AXI_video_strm_V_data_V_1_ack_in );
    sensitive << ( tmp_7_i_reg_278 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( img_data_V_empty_n );
    sensitive << ( tmp_7_i_reg_278 );

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( AXI_video_strm_V_data_V_1_ack_in );
    sensitive << ( tmp_7_i_reg_278_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( tmp_7_i_fu_222_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( AXI_video_strm_V_data_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_keep_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_strb_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_user_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_last_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_id_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_dest_V_1_ack_in );
    sensitive << ( tmp_4_i_fu_203_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( AXI_video_strm_V_data_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_keep_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_strb_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_user_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_last_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_id_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_dest_V_1_ack_in );
    sensitive << ( tmp_4_i_fu_203_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_axi_last_V_fu_233_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_i_reg_264 );
    sensitive << ( tmp_7_i_fu_222_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_cast_cast10_i_fu_214_p1 );

    SC_METHOD(thread_extLd8_cast_i_fu_184_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_cols_dout );

    SC_METHOD(thread_extLd8_cast_i_fu_184_p1);
    sensitive << ( extLd8_cast_i_fu_184_p0 );

    SC_METHOD(thread_i_cast_cast_i_fu_199_p1);
    sensitive << ( i_i_reg_162 );

    SC_METHOD(thread_i_fu_208_p2);
    sensitive << ( i_i_reg_162 );

    SC_METHOD(thread_img_cols_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_cols_empty_n );

    SC_METHOD(thread_img_cols_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_empty_n );
    sensitive << ( img_cols_empty_n );

    SC_METHOD(thread_img_data_V_blk_n);
    sensitive << ( img_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_i_reg_278 );

    SC_METHOD(thread_img_data_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_rows_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_empty_n );

    SC_METHOD(thread_img_rows_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_empty_n );
    sensitive << ( img_cols_empty_n );

    SC_METHOD(thread_j_cast_cast10_i_fu_214_p1);
    sensitive << ( j_i_reg_173 );

    SC_METHOD(thread_j_cast_cast_i_fu_218_p1);
    sensitive << ( j_i_reg_173 );

    SC_METHOD(thread_j_fu_227_p2);
    sensitive << ( j_i_reg_173 );

    SC_METHOD(thread_p_dst_TDATA);
    sensitive << ( AXI_video_strm_V_data_V_1_data_out );

    SC_METHOD(thread_p_dst_TDATA_blk_n);
    sensitive << ( AXI_video_strm_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_i_reg_278 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_7_i_reg_278_pp0_iter1_reg );

    SC_METHOD(thread_p_dst_TDEST);
    sensitive << ( AXI_video_strm_V_dest_V_1_data_out );

    SC_METHOD(thread_p_dst_TID);
    sensitive << ( AXI_video_strm_V_id_V_1_data_out );

    SC_METHOD(thread_p_dst_TKEEP);
    sensitive << ( AXI_video_strm_V_keep_V_1_data_out );

    SC_METHOD(thread_p_dst_TLAST);
    sensitive << ( AXI_video_strm_V_last_V_1_data_out );

    SC_METHOD(thread_p_dst_TSTRB);
    sensitive << ( AXI_video_strm_V_strb_V_1_data_out );

    SC_METHOD(thread_p_dst_TUSER);
    sensitive << ( AXI_video_strm_V_user_V_1_data_out );

    SC_METHOD(thread_p_dst_TVALID);
    sensitive << ( AXI_video_strm_V_dest_V_1_state );

    SC_METHOD(thread_tmp_3_i_fu_188_p2);
    sensitive << ( extLd8_cast_i_fu_184_p1 );

    SC_METHOD(thread_tmp_4_i_fu_203_p2);
    sensitive << ( AXI_video_strm_V_data_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_keep_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_strb_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_user_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_last_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_id_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_dest_V_1_ack_in );
    sensitive << ( img_rows_read_reg_254 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_cast_cast_i_fu_199_p1 );

    SC_METHOD(thread_tmp_7_i_fu_222_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( img_cols_read_reg_259 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_cast_cast_i_fu_218_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_rows_empty_n );
    sensitive << ( img_cols_empty_n );
    sensitive << ( AXI_video_strm_V_data_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_keep_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_strb_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_user_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_last_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_id_V_1_ack_in );
    sensitive << ( AXI_video_strm_V_dest_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_i_fu_203_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_i_fu_222_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    AXI_video_strm_V_data_V_1_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_data_V_1_sel_wr = SC_LOGIC_0;
    AXI_video_strm_V_data_V_1_state = "00";
    AXI_video_strm_V_keep_V_1_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_keep_V_1_state = "00";
    AXI_video_strm_V_strb_V_1_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_strb_V_1_state = "00";
    AXI_video_strm_V_user_V_1_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_user_V_1_sel_wr = SC_LOGIC_0;
    AXI_video_strm_V_user_V_1_state = "00";
    AXI_video_strm_V_last_V_1_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_last_V_1_sel_wr = SC_LOGIC_0;
    AXI_video_strm_V_last_V_1_state = "00";
    AXI_video_strm_V_id_V_1_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_id_V_1_state = "00";
    AXI_video_strm_V_dest_V_1_sel_rd = SC_LOGIC_0;
    AXI_video_strm_V_dest_V_1_state = "00";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xfMat2AXIvideo_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_rows_dout, "(port)img_rows_dout");
    sc_trace(mVcdFile, img_rows_empty_n, "(port)img_rows_empty_n");
    sc_trace(mVcdFile, img_rows_read, "(port)img_rows_read");
    sc_trace(mVcdFile, img_cols_dout, "(port)img_cols_dout");
    sc_trace(mVcdFile, img_cols_empty_n, "(port)img_cols_empty_n");
    sc_trace(mVcdFile, img_cols_read, "(port)img_cols_read");
    sc_trace(mVcdFile, img_data_V_dout, "(port)img_data_V_dout");
    sc_trace(mVcdFile, img_data_V_empty_n, "(port)img_data_V_empty_n");
    sc_trace(mVcdFile, img_data_V_read, "(port)img_data_V_read");
    sc_trace(mVcdFile, p_dst_TDATA, "(port)p_dst_TDATA");
    sc_trace(mVcdFile, p_dst_TVALID, "(port)p_dst_TVALID");
    sc_trace(mVcdFile, p_dst_TREADY, "(port)p_dst_TREADY");
    sc_trace(mVcdFile, p_dst_TKEEP, "(port)p_dst_TKEEP");
    sc_trace(mVcdFile, p_dst_TSTRB, "(port)p_dst_TSTRB");
    sc_trace(mVcdFile, p_dst_TUSER, "(port)p_dst_TUSER");
    sc_trace(mVcdFile, p_dst_TLAST, "(port)p_dst_TLAST");
    sc_trace(mVcdFile, p_dst_TID, "(port)p_dst_TID");
    sc_trace(mVcdFile, p_dst_TDEST, "(port)p_dst_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_data_out, "AXI_video_strm_V_data_V_1_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_vld_in, "AXI_video_strm_V_data_V_1_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_vld_out, "AXI_video_strm_V_data_V_1_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_ack_in, "AXI_video_strm_V_data_V_1_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_ack_out, "AXI_video_strm_V_data_V_1_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_payload_A, "AXI_video_strm_V_data_V_1_payload_A");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_payload_B, "AXI_video_strm_V_data_V_1_payload_B");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_sel_rd, "AXI_video_strm_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_sel_wr, "AXI_video_strm_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_sel, "AXI_video_strm_V_data_V_1_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_load_A, "AXI_video_strm_V_data_V_1_load_A");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_load_B, "AXI_video_strm_V_data_V_1_load_B");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_state, "AXI_video_strm_V_data_V_1_state");
    sc_trace(mVcdFile, AXI_video_strm_V_data_V_1_state_cmp_full, "AXI_video_strm_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_data_out, "AXI_video_strm_V_keep_V_1_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_vld_in, "AXI_video_strm_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_vld_out, "AXI_video_strm_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_ack_in, "AXI_video_strm_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_ack_out, "AXI_video_strm_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_sel_rd, "AXI_video_strm_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_sel, "AXI_video_strm_V_keep_V_1_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_keep_V_1_state, "AXI_video_strm_V_keep_V_1_state");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_data_out, "AXI_video_strm_V_strb_V_1_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_vld_in, "AXI_video_strm_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_vld_out, "AXI_video_strm_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_ack_in, "AXI_video_strm_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_ack_out, "AXI_video_strm_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_sel_rd, "AXI_video_strm_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_sel, "AXI_video_strm_V_strb_V_1_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_strb_V_1_state, "AXI_video_strm_V_strb_V_1_state");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_data_out, "AXI_video_strm_V_user_V_1_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_vld_in, "AXI_video_strm_V_user_V_1_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_vld_out, "AXI_video_strm_V_user_V_1_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_ack_in, "AXI_video_strm_V_user_V_1_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_ack_out, "AXI_video_strm_V_user_V_1_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_payload_A, "AXI_video_strm_V_user_V_1_payload_A");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_payload_B, "AXI_video_strm_V_user_V_1_payload_B");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_sel_rd, "AXI_video_strm_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_sel_wr, "AXI_video_strm_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_sel, "AXI_video_strm_V_user_V_1_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_load_A, "AXI_video_strm_V_user_V_1_load_A");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_load_B, "AXI_video_strm_V_user_V_1_load_B");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_state, "AXI_video_strm_V_user_V_1_state");
    sc_trace(mVcdFile, AXI_video_strm_V_user_V_1_state_cmp_full, "AXI_video_strm_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_data_out, "AXI_video_strm_V_last_V_1_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_vld_in, "AXI_video_strm_V_last_V_1_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_vld_out, "AXI_video_strm_V_last_V_1_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_ack_in, "AXI_video_strm_V_last_V_1_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_ack_out, "AXI_video_strm_V_last_V_1_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_payload_A, "AXI_video_strm_V_last_V_1_payload_A");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_payload_B, "AXI_video_strm_V_last_V_1_payload_B");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_sel_rd, "AXI_video_strm_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_sel_wr, "AXI_video_strm_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_sel, "AXI_video_strm_V_last_V_1_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_load_A, "AXI_video_strm_V_last_V_1_load_A");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_load_B, "AXI_video_strm_V_last_V_1_load_B");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_state, "AXI_video_strm_V_last_V_1_state");
    sc_trace(mVcdFile, AXI_video_strm_V_last_V_1_state_cmp_full, "AXI_video_strm_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_data_out, "AXI_video_strm_V_id_V_1_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_vld_in, "AXI_video_strm_V_id_V_1_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_vld_out, "AXI_video_strm_V_id_V_1_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_ack_in, "AXI_video_strm_V_id_V_1_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_ack_out, "AXI_video_strm_V_id_V_1_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_sel_rd, "AXI_video_strm_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_sel, "AXI_video_strm_V_id_V_1_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_id_V_1_state, "AXI_video_strm_V_id_V_1_state");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_data_out, "AXI_video_strm_V_dest_V_1_data_out");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_vld_in, "AXI_video_strm_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_vld_out, "AXI_video_strm_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_ack_in, "AXI_video_strm_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_ack_out, "AXI_video_strm_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_sel_rd, "AXI_video_strm_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_sel, "AXI_video_strm_V_dest_V_1_sel");
    sc_trace(mVcdFile, AXI_video_strm_V_dest_V_1_state, "AXI_video_strm_V_dest_V_1_state");
    sc_trace(mVcdFile, img_rows_blk_n, "img_rows_blk_n");
    sc_trace(mVcdFile, img_cols_blk_n, "img_cols_blk_n");
    sc_trace(mVcdFile, img_data_V_blk_n, "img_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_7_i_reg_278, "tmp_7_i_reg_278");
    sc_trace(mVcdFile, p_dst_TDATA_blk_n, "p_dst_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_7_i_reg_278_pp0_iter1_reg, "tmp_7_i_reg_278_pp0_iter1_reg");
    sc_trace(mVcdFile, j_i_reg_173, "j_i_reg_173");
    sc_trace(mVcdFile, img_rows_read_reg_254, "img_rows_read_reg_254");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, img_cols_read_reg_259, "img_cols_read_reg_259");
    sc_trace(mVcdFile, tmp_3_i_fu_188_p2, "tmp_3_i_fu_188_p2");
    sc_trace(mVcdFile, tmp_3_i_reg_264, "tmp_3_i_reg_264");
    sc_trace(mVcdFile, tmp_4_i_fu_203_p2, "tmp_4_i_fu_203_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_fu_208_p2, "i_fu_208_p2");
    sc_trace(mVcdFile, i_reg_273, "i_reg_273");
    sc_trace(mVcdFile, tmp_7_i_fu_222_p2, "tmp_7_i_fu_222_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_227_p2, "j_fu_227_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, axi_last_V_fu_233_p2, "axi_last_V_fu_233_p2");
    sc_trace(mVcdFile, axi_last_V_reg_287, "axi_last_V_reg_287");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, i_i_reg_162, "i_i_reg_162");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_user_V_fu_110, "tmp_user_V_fu_110");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, extLd8_cast_i_fu_184_p0, "extLd8_cast_i_fu_184_p0");
    sc_trace(mVcdFile, extLd8_cast_i_fu_184_p1, "extLd8_cast_i_fu_184_p1");
    sc_trace(mVcdFile, i_cast_cast_i_fu_199_p1, "i_cast_cast_i_fu_199_p1");
    sc_trace(mVcdFile, j_cast_cast_i_fu_218_p1, "j_cast_cast_i_fu_218_p1");
    sc_trace(mVcdFile, j_cast_cast10_i_fu_214_p1, "j_cast_cast10_i_fu_214_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

xfMat2AXIvideo::~xfMat2AXIvideo() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void xfMat2AXIvideo::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_vld_out.read()))) {
            AXI_video_strm_V_data_V_1_sel_rd =  (sc_logic) (~AXI_video_strm_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_ack_in.read()))) {
            AXI_video_strm_V_data_V_1_sel_wr =  (sc_logic) (~AXI_video_strm_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(AXI_video_strm_V_data_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(AXI_video_strm_V_data_V_1_state.read(), ap_const_lv2_2)))) {
            AXI_video_strm_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_1_state.read(), ap_const_lv2_1)))) {
            AXI_video_strm_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(AXI_video_strm_V_data_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(AXI_video_strm_V_data_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_ack_out.read()))))) {
            AXI_video_strm_V_data_V_1_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_vld_out.read()))) {
            AXI_video_strm_V_dest_V_1_sel_rd =  (sc_logic) (~AXI_video_strm_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_dest_V_1_state.read())))) {
            AXI_video_strm_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_dest_V_1_state.read())))) {
            AXI_video_strm_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_dest_V_1_ack_out.read()))))) {
            AXI_video_strm_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_vld_out.read()))) {
            AXI_video_strm_V_id_V_1_sel_rd =  (sc_logic) (~AXI_video_strm_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_id_V_1_state.read())))) {
            AXI_video_strm_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_id_V_1_state.read())))) {
            AXI_video_strm_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_id_V_1_ack_out.read()))))) {
            AXI_video_strm_V_id_V_1_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_vld_out.read()))) {
            AXI_video_strm_V_keep_V_1_sel_rd =  (sc_logic) (~AXI_video_strm_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_keep_V_1_state.read())))) {
            AXI_video_strm_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_keep_V_1_state.read())))) {
            AXI_video_strm_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_keep_V_1_ack_out.read()))))) {
            AXI_video_strm_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_vld_out.read()))) {
            AXI_video_strm_V_last_V_1_sel_rd =  (sc_logic) (~AXI_video_strm_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_ack_in.read()))) {
            AXI_video_strm_V_last_V_1_sel_wr =  (sc_logic) (~AXI_video_strm_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_last_V_1_state.read())))) {
            AXI_video_strm_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_last_V_1_state.read())))) {
            AXI_video_strm_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_ack_out.read()))))) {
            AXI_video_strm_V_last_V_1_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_vld_out.read()))) {
            AXI_video_strm_V_strb_V_1_sel_rd =  (sc_logic) (~AXI_video_strm_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_strb_V_1_state.read())))) {
            AXI_video_strm_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_strb_V_1_state.read())))) {
            AXI_video_strm_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_strb_V_1_ack_out.read()))))) {
            AXI_video_strm_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_vld_out.read()))) {
            AXI_video_strm_V_user_V_1_sel_rd =  (sc_logic) (~AXI_video_strm_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_ack_in.read()))) {
            AXI_video_strm_V_user_V_1_sel_wr =  (sc_logic) (~AXI_video_strm_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        AXI_video_strm_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_user_V_1_state.read())))) {
            AXI_video_strm_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_user_V_1_state.read())))) {
            AXI_video_strm_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, AXI_video_strm_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, AXI_video_strm_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, AXI_video_strm_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_ack_out.read()))))) {
            AXI_video_strm_V_user_V_1_state = ap_const_lv2_3;
        } else {
            AXI_video_strm_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_203_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_203_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_203_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_i_reg_162 = i_reg_273.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_empty_n.read())))) {
        i_i_reg_162 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_fu_222_p2.read()))) {
        j_i_reg_173 = j_fu_227_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_203_p2.read()))) {
        j_i_reg_173 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_user_V_fu_110 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_empty_n.read())))) {
        tmp_user_V_fu_110 = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_load_A.read())) {
        AXI_video_strm_V_data_V_1_payload_A = img_data_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_load_B.read())) {
        AXI_video_strm_V_data_V_1_payload_B = img_data_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_load_A.read())) {
        AXI_video_strm_V_last_V_1_payload_A = axi_last_V_reg_287.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_load_B.read())) {
        AXI_video_strm_V_last_V_1_payload_B = axi_last_V_reg_287.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_load_A.read())) {
        AXI_video_strm_V_user_V_1_payload_A = tmp_user_V_fu_110.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_load_B.read())) {
        AXI_video_strm_V_user_V_1_payload_B = tmp_user_V_fu_110.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_fu_222_p2.read()))) {
        axi_last_V_reg_287 = axi_last_V_fu_233_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())))) {
        i_reg_273 = i_fu_208_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_empty_n.read())))) {
        img_cols_read_reg_259 = img_cols_dout.read();
        img_rows_read_reg_254 = img_rows_dout.read();
        tmp_3_i_reg_264 = tmp_3_i_fu_188_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_7_i_reg_278 = tmp_7_i_fu_222_p2.read();
        tmp_7_i_reg_278_pp0_iter1_reg = tmp_7_i_reg_278.read();
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_ack_in() {
    AXI_video_strm_V_data_V_1_ack_in = AXI_video_strm_V_data_V_1_state.read()[1];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_ack_out() {
    AXI_video_strm_V_data_V_1_ack_out = p_dst_TREADY.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_data_V_1_sel.read())) {
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_B.read();
    } else {
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_A.read();
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_load_A() {
    AXI_video_strm_V_data_V_1_load_A = (AXI_video_strm_V_data_V_1_state_cmp_full.read() & ~AXI_video_strm_V_data_V_1_sel_wr.read());
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_load_B() {
    AXI_video_strm_V_data_V_1_load_B = (AXI_video_strm_V_data_V_1_sel_wr.read() & AXI_video_strm_V_data_V_1_state_cmp_full.read());
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_sel() {
    AXI_video_strm_V_data_V_1_sel = AXI_video_strm_V_data_V_1_sel_rd.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_state_cmp_full() {
    AXI_video_strm_V_data_V_1_state_cmp_full =  (sc_logic) ((!AXI_video_strm_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(AXI_video_strm_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AXI_video_strm_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        AXI_video_strm_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_data_V_1_vld_out() {
    AXI_video_strm_V_data_V_1_vld_out = AXI_video_strm_V_data_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_dest_V_1_ack_in() {
    AXI_video_strm_V_dest_V_1_ack_in = AXI_video_strm_V_dest_V_1_state.read()[1];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_dest_V_1_ack_out() {
    AXI_video_strm_V_dest_V_1_ack_out = p_dst_TREADY.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_dest_V_1_data_out() {
    AXI_video_strm_V_dest_V_1_data_out = ap_const_lv1_0;
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_dest_V_1_sel() {
    AXI_video_strm_V_dest_V_1_sel = AXI_video_strm_V_dest_V_1_sel_rd.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AXI_video_strm_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        AXI_video_strm_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_dest_V_1_vld_out() {
    AXI_video_strm_V_dest_V_1_vld_out = AXI_video_strm_V_dest_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_id_V_1_ack_in() {
    AXI_video_strm_V_id_V_1_ack_in = AXI_video_strm_V_id_V_1_state.read()[1];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_id_V_1_ack_out() {
    AXI_video_strm_V_id_V_1_ack_out = p_dst_TREADY.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_id_V_1_data_out() {
    AXI_video_strm_V_id_V_1_data_out = ap_const_lv1_0;
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_id_V_1_sel() {
    AXI_video_strm_V_id_V_1_sel = AXI_video_strm_V_id_V_1_sel_rd.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AXI_video_strm_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        AXI_video_strm_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_id_V_1_vld_out() {
    AXI_video_strm_V_id_V_1_vld_out = AXI_video_strm_V_id_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_keep_V_1_ack_in() {
    AXI_video_strm_V_keep_V_1_ack_in = AXI_video_strm_V_keep_V_1_state.read()[1];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_keep_V_1_ack_out() {
    AXI_video_strm_V_keep_V_1_ack_out = p_dst_TREADY.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_keep_V_1_data_out() {
    AXI_video_strm_V_keep_V_1_data_out = ap_const_lv1_1;
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_keep_V_1_sel() {
    AXI_video_strm_V_keep_V_1_sel = AXI_video_strm_V_keep_V_1_sel_rd.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AXI_video_strm_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        AXI_video_strm_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_keep_V_1_vld_out() {
    AXI_video_strm_V_keep_V_1_vld_out = AXI_video_strm_V_keep_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_ack_in() {
    AXI_video_strm_V_last_V_1_ack_in = AXI_video_strm_V_last_V_1_state.read()[1];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_ack_out() {
    AXI_video_strm_V_last_V_1_ack_out = p_dst_TREADY.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_last_V_1_sel.read())) {
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_B.read();
    } else {
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_A.read();
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_load_A() {
    AXI_video_strm_V_last_V_1_load_A = (AXI_video_strm_V_last_V_1_state_cmp_full.read() & ~AXI_video_strm_V_last_V_1_sel_wr.read());
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_load_B() {
    AXI_video_strm_V_last_V_1_load_B = (AXI_video_strm_V_last_V_1_sel_wr.read() & AXI_video_strm_V_last_V_1_state_cmp_full.read());
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_sel() {
    AXI_video_strm_V_last_V_1_sel = AXI_video_strm_V_last_V_1_sel_rd.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_state_cmp_full() {
    AXI_video_strm_V_last_V_1_state_cmp_full =  (sc_logic) ((!AXI_video_strm_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(AXI_video_strm_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AXI_video_strm_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        AXI_video_strm_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_last_V_1_vld_out() {
    AXI_video_strm_V_last_V_1_vld_out = AXI_video_strm_V_last_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_strb_V_1_ack_in() {
    AXI_video_strm_V_strb_V_1_ack_in = AXI_video_strm_V_strb_V_1_state.read()[1];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_strb_V_1_ack_out() {
    AXI_video_strm_V_strb_V_1_ack_out = p_dst_TREADY.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_strb_V_1_data_out() {
    AXI_video_strm_V_strb_V_1_data_out = ap_const_lv1_0;
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_strb_V_1_sel() {
    AXI_video_strm_V_strb_V_1_sel = AXI_video_strm_V_strb_V_1_sel_rd.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AXI_video_strm_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        AXI_video_strm_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_strb_V_1_vld_out() {
    AXI_video_strm_V_strb_V_1_vld_out = AXI_video_strm_V_strb_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_ack_in() {
    AXI_video_strm_V_user_V_1_ack_in = AXI_video_strm_V_user_V_1_state.read()[1];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_ack_out() {
    AXI_video_strm_V_user_V_1_ack_out = p_dst_TREADY.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, AXI_video_strm_V_user_V_1_sel.read())) {
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_B.read();
    } else {
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_A.read();
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_load_A() {
    AXI_video_strm_V_user_V_1_load_A = (AXI_video_strm_V_user_V_1_state_cmp_full.read() & ~AXI_video_strm_V_user_V_1_sel_wr.read());
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_load_B() {
    AXI_video_strm_V_user_V_1_load_B = (AXI_video_strm_V_user_V_1_sel_wr.read() & AXI_video_strm_V_user_V_1_state_cmp_full.read());
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_sel() {
    AXI_video_strm_V_user_V_1_sel = AXI_video_strm_V_user_V_1_sel_rd.read();
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_state_cmp_full() {
    AXI_video_strm_V_user_V_1_state_cmp_full =  (sc_logic) ((!AXI_video_strm_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(AXI_video_strm_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        AXI_video_strm_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        AXI_video_strm_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_AXI_video_strm_V_user_V_1_vld_out() {
    AXI_video_strm_V_user_V_1_vld_out = AXI_video_strm_V_user_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void xfMat2AXIvideo::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void xfMat2AXIvideo::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void xfMat2AXIvideo::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void xfMat2AXIvideo::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xfMat2AXIvideo::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_empty_n.read()));
}

void xfMat2AXIvideo::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_empty_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void xfMat2AXIvideo::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_empty_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void xfMat2AXIvideo::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_empty_n.read()));
}

void xfMat2AXIvideo::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read()));
}

void xfMat2AXIvideo::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xfMat2AXIvideo::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()));
}

void xfMat2AXIvideo::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_empty_n.read()));
}

void xfMat2AXIvideo::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()));
}

void xfMat2AXIvideo::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xfMat2AXIvideo::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_i_fu_222_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_203_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void xfMat2AXIvideo::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void xfMat2AXIvideo::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_203_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_axi_last_V_fu_233_p2() {
    axi_last_V_fu_233_p2 = (!j_cast_cast10_i_fu_214_p1.read().is_01() || !tmp_3_i_reg_264.read().is_01())? sc_lv<1>(): sc_lv<1>(j_cast_cast10_i_fu_214_p1.read() == tmp_3_i_reg_264.read());
}

void xfMat2AXIvideo::thread_extLd8_cast_i_fu_184_p0() {
    extLd8_cast_i_fu_184_p0 = img_cols_dout.read();
}

void xfMat2AXIvideo::thread_extLd8_cast_i_fu_184_p1() {
    extLd8_cast_i_fu_184_p1 = esl_sext<13,12>(extLd8_cast_i_fu_184_p0.read());
}

void xfMat2AXIvideo::thread_i_cast_cast_i_fu_199_p1() {
    i_cast_cast_i_fu_199_p1 = esl_zext<12,11>(i_i_reg_162.read());
}

void xfMat2AXIvideo::thread_i_fu_208_p2() {
    i_fu_208_p2 = (!i_i_reg_162.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i_i_reg_162.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void xfMat2AXIvideo::thread_img_cols_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        img_cols_blk_n = img_cols_empty_n.read();
    } else {
        img_cols_blk_n = ap_const_logic_1;
    }
}

void xfMat2AXIvideo::thread_img_cols_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_empty_n.read())))) {
        img_cols_read = ap_const_logic_1;
    } else {
        img_cols_read = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_img_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()))) {
        img_data_V_blk_n = img_data_V_empty_n.read();
    } else {
        img_data_V_blk_n = ap_const_logic_1;
    }
}

void xfMat2AXIvideo::thread_img_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_V_read = ap_const_logic_1;
    } else {
        img_data_V_read = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_img_rows_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        img_rows_blk_n = img_rows_empty_n.read();
    } else {
        img_rows_blk_n = ap_const_logic_1;
    }
}

void xfMat2AXIvideo::thread_img_rows_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_empty_n.read())))) {
        img_rows_read = ap_const_logic_1;
    } else {
        img_rows_read = ap_const_logic_0;
    }
}

void xfMat2AXIvideo::thread_j_cast_cast10_i_fu_214_p1() {
    j_cast_cast10_i_fu_214_p1 = esl_zext<13,11>(j_i_reg_173.read());
}

void xfMat2AXIvideo::thread_j_cast_cast_i_fu_218_p1() {
    j_cast_cast_i_fu_218_p1 = esl_zext<12,11>(j_i_reg_173.read());
}

void xfMat2AXIvideo::thread_j_fu_227_p2() {
    j_fu_227_p2 = (!j_i_reg_173.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j_i_reg_173.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void xfMat2AXIvideo::thread_p_dst_TDATA() {
    p_dst_TDATA = AXI_video_strm_V_data_V_1_data_out.read();
}

void xfMat2AXIvideo::thread_p_dst_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_i_reg_278_pp0_iter1_reg.read())))) {
        p_dst_TDATA_blk_n = AXI_video_strm_V_data_V_1_state.read()[1];
    } else {
        p_dst_TDATA_blk_n = ap_const_logic_1;
    }
}

void xfMat2AXIvideo::thread_p_dst_TDEST() {
    p_dst_TDEST = AXI_video_strm_V_dest_V_1_data_out.read();
}

void xfMat2AXIvideo::thread_p_dst_TID() {
    p_dst_TID = AXI_video_strm_V_id_V_1_data_out.read();
}

void xfMat2AXIvideo::thread_p_dst_TKEEP() {
    p_dst_TKEEP = AXI_video_strm_V_keep_V_1_data_out.read();
}

void xfMat2AXIvideo::thread_p_dst_TLAST() {
    p_dst_TLAST = AXI_video_strm_V_last_V_1_data_out.read();
}

void xfMat2AXIvideo::thread_p_dst_TSTRB() {
    p_dst_TSTRB = AXI_video_strm_V_strb_V_1_data_out.read();
}

void xfMat2AXIvideo::thread_p_dst_TUSER() {
    p_dst_TUSER = AXI_video_strm_V_user_V_1_data_out.read();
}

void xfMat2AXIvideo::thread_p_dst_TVALID() {
    p_dst_TVALID = AXI_video_strm_V_dest_V_1_state.read()[0];
}

void xfMat2AXIvideo::thread_tmp_3_i_fu_188_p2() {
    tmp_3_i_fu_188_p2 = (!extLd8_cast_i_fu_184_p1.read().is_01() || !ap_const_lv13_1FFF.is_01())? sc_lv<13>(): (sc_bigint<13>(extLd8_cast_i_fu_184_p1.read()) + sc_bigint<13>(ap_const_lv13_1FFF));
}

void xfMat2AXIvideo::thread_tmp_4_i_fu_203_p2() {
    tmp_4_i_fu_203_p2 = (!i_cast_cast_i_fu_199_p1.read().is_01() || !img_rows_read_reg_254.read().is_01())? sc_lv<1>(): (sc_bigint<12>(i_cast_cast_i_fu_199_p1.read()) < sc_bigint<12>(img_rows_read_reg_254.read()));
}

void xfMat2AXIvideo::thread_tmp_7_i_fu_222_p2() {
    tmp_7_i_fu_222_p2 = (!j_cast_cast_i_fu_218_p1.read().is_01() || !img_cols_read_reg_259.read().is_01())? sc_lv<1>(): (sc_bigint<12>(j_cast_cast_i_fu_218_p1.read()) < sc_bigint<12>(img_cols_read_reg_259.read()));
}

void xfMat2AXIvideo::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_cols_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_203_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, AXI_video_strm_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_203_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_i_fu_222_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_i_fu_222_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

