// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "warpTransform.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic warpTransform::ap_const_logic_0 = sc_dt::Log_0;
const bool warpTransform::ap_const_boolean_1 = true;
const sc_logic warpTransform::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<8> warpTransform::ap_const_lv8_0 = "00000000";
const sc_lv<4> warpTransform::ap_const_lv4_0 = "0000";
const sc_lv<32> warpTransform::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<12> warpTransform::ap_const_lv12_0 = "000000000000";
const sc_lv<2> warpTransform::ap_const_lv2_0 = "00";
const sc_lv<2> warpTransform::ap_const_lv2_1 = "1";

warpTransform::warpTransform(sc_module_name name) : sc_module(name), mVcdFile(0) {
    warpTransform_Block_1_U0 = new warpTransform_Block_1("warpTransform_Block_1_U0");
    warpTransform_Block_1_U0->ap_clk(ap_clk);
    warpTransform_Block_1_U0->ap_rst(ap_rst);
    warpTransform_Block_1_U0->ap_start(warpTransform_Block_1_U0_ap_start);
    warpTransform_Block_1_U0->start_full_n(start_for_warpTransform_Loop_4_U0_full_n);
    warpTransform_Block_1_U0->ap_done(warpTransform_Block_1_U0_ap_done);
    warpTransform_Block_1_U0->ap_continue(warpTransform_Block_1_U0_ap_continue);
    warpTransform_Block_1_U0->ap_idle(warpTransform_Block_1_U0_ap_idle);
    warpTransform_Block_1_U0->ap_ready(warpTransform_Block_1_U0_ap_ready);
    warpTransform_Block_1_U0->start_out(warpTransform_Block_1_U0_start_out);
    warpTransform_Block_1_U0->start_write(warpTransform_Block_1_U0_start_write);
    warpTransform_Block_1_U0->scalar_dst_mat_cols_dout(p_dst_mat_cols_dout);
    warpTransform_Block_1_U0->scalar_dst_mat_cols_empty_n(p_dst_mat_cols_empty_n);
    warpTransform_Block_1_U0->scalar_dst_mat_cols_read(warpTransform_Block_1_U0_scalar_dst_mat_cols_read);
    warpTransform_Block_1_U0->p_dst_mat_cols_out_din(warpTransform_Block_1_U0_p_dst_mat_cols_out_din);
    warpTransform_Block_1_U0->p_dst_mat_cols_out_full_n(p_dst_mat_cols_out_full_n);
    warpTransform_Block_1_U0->p_dst_mat_cols_out_write(warpTransform_Block_1_U0_p_dst_mat_cols_out_write);
    warpTransform_Block_1_U0->scalar_dst_mat_rows_dout(p_dst_mat_rows_dout);
    warpTransform_Block_1_U0->scalar_dst_mat_rows_empty_n(p_dst_mat_rows_empty_n);
    warpTransform_Block_1_U0->scalar_dst_mat_rows_read(warpTransform_Block_1_U0_scalar_dst_mat_rows_read);
    warpTransform_Block_1_U0->p_dst_mat_rows_out_din(warpTransform_Block_1_U0_p_dst_mat_rows_out_din);
    warpTransform_Block_1_U0->p_dst_mat_rows_out_full_n(p_dst_mat_rows_out_full_n);
    warpTransform_Block_1_U0->p_dst_mat_rows_out_write(warpTransform_Block_1_U0_p_dst_mat_rows_out_write);
    warpTransform_Block_1_U0->p_src_mat_cols_dout(p_src_mat_cols_dout);
    warpTransform_Block_1_U0->p_src_mat_cols_empty_n(p_src_mat_cols_empty_n);
    warpTransform_Block_1_U0->p_src_mat_cols_read(warpTransform_Block_1_U0_p_src_mat_cols_read);
    warpTransform_Block_1_U0->p_src_mat_rows_dout(p_src_mat_rows_dout);
    warpTransform_Block_1_U0->p_src_mat_rows_empty_n(p_src_mat_rows_empty_n);
    warpTransform_Block_1_U0->p_src_mat_rows_read(warpTransform_Block_1_U0_p_src_mat_rows_read);
    warpTransform_Block_1_U0->p_src_mat_cols_load337_loc_c_i_din(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din);
    warpTransform_Block_1_U0->p_src_mat_cols_load337_loc_c_i_full_n(p_src_mat_cols_load33_1_full_n);
    warpTransform_Block_1_U0->p_src_mat_cols_load337_loc_c_i_write(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write);
    warpTransform_Block_1_U0->p_src_mat_rows_c_i_din(warpTransform_Block_1_U0_p_src_mat_rows_c_i_din);
    warpTransform_Block_1_U0->p_src_mat_rows_c_i_full_n(p_src_mat_rows_c_i_full_n);
    warpTransform_Block_1_U0->p_src_mat_rows_c_i_write(warpTransform_Block_1_U0_p_src_mat_rows_c_i_write);
    warpTransform_Block_1_U0->p_dst_mat_rows_c_i_din(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din);
    warpTransform_Block_1_U0->p_dst_mat_rows_c_i_full_n(p_dst_mat_rows_c_i_full_n);
    warpTransform_Block_1_U0->p_dst_mat_rows_c_i_write(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write);
    warpTransform_Block_1_U0->p_dst_mat_cols_c_i_din(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din);
    warpTransform_Block_1_U0->p_dst_mat_cols_c_i_full_n(p_dst_mat_cols_c_i_full_n);
    warpTransform_Block_1_U0->p_dst_mat_cols_c_i_write(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write);
    warpTransform_Loop_1_U0 = new warpTransform_Loop_1("warpTransform_Loop_1_U0");
    warpTransform_Loop_1_U0->ap_clk(ap_clk);
    warpTransform_Loop_1_U0->ap_rst(ap_rst);
    warpTransform_Loop_1_U0->ap_start(warpTransform_Loop_1_U0_ap_start);
    warpTransform_Loop_1_U0->ap_done(warpTransform_Loop_1_U0_ap_done);
    warpTransform_Loop_1_U0->ap_continue(warpTransform_Loop_1_U0_ap_continue);
    warpTransform_Loop_1_U0->ap_idle(warpTransform_Loop_1_U0_ap_idle);
    warpTransform_Loop_1_U0->ap_ready(warpTransform_Loop_1_U0_ap_ready);
    warpTransform_Loop_1_U0->p_src_mat_rows_dout(p_src_mat_rows_c_i_dout);
    warpTransform_Loop_1_U0->p_src_mat_rows_empty_n(p_src_mat_rows_c_i_empty_n);
    warpTransform_Loop_1_U0->p_src_mat_rows_read(warpTransform_Loop_1_U0_p_src_mat_rows_read);
    warpTransform_Loop_1_U0->p_src_mat_cols_load337_loc_dout(p_src_mat_cols_load33_1_dout);
    warpTransform_Loop_1_U0->p_src_mat_cols_load337_loc_empty_n(p_src_mat_cols_load33_1_empty_n);
    warpTransform_Loop_1_U0->p_src_mat_cols_load337_loc_read(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read);
    warpTransform_Loop_1_U0->p_src_mat_data_V_dout(p_src_mat_data_V_dout);
    warpTransform_Loop_1_U0->p_src_mat_data_V_empty_n(p_src_mat_data_V_empty_n);
    warpTransform_Loop_1_U0->p_src_mat_data_V_read(warpTransform_Loop_1_U0_p_src_mat_data_V_read);
    warpTransform_Loop_1_U0->in_stream_V_V_din(warpTransform_Loop_1_U0_in_stream_V_V_din);
    warpTransform_Loop_1_U0->in_stream_V_V_full_n(in_stream_V_V_full_n);
    warpTransform_Loop_1_U0->in_stream_V_V_write(warpTransform_Loop_1_U0_in_stream_V_V_write);
    warpTransform_Loop_1_U0->p_src_mat_cols_load337_loc_out_din(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din);
    warpTransform_Loop_1_U0->p_src_mat_cols_load337_loc_out_full_n(p_src_mat_cols_load33_full_n);
    warpTransform_Loop_1_U0->p_src_mat_cols_load337_loc_out_write(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write);
    warpTransform_Loop_1_U0->ap_return(warpTransform_Loop_1_U0_ap_return);
    warpTransform_Block_U0 = new warpTransform_Block_s("warpTransform_Block_U0");
    warpTransform_Block_U0->ap_clk(ap_clk);
    warpTransform_Block_U0->ap_rst(ap_rst);
    warpTransform_Block_U0->ap_start(warpTransform_Block_U0_ap_start);
    warpTransform_Block_U0->ap_done(warpTransform_Block_U0_ap_done);
    warpTransform_Block_U0->ap_continue(warpTransform_Block_U0_ap_continue);
    warpTransform_Block_U0->ap_idle(warpTransform_Block_U0_ap_idle);
    warpTransform_Block_U0->ap_ready(warpTransform_Block_U0_ap_ready);
    warpTransform_Block_U0->P_matrix_address0(warpTransform_Block_U0_P_matrix_address0);
    warpTransform_Block_U0->P_matrix_ce0(warpTransform_Block_U0_P_matrix_ce0);
    warpTransform_Block_U0->P_matrix_q0(P_matrix_q0);
    warpTransform_Block_U0->p_read(p_src_mat_rows_load_dout);
    warpTransform_Block_U0->p_src_mat_cols_load337_loc_dout(p_src_mat_cols_load33_dout);
    warpTransform_Block_U0->p_src_mat_cols_load337_loc_empty_n(p_src_mat_cols_load33_empty_n);
    warpTransform_Block_U0->p_src_mat_cols_load337_loc_read(warpTransform_Block_U0_p_src_mat_cols_load337_loc_read);
    warpTransform_Block_U0->in_stream_V_V_dout(in_stream_V_V_dout);
    warpTransform_Block_U0->in_stream_V_V_empty_n(in_stream_V_V_empty_n);
    warpTransform_Block_U0->in_stream_V_V_read(warpTransform_Block_U0_in_stream_V_V_read);
    warpTransform_Block_U0->out_stream_V_V_din(warpTransform_Block_U0_out_stream_V_V_din);
    warpTransform_Block_U0->out_stream_V_V_full_n(out_stream_V_V_full_n);
    warpTransform_Block_U0->out_stream_V_V_write(warpTransform_Block_U0_out_stream_V_V_write);
    warpTransform_Loop_4_U0 = new warpTransform_Loop_4("warpTransform_Loop_4_U0");
    warpTransform_Loop_4_U0->ap_clk(ap_clk);
    warpTransform_Loop_4_U0->ap_rst(ap_rst);
    warpTransform_Loop_4_U0->ap_start(warpTransform_Loop_4_U0_ap_start);
    warpTransform_Loop_4_U0->ap_done(warpTransform_Loop_4_U0_ap_done);
    warpTransform_Loop_4_U0->ap_continue(warpTransform_Loop_4_U0_ap_continue);
    warpTransform_Loop_4_U0->ap_idle(warpTransform_Loop_4_U0_ap_idle);
    warpTransform_Loop_4_U0->ap_ready(warpTransform_Loop_4_U0_ap_ready);
    warpTransform_Loop_4_U0->p_dst_mat_rows_dout(p_dst_mat_rows_c_i_dout);
    warpTransform_Loop_4_U0->p_dst_mat_rows_empty_n(p_dst_mat_rows_c_i_empty_n);
    warpTransform_Loop_4_U0->p_dst_mat_rows_read(warpTransform_Loop_4_U0_p_dst_mat_rows_read);
    warpTransform_Loop_4_U0->p_dst_mat_cols_dout(p_dst_mat_cols_c_i_dout);
    warpTransform_Loop_4_U0->p_dst_mat_cols_empty_n(p_dst_mat_cols_c_i_empty_n);
    warpTransform_Loop_4_U0->p_dst_mat_cols_read(warpTransform_Loop_4_U0_p_dst_mat_cols_read);
    warpTransform_Loop_4_U0->out_stream_V_V_dout(out_stream_V_V_dout);
    warpTransform_Loop_4_U0->out_stream_V_V_empty_n(out_stream_V_V_empty_n);
    warpTransform_Loop_4_U0->out_stream_V_V_read(warpTransform_Loop_4_U0_out_stream_V_V_read);
    warpTransform_Loop_4_U0->p_dst_mat_data_V_din(warpTransform_Loop_4_U0_p_dst_mat_data_V_din);
    warpTransform_Loop_4_U0->p_dst_mat_data_V_full_n(p_dst_mat_data_V_full_n);
    warpTransform_Loop_4_U0->p_dst_mat_data_V_write(warpTransform_Loop_4_U0_p_dst_mat_data_V_write);
    p_src_mat_cols_load33_1_U = new fifo_w12_d2_A("p_src_mat_cols_load33_1_U");
    p_src_mat_cols_load33_1_U->clk(ap_clk);
    p_src_mat_cols_load33_1_U->reset(ap_rst);
    p_src_mat_cols_load33_1_U->if_read_ce(ap_var_for_const0);
    p_src_mat_cols_load33_1_U->if_write_ce(ap_var_for_const0);
    p_src_mat_cols_load33_1_U->if_din(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din);
    p_src_mat_cols_load33_1_U->if_full_n(p_src_mat_cols_load33_1_full_n);
    p_src_mat_cols_load33_1_U->if_write(warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write);
    p_src_mat_cols_load33_1_U->if_dout(p_src_mat_cols_load33_1_dout);
    p_src_mat_cols_load33_1_U->if_empty_n(p_src_mat_cols_load33_1_empty_n);
    p_src_mat_cols_load33_1_U->if_read(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read);
    p_src_mat_rows_c_i_U = new fifo_w12_d2_A("p_src_mat_rows_c_i_U");
    p_src_mat_rows_c_i_U->clk(ap_clk);
    p_src_mat_rows_c_i_U->reset(ap_rst);
    p_src_mat_rows_c_i_U->if_read_ce(ap_var_for_const0);
    p_src_mat_rows_c_i_U->if_write_ce(ap_var_for_const0);
    p_src_mat_rows_c_i_U->if_din(warpTransform_Block_1_U0_p_src_mat_rows_c_i_din);
    p_src_mat_rows_c_i_U->if_full_n(p_src_mat_rows_c_i_full_n);
    p_src_mat_rows_c_i_U->if_write(warpTransform_Block_1_U0_p_src_mat_rows_c_i_write);
    p_src_mat_rows_c_i_U->if_dout(p_src_mat_rows_c_i_dout);
    p_src_mat_rows_c_i_U->if_empty_n(p_src_mat_rows_c_i_empty_n);
    p_src_mat_rows_c_i_U->if_read(warpTransform_Loop_1_U0_p_src_mat_rows_read);
    p_dst_mat_rows_c_i_U = new fifo_w12_d4_A("p_dst_mat_rows_c_i_U");
    p_dst_mat_rows_c_i_U->clk(ap_clk);
    p_dst_mat_rows_c_i_U->reset(ap_rst);
    p_dst_mat_rows_c_i_U->if_read_ce(ap_var_for_const0);
    p_dst_mat_rows_c_i_U->if_write_ce(ap_var_for_const0);
    p_dst_mat_rows_c_i_U->if_din(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din);
    p_dst_mat_rows_c_i_U->if_full_n(p_dst_mat_rows_c_i_full_n);
    p_dst_mat_rows_c_i_U->if_write(warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write);
    p_dst_mat_rows_c_i_U->if_dout(p_dst_mat_rows_c_i_dout);
    p_dst_mat_rows_c_i_U->if_empty_n(p_dst_mat_rows_c_i_empty_n);
    p_dst_mat_rows_c_i_U->if_read(warpTransform_Loop_4_U0_p_dst_mat_rows_read);
    p_dst_mat_cols_c_i_U = new fifo_w12_d4_A("p_dst_mat_cols_c_i_U");
    p_dst_mat_cols_c_i_U->clk(ap_clk);
    p_dst_mat_cols_c_i_U->reset(ap_rst);
    p_dst_mat_cols_c_i_U->if_read_ce(ap_var_for_const0);
    p_dst_mat_cols_c_i_U->if_write_ce(ap_var_for_const0);
    p_dst_mat_cols_c_i_U->if_din(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din);
    p_dst_mat_cols_c_i_U->if_full_n(p_dst_mat_cols_c_i_full_n);
    p_dst_mat_cols_c_i_U->if_write(warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write);
    p_dst_mat_cols_c_i_U->if_dout(p_dst_mat_cols_c_i_dout);
    p_dst_mat_cols_c_i_U->if_empty_n(p_dst_mat_cols_c_i_empty_n);
    p_dst_mat_cols_c_i_U->if_read(warpTransform_Loop_4_U0_p_dst_mat_cols_read);
    in_stream_V_V_U = new fifo_w8_d2_A("in_stream_V_V_U");
    in_stream_V_V_U->clk(ap_clk);
    in_stream_V_V_U->reset(ap_rst);
    in_stream_V_V_U->if_read_ce(ap_var_for_const0);
    in_stream_V_V_U->if_write_ce(ap_var_for_const0);
    in_stream_V_V_U->if_din(warpTransform_Loop_1_U0_in_stream_V_V_din);
    in_stream_V_V_U->if_full_n(in_stream_V_V_full_n);
    in_stream_V_V_U->if_write(warpTransform_Loop_1_U0_in_stream_V_V_write);
    in_stream_V_V_U->if_dout(in_stream_V_V_dout);
    in_stream_V_V_U->if_empty_n(in_stream_V_V_empty_n);
    in_stream_V_V_U->if_read(warpTransform_Block_U0_in_stream_V_V_read);
    p_src_mat_cols_load33_U = new fifo_w12_d2_A("p_src_mat_cols_load33_U");
    p_src_mat_cols_load33_U->clk(ap_clk);
    p_src_mat_cols_load33_U->reset(ap_rst);
    p_src_mat_cols_load33_U->if_read_ce(ap_var_for_const0);
    p_src_mat_cols_load33_U->if_write_ce(ap_var_for_const0);
    p_src_mat_cols_load33_U->if_din(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din);
    p_src_mat_cols_load33_U->if_full_n(p_src_mat_cols_load33_full_n);
    p_src_mat_cols_load33_U->if_write(warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write);
    p_src_mat_cols_load33_U->if_dout(p_src_mat_cols_load33_dout);
    p_src_mat_cols_load33_U->if_empty_n(p_src_mat_cols_load33_empty_n);
    p_src_mat_cols_load33_U->if_read(warpTransform_Block_U0_p_src_mat_cols_load337_loc_read);
    p_src_mat_rows_load_U = new fifo_w12_d2_A("p_src_mat_rows_load_U");
    p_src_mat_rows_load_U->clk(ap_clk);
    p_src_mat_rows_load_U->reset(ap_rst);
    p_src_mat_rows_load_U->if_read_ce(ap_var_for_const0);
    p_src_mat_rows_load_U->if_write_ce(ap_var_for_const0);
    p_src_mat_rows_load_U->if_din(warpTransform_Loop_1_U0_ap_return);
    p_src_mat_rows_load_U->if_full_n(p_src_mat_rows_load_full_n);
    p_src_mat_rows_load_U->if_write(warpTransform_Loop_1_U0_ap_done);
    p_src_mat_rows_load_U->if_dout(p_src_mat_rows_load_dout);
    p_src_mat_rows_load_U->if_empty_n(p_src_mat_rows_load_empty_n);
    p_src_mat_rows_load_U->if_read(warpTransform_Block_U0_ap_ready);
    out_stream_V_V_U = new fifo_w8_d2_A("out_stream_V_V_U");
    out_stream_V_V_U->clk(ap_clk);
    out_stream_V_V_U->reset(ap_rst);
    out_stream_V_V_U->if_read_ce(ap_var_for_const0);
    out_stream_V_V_U->if_write_ce(ap_var_for_const0);
    out_stream_V_V_U->if_din(warpTransform_Block_U0_out_stream_V_V_din);
    out_stream_V_V_U->if_full_n(out_stream_V_V_full_n);
    out_stream_V_V_U->if_write(warpTransform_Block_U0_out_stream_V_V_write);
    out_stream_V_V_U->if_dout(out_stream_V_V_dout);
    out_stream_V_V_U->if_empty_n(out_stream_V_V_empty_n);
    out_stream_V_V_U->if_read(warpTransform_Loop_4_U0_out_stream_V_V_read);
    start_for_warpTrab2s_U = new start_for_warpTrab2s("start_for_warpTrab2s_U");
    start_for_warpTrab2s_U->clk(ap_clk);
    start_for_warpTrab2s_U->reset(ap_rst);
    start_for_warpTrab2s_U->if_read_ce(ap_var_for_const0);
    start_for_warpTrab2s_U->if_write_ce(ap_var_for_const0);
    start_for_warpTrab2s_U->if_din(start_for_warpTransform_Loop_4_U0_din);
    start_for_warpTrab2s_U->if_full_n(start_for_warpTransform_Loop_4_U0_full_n);
    start_for_warpTrab2s_U->if_write(warpTransform_Block_1_U0_start_write);
    start_for_warpTrab2s_U->if_dout(start_for_warpTransform_Loop_4_U0_dout);
    start_for_warpTrab2s_U->if_empty_n(start_for_warpTransform_Loop_4_U0_empty_n);
    start_for_warpTrab2s_U->if_read(warpTransform_Loop_4_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_P_matrix_address0);
    sensitive << ( warpTransform_Block_U0_P_matrix_address0 );

    SC_METHOD(thread_P_matrix_address1);

    SC_METHOD(thread_P_matrix_ce0);
    sensitive << ( warpTransform_Block_U0_P_matrix_ce0 );

    SC_METHOD(thread_P_matrix_ce1);

    SC_METHOD(thread_P_matrix_d0);

    SC_METHOD(thread_P_matrix_d1);

    SC_METHOD(thread_P_matrix_we0);

    SC_METHOD(thread_P_matrix_we1);

    SC_METHOD(thread_ap_channel_done_p_src_mat_rows_load);
    sensitive << ( warpTransform_Loop_1_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( warpTransform_Block_1_U0_ap_idle );
    sensitive << ( warpTransform_Loop_1_U0_ap_idle );
    sensitive << ( warpTransform_Block_U0_ap_idle );
    sensitive << ( warpTransform_Loop_4_U0_ap_idle );
    sensitive << ( p_src_mat_rows_load_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_sync_done );
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( warpTransform_Block_1_U0_ap_done );
    sensitive << ( warpTransform_Loop_4_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_warpTransform_Block_1_U0_ap_ready );
    sensitive << ( ap_sync_warpTransform_Loop_1_U0_ap_ready );
    sensitive << ( ap_sync_warpTransform_Block_U0_ap_ready );

    SC_METHOD(thread_ap_sync_warpTransform_Block_1_U0_ap_ready);
    sensitive << ( warpTransform_Block_1_U0_ap_ready );
    sensitive << ( ap_sync_reg_warpTransform_Block_1_U0_ap_ready );

    SC_METHOD(thread_ap_sync_warpTransform_Block_U0_ap_ready);
    sensitive << ( warpTransform_Block_U0_ap_ready );
    sensitive << ( ap_sync_reg_warpTransform_Block_U0_ap_ready );

    SC_METHOD(thread_ap_sync_warpTransform_Loop_1_U0_ap_ready);
    sensitive << ( warpTransform_Loop_1_U0_ap_ready );
    sensitive << ( ap_sync_reg_warpTransform_Loop_1_U0_ap_ready );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_p_dst_mat_cols_out_din);
    sensitive << ( warpTransform_Block_1_U0_p_dst_mat_cols_out_din );

    SC_METHOD(thread_p_dst_mat_cols_out_write);
    sensitive << ( warpTransform_Block_1_U0_p_dst_mat_cols_out_write );

    SC_METHOD(thread_p_dst_mat_cols_read);
    sensitive << ( warpTransform_Block_1_U0_scalar_dst_mat_cols_read );

    SC_METHOD(thread_p_dst_mat_data_V_din);
    sensitive << ( warpTransform_Loop_4_U0_p_dst_mat_data_V_din );

    SC_METHOD(thread_p_dst_mat_data_V_write);
    sensitive << ( warpTransform_Loop_4_U0_p_dst_mat_data_V_write );

    SC_METHOD(thread_p_dst_mat_rows_out_din);
    sensitive << ( warpTransform_Block_1_U0_p_dst_mat_rows_out_din );

    SC_METHOD(thread_p_dst_mat_rows_out_write);
    sensitive << ( warpTransform_Block_1_U0_p_dst_mat_rows_out_write );

    SC_METHOD(thread_p_dst_mat_rows_read);
    sensitive << ( warpTransform_Block_1_U0_scalar_dst_mat_rows_read );

    SC_METHOD(thread_p_src_mat_cols_read);
    sensitive << ( warpTransform_Block_1_U0_p_src_mat_cols_read );

    SC_METHOD(thread_p_src_mat_data_V_read);
    sensitive << ( warpTransform_Loop_1_U0_p_src_mat_data_V_read );

    SC_METHOD(thread_p_src_mat_rows_read);
    sensitive << ( warpTransform_Block_1_U0_p_src_mat_rows_read );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_for_warpTransform_Loop_4_U0_din);

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_warpTransform_Block_1_U0_ap_continue);
    sensitive << ( ap_sync_continue );

    SC_METHOD(thread_warpTransform_Block_1_U0_ap_start);
    sensitive << ( real_start );
    sensitive << ( ap_sync_reg_warpTransform_Block_1_U0_ap_ready );

    SC_METHOD(thread_warpTransform_Block_U0_ap_continue);

    SC_METHOD(thread_warpTransform_Block_U0_ap_start);
    sensitive << ( real_start );
    sensitive << ( p_src_mat_rows_load_empty_n );
    sensitive << ( ap_sync_reg_warpTransform_Block_U0_ap_ready );

    SC_METHOD(thread_warpTransform_Block_U0_start_full_n);

    SC_METHOD(thread_warpTransform_Block_U0_start_write);

    SC_METHOD(thread_warpTransform_Loop_1_U0_ap_continue);
    sensitive << ( p_src_mat_rows_load_full_n );

    SC_METHOD(thread_warpTransform_Loop_1_U0_ap_start);
    sensitive << ( real_start );
    sensitive << ( ap_sync_reg_warpTransform_Loop_1_U0_ap_ready );

    SC_METHOD(thread_warpTransform_Loop_1_U0_start_full_n);

    SC_METHOD(thread_warpTransform_Loop_1_U0_start_write);

    SC_METHOD(thread_warpTransform_Loop_4_U0_ap_continue);
    sensitive << ( ap_sync_continue );

    SC_METHOD(thread_warpTransform_Loop_4_U0_ap_start);
    sensitive << ( start_for_warpTransform_Loop_4_U0_empty_n );

    SC_METHOD(thread_warpTransform_Loop_4_U0_start_full_n);

    SC_METHOD(thread_warpTransform_Loop_4_U0_start_write);

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_sync_reg_warpTransform_Block_1_U0_ap_ready = SC_LOGIC_0;
    warpTransform_Block_1_U0_ap_ready_count = "00";
    ap_sync_reg_warpTransform_Loop_1_U0_ap_ready = SC_LOGIC_0;
    warpTransform_Loop_1_U0_ap_ready_count = "00";
    ap_sync_reg_warpTransform_Block_U0_ap_ready = SC_LOGIC_0;
    warpTransform_Block_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "warpTransform_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, p_src_mat_rows_dout, "(port)p_src_mat_rows_dout");
    sc_trace(mVcdFile, p_src_mat_rows_empty_n, "(port)p_src_mat_rows_empty_n");
    sc_trace(mVcdFile, p_src_mat_rows_read, "(port)p_src_mat_rows_read");
    sc_trace(mVcdFile, p_src_mat_cols_dout, "(port)p_src_mat_cols_dout");
    sc_trace(mVcdFile, p_src_mat_cols_empty_n, "(port)p_src_mat_cols_empty_n");
    sc_trace(mVcdFile, p_src_mat_cols_read, "(port)p_src_mat_cols_read");
    sc_trace(mVcdFile, p_src_mat_data_V_dout, "(port)p_src_mat_data_V_dout");
    sc_trace(mVcdFile, p_src_mat_data_V_empty_n, "(port)p_src_mat_data_V_empty_n");
    sc_trace(mVcdFile, p_src_mat_data_V_read, "(port)p_src_mat_data_V_read");
    sc_trace(mVcdFile, p_dst_mat_rows_dout, "(port)p_dst_mat_rows_dout");
    sc_trace(mVcdFile, p_dst_mat_rows_empty_n, "(port)p_dst_mat_rows_empty_n");
    sc_trace(mVcdFile, p_dst_mat_rows_read, "(port)p_dst_mat_rows_read");
    sc_trace(mVcdFile, p_dst_mat_cols_dout, "(port)p_dst_mat_cols_dout");
    sc_trace(mVcdFile, p_dst_mat_cols_empty_n, "(port)p_dst_mat_cols_empty_n");
    sc_trace(mVcdFile, p_dst_mat_cols_read, "(port)p_dst_mat_cols_read");
    sc_trace(mVcdFile, p_dst_mat_data_V_din, "(port)p_dst_mat_data_V_din");
    sc_trace(mVcdFile, p_dst_mat_data_V_full_n, "(port)p_dst_mat_data_V_full_n");
    sc_trace(mVcdFile, p_dst_mat_data_V_write, "(port)p_dst_mat_data_V_write");
    sc_trace(mVcdFile, P_matrix_address0, "(port)P_matrix_address0");
    sc_trace(mVcdFile, P_matrix_ce0, "(port)P_matrix_ce0");
    sc_trace(mVcdFile, P_matrix_d0, "(port)P_matrix_d0");
    sc_trace(mVcdFile, P_matrix_q0, "(port)P_matrix_q0");
    sc_trace(mVcdFile, P_matrix_we0, "(port)P_matrix_we0");
    sc_trace(mVcdFile, P_matrix_address1, "(port)P_matrix_address1");
    sc_trace(mVcdFile, P_matrix_ce1, "(port)P_matrix_ce1");
    sc_trace(mVcdFile, P_matrix_d1, "(port)P_matrix_d1");
    sc_trace(mVcdFile, P_matrix_q1, "(port)P_matrix_q1");
    sc_trace(mVcdFile, P_matrix_we1, "(port)P_matrix_we1");
    sc_trace(mVcdFile, p_dst_mat_rows_out_din, "(port)p_dst_mat_rows_out_din");
    sc_trace(mVcdFile, p_dst_mat_rows_out_full_n, "(port)p_dst_mat_rows_out_full_n");
    sc_trace(mVcdFile, p_dst_mat_rows_out_write, "(port)p_dst_mat_rows_out_write");
    sc_trace(mVcdFile, p_dst_mat_cols_out_din, "(port)p_dst_mat_cols_out_din");
    sc_trace(mVcdFile, p_dst_mat_cols_out_full_n, "(port)p_dst_mat_cols_out_full_n");
    sc_trace(mVcdFile, p_dst_mat_cols_out_write, "(port)p_dst_mat_cols_out_write");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_ap_start, "warpTransform_Block_1_U0_ap_start");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_ap_done, "warpTransform_Block_1_U0_ap_done");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_ap_continue, "warpTransform_Block_1_U0_ap_continue");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_ap_idle, "warpTransform_Block_1_U0_ap_idle");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_ap_ready, "warpTransform_Block_1_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_start_out, "warpTransform_Block_1_U0_start_out");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_start_write, "warpTransform_Block_1_U0_start_write");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_scalar_dst_mat_cols_read, "warpTransform_Block_1_U0_scalar_dst_mat_cols_read");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_cols_out_din, "warpTransform_Block_1_U0_p_dst_mat_cols_out_din");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_cols_out_write, "warpTransform_Block_1_U0_p_dst_mat_cols_out_write");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_scalar_dst_mat_rows_read, "warpTransform_Block_1_U0_scalar_dst_mat_rows_read");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_rows_out_din, "warpTransform_Block_1_U0_p_dst_mat_rows_out_din");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_rows_out_write, "warpTransform_Block_1_U0_p_dst_mat_rows_out_write");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_src_mat_cols_read, "warpTransform_Block_1_U0_p_src_mat_cols_read");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_src_mat_rows_read, "warpTransform_Block_1_U0_p_src_mat_rows_read");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din, "warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write, "warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_src_mat_rows_c_i_din, "warpTransform_Block_1_U0_p_src_mat_rows_c_i_din");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_src_mat_rows_c_i_write, "warpTransform_Block_1_U0_p_src_mat_rows_c_i_write");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din, "warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write, "warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din, "warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write, "warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_ap_start, "warpTransform_Loop_1_U0_ap_start");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_ap_done, "warpTransform_Loop_1_U0_ap_done");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_ap_continue, "warpTransform_Loop_1_U0_ap_continue");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_ap_idle, "warpTransform_Loop_1_U0_ap_idle");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_ap_ready, "warpTransform_Loop_1_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_p_src_mat_rows_read, "warpTransform_Loop_1_U0_p_src_mat_rows_read");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read, "warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_p_src_mat_data_V_read, "warpTransform_Loop_1_U0_p_src_mat_data_V_read");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_in_stream_V_V_din, "warpTransform_Loop_1_U0_in_stream_V_V_din");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_in_stream_V_V_write, "warpTransform_Loop_1_U0_in_stream_V_V_write");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din, "warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write, "warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_ap_return, "warpTransform_Loop_1_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_p_src_mat_rows_load, "ap_channel_done_p_src_mat_rows_load");
    sc_trace(mVcdFile, p_src_mat_rows_load_full_n, "p_src_mat_rows_load_full_n");
    sc_trace(mVcdFile, warpTransform_Block_U0_ap_start, "warpTransform_Block_U0_ap_start");
    sc_trace(mVcdFile, warpTransform_Block_U0_ap_done, "warpTransform_Block_U0_ap_done");
    sc_trace(mVcdFile, warpTransform_Block_U0_ap_continue, "warpTransform_Block_U0_ap_continue");
    sc_trace(mVcdFile, warpTransform_Block_U0_ap_idle, "warpTransform_Block_U0_ap_idle");
    sc_trace(mVcdFile, warpTransform_Block_U0_ap_ready, "warpTransform_Block_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_Block_U0_P_matrix_address0, "warpTransform_Block_U0_P_matrix_address0");
    sc_trace(mVcdFile, warpTransform_Block_U0_P_matrix_ce0, "warpTransform_Block_U0_P_matrix_ce0");
    sc_trace(mVcdFile, warpTransform_Block_U0_p_src_mat_cols_load337_loc_read, "warpTransform_Block_U0_p_src_mat_cols_load337_loc_read");
    sc_trace(mVcdFile, warpTransform_Block_U0_in_stream_V_V_read, "warpTransform_Block_U0_in_stream_V_V_read");
    sc_trace(mVcdFile, warpTransform_Block_U0_out_stream_V_V_din, "warpTransform_Block_U0_out_stream_V_V_din");
    sc_trace(mVcdFile, warpTransform_Block_U0_out_stream_V_V_write, "warpTransform_Block_U0_out_stream_V_V_write");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_ap_start, "warpTransform_Loop_4_U0_ap_start");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_ap_done, "warpTransform_Loop_4_U0_ap_done");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_ap_continue, "warpTransform_Loop_4_U0_ap_continue");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_ap_idle, "warpTransform_Loop_4_U0_ap_idle");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_ap_ready, "warpTransform_Loop_4_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_p_dst_mat_rows_read, "warpTransform_Loop_4_U0_p_dst_mat_rows_read");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_p_dst_mat_cols_read, "warpTransform_Loop_4_U0_p_dst_mat_cols_read");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_out_stream_V_V_read, "warpTransform_Loop_4_U0_out_stream_V_V_read");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_p_dst_mat_data_V_din, "warpTransform_Loop_4_U0_p_dst_mat_data_V_din");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_p_dst_mat_data_V_write, "warpTransform_Loop_4_U0_p_dst_mat_data_V_write");
    sc_trace(mVcdFile, p_src_mat_cols_load33_1_full_n, "p_src_mat_cols_load33_1_full_n");
    sc_trace(mVcdFile, p_src_mat_cols_load33_1_dout, "p_src_mat_cols_load33_1_dout");
    sc_trace(mVcdFile, p_src_mat_cols_load33_1_empty_n, "p_src_mat_cols_load33_1_empty_n");
    sc_trace(mVcdFile, p_src_mat_rows_c_i_full_n, "p_src_mat_rows_c_i_full_n");
    sc_trace(mVcdFile, p_src_mat_rows_c_i_dout, "p_src_mat_rows_c_i_dout");
    sc_trace(mVcdFile, p_src_mat_rows_c_i_empty_n, "p_src_mat_rows_c_i_empty_n");
    sc_trace(mVcdFile, p_dst_mat_rows_c_i_full_n, "p_dst_mat_rows_c_i_full_n");
    sc_trace(mVcdFile, p_dst_mat_rows_c_i_dout, "p_dst_mat_rows_c_i_dout");
    sc_trace(mVcdFile, p_dst_mat_rows_c_i_empty_n, "p_dst_mat_rows_c_i_empty_n");
    sc_trace(mVcdFile, p_dst_mat_cols_c_i_full_n, "p_dst_mat_cols_c_i_full_n");
    sc_trace(mVcdFile, p_dst_mat_cols_c_i_dout, "p_dst_mat_cols_c_i_dout");
    sc_trace(mVcdFile, p_dst_mat_cols_c_i_empty_n, "p_dst_mat_cols_c_i_empty_n");
    sc_trace(mVcdFile, in_stream_V_V_full_n, "in_stream_V_V_full_n");
    sc_trace(mVcdFile, in_stream_V_V_dout, "in_stream_V_V_dout");
    sc_trace(mVcdFile, in_stream_V_V_empty_n, "in_stream_V_V_empty_n");
    sc_trace(mVcdFile, p_src_mat_cols_load33_full_n, "p_src_mat_cols_load33_full_n");
    sc_trace(mVcdFile, p_src_mat_cols_load33_dout, "p_src_mat_cols_load33_dout");
    sc_trace(mVcdFile, p_src_mat_cols_load33_empty_n, "p_src_mat_cols_load33_empty_n");
    sc_trace(mVcdFile, p_src_mat_rows_load_dout, "p_src_mat_rows_load_dout");
    sc_trace(mVcdFile, p_src_mat_rows_load_empty_n, "p_src_mat_rows_load_empty_n");
    sc_trace(mVcdFile, out_stream_V_V_full_n, "out_stream_V_V_full_n");
    sc_trace(mVcdFile, out_stream_V_V_dout, "out_stream_V_V_dout");
    sc_trace(mVcdFile, out_stream_V_V_empty_n, "out_stream_V_V_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_warpTransform_Block_1_U0_ap_ready, "ap_sync_reg_warpTransform_Block_1_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_warpTransform_Block_1_U0_ap_ready, "ap_sync_warpTransform_Block_1_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_Block_1_U0_ap_ready_count, "warpTransform_Block_1_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_warpTransform_Loop_1_U0_ap_ready, "ap_sync_reg_warpTransform_Loop_1_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_warpTransform_Loop_1_U0_ap_ready, "ap_sync_warpTransform_Loop_1_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_ap_ready_count, "warpTransform_Loop_1_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_warpTransform_Block_U0_ap_ready, "ap_sync_reg_warpTransform_Block_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_warpTransform_Block_U0_ap_ready, "ap_sync_warpTransform_Block_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_Block_U0_ap_ready_count, "warpTransform_Block_U0_ap_ready_count");
    sc_trace(mVcdFile, start_for_warpTransform_Loop_4_U0_din, "start_for_warpTransform_Loop_4_U0_din");
    sc_trace(mVcdFile, start_for_warpTransform_Loop_4_U0_full_n, "start_for_warpTransform_Loop_4_U0_full_n");
    sc_trace(mVcdFile, start_for_warpTransform_Loop_4_U0_dout, "start_for_warpTransform_Loop_4_U0_dout");
    sc_trace(mVcdFile, start_for_warpTransform_Loop_4_U0_empty_n, "start_for_warpTransform_Loop_4_U0_empty_n");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_start_full_n, "warpTransform_Loop_1_U0_start_full_n");
    sc_trace(mVcdFile, warpTransform_Loop_1_U0_start_write, "warpTransform_Loop_1_U0_start_write");
    sc_trace(mVcdFile, warpTransform_Block_U0_start_full_n, "warpTransform_Block_U0_start_full_n");
    sc_trace(mVcdFile, warpTransform_Block_U0_start_write, "warpTransform_Block_U0_start_write");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_start_full_n, "warpTransform_Loop_4_U0_start_full_n");
    sc_trace(mVcdFile, warpTransform_Loop_4_U0_start_write, "warpTransform_Loop_4_U0_start_write");
#endif

    }
}

warpTransform::~warpTransform() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete warpTransform_Block_1_U0;
    delete warpTransform_Loop_1_U0;
    delete warpTransform_Block_U0;
    delete warpTransform_Loop_4_U0;
    delete p_src_mat_cols_load33_1_U;
    delete p_src_mat_rows_c_i_U;
    delete p_dst_mat_rows_c_i_U;
    delete p_dst_mat_cols_c_i_U;
    delete in_stream_V_V_U;
    delete p_src_mat_cols_load33_U;
    delete p_src_mat_rows_load_U;
    delete out_stream_V_V_U;
    delete start_for_warpTrab2s_U;
}

void warpTransform::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void warpTransform::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_warpTransform_Block_1_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (real_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_warpTransform_Block_1_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_warpTransform_Block_1_U0_ap_ready = ap_sync_warpTransform_Block_1_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_warpTransform_Block_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (real_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_warpTransform_Block_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_warpTransform_Block_U0_ap_ready = ap_sync_warpTransform_Block_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_warpTransform_Loop_1_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (real_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_warpTransform_Loop_1_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_warpTransform_Loop_1_U0_ap_ready = ap_sync_warpTransform_Loop_1_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(internal_ap_ready.read(), ap_const_logic_1)) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, warpTransform_Block_1_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        warpTransform_Block_1_U0_ap_ready_count = (!warpTransform_Block_1_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_Block_1_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, warpTransform_Block_1_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        warpTransform_Block_1_U0_ap_ready_count = (!warpTransform_Block_1_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_Block_1_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, warpTransform_Block_U0_ap_ready.read()))) {
        warpTransform_Block_U0_ap_ready_count = (!warpTransform_Block_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_Block_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, warpTransform_Block_U0_ap_ready.read()))) {
        warpTransform_Block_U0_ap_ready_count = (!warpTransform_Block_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_Block_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, warpTransform_Loop_1_U0_ap_ready.read()))) {
        warpTransform_Loop_1_U0_ap_ready_count = (!warpTransform_Loop_1_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_Loop_1_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, warpTransform_Loop_1_U0_ap_ready.read()))) {
        warpTransform_Loop_1_U0_ap_ready_count = (!warpTransform_Loop_1_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_Loop_1_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void warpTransform::thread_P_matrix_address0() {
    P_matrix_address0 = warpTransform_Block_U0_P_matrix_address0.read();
}

void warpTransform::thread_P_matrix_address1() {
    P_matrix_address1 = ap_const_lv4_0;
}

void warpTransform::thread_P_matrix_ce0() {
    P_matrix_ce0 = warpTransform_Block_U0_P_matrix_ce0.read();
}

void warpTransform::thread_P_matrix_ce1() {
    P_matrix_ce1 = ap_const_logic_0;
}

void warpTransform::thread_P_matrix_d0() {
    P_matrix_d0 = ap_const_lv32_0;
}

void warpTransform::thread_P_matrix_d1() {
    P_matrix_d1 = ap_const_lv32_0;
}

void warpTransform::thread_P_matrix_we0() {
    P_matrix_we0 = ap_const_logic_0;
}

void warpTransform::thread_P_matrix_we1() {
    P_matrix_we1 = ap_const_logic_0;
}

void warpTransform::thread_ap_channel_done_p_src_mat_rows_load() {
    ap_channel_done_p_src_mat_rows_load = warpTransform_Loop_1_U0_ap_done.read();
}

void warpTransform::thread_ap_done() {
    ap_done = ap_sync_done.read();
}

void warpTransform::thread_ap_idle() {
    ap_idle = (warpTransform_Block_1_U0_ap_idle.read() & warpTransform_Loop_1_U0_ap_idle.read() & warpTransform_Block_U0_ap_idle.read() & warpTransform_Loop_4_U0_ap_idle.read() & (p_src_mat_rows_load_empty_n.read() ^ 
  ap_const_logic_1));
}

void warpTransform::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void warpTransform::thread_ap_sync_continue() {
    ap_sync_continue = (ap_sync_done.read() & ap_continue.read());
}

void warpTransform::thread_ap_sync_done() {
    ap_sync_done = (warpTransform_Block_1_U0_ap_done.read() & warpTransform_Loop_4_U0_ap_done.read());
}

void warpTransform::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_warpTransform_Block_1_U0_ap_ready.read() & ap_sync_warpTransform_Loop_1_U0_ap_ready.read() & ap_sync_warpTransform_Block_U0_ap_ready.read());
}

void warpTransform::thread_ap_sync_warpTransform_Block_1_U0_ap_ready() {
    ap_sync_warpTransform_Block_1_U0_ap_ready = (warpTransform_Block_1_U0_ap_ready.read() | ap_sync_reg_warpTransform_Block_1_U0_ap_ready.read());
}

void warpTransform::thread_ap_sync_warpTransform_Block_U0_ap_ready() {
    ap_sync_warpTransform_Block_U0_ap_ready = (warpTransform_Block_U0_ap_ready.read() | ap_sync_reg_warpTransform_Block_U0_ap_ready.read());
}

void warpTransform::thread_ap_sync_warpTransform_Loop_1_U0_ap_ready() {
    ap_sync_warpTransform_Loop_1_U0_ap_ready = (warpTransform_Loop_1_U0_ap_ready.read() | ap_sync_reg_warpTransform_Loop_1_U0_ap_ready.read());
}

void warpTransform::thread_internal_ap_ready() {
    internal_ap_ready = ap_sync_ready.read();
}

void warpTransform::thread_p_dst_mat_cols_out_din() {
    p_dst_mat_cols_out_din = warpTransform_Block_1_U0_p_dst_mat_cols_out_din.read();
}

void warpTransform::thread_p_dst_mat_cols_out_write() {
    p_dst_mat_cols_out_write = warpTransform_Block_1_U0_p_dst_mat_cols_out_write.read();
}

void warpTransform::thread_p_dst_mat_cols_read() {
    p_dst_mat_cols_read = warpTransform_Block_1_U0_scalar_dst_mat_cols_read.read();
}

void warpTransform::thread_p_dst_mat_data_V_din() {
    p_dst_mat_data_V_din = warpTransform_Loop_4_U0_p_dst_mat_data_V_din.read();
}

void warpTransform::thread_p_dst_mat_data_V_write() {
    p_dst_mat_data_V_write = warpTransform_Loop_4_U0_p_dst_mat_data_V_write.read();
}

void warpTransform::thread_p_dst_mat_rows_out_din() {
    p_dst_mat_rows_out_din = warpTransform_Block_1_U0_p_dst_mat_rows_out_din.read();
}

void warpTransform::thread_p_dst_mat_rows_out_write() {
    p_dst_mat_rows_out_write = warpTransform_Block_1_U0_p_dst_mat_rows_out_write.read();
}

void warpTransform::thread_p_dst_mat_rows_read() {
    p_dst_mat_rows_read = warpTransform_Block_1_U0_scalar_dst_mat_rows_read.read();
}

void warpTransform::thread_p_src_mat_cols_read() {
    p_src_mat_cols_read = warpTransform_Block_1_U0_p_src_mat_cols_read.read();
}

void warpTransform::thread_p_src_mat_data_V_read() {
    p_src_mat_data_V_read = warpTransform_Loop_1_U0_p_src_mat_data_V_read.read();
}

void warpTransform::thread_p_src_mat_rows_read() {
    p_src_mat_rows_read = warpTransform_Block_1_U0_p_src_mat_rows_read.read();
}

void warpTransform::thread_real_start() {
    if ((esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void warpTransform::thread_start_for_warpTransform_Loop_4_U0_din() {
    start_for_warpTransform_Loop_4_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void warpTransform::thread_start_out() {
    start_out = real_start.read();
}

void warpTransform::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void warpTransform::thread_warpTransform_Block_1_U0_ap_continue() {
    warpTransform_Block_1_U0_ap_continue = ap_sync_continue.read();
}

void warpTransform::thread_warpTransform_Block_1_U0_ap_start() {
    warpTransform_Block_1_U0_ap_start = (real_start.read() & (ap_sync_reg_warpTransform_Block_1_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void warpTransform::thread_warpTransform_Block_U0_ap_continue() {
    warpTransform_Block_U0_ap_continue = ap_const_logic_1;
}

void warpTransform::thread_warpTransform_Block_U0_ap_start() {
    warpTransform_Block_U0_ap_start = (real_start.read() & p_src_mat_rows_load_empty_n.read() & (ap_sync_reg_warpTransform_Block_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void warpTransform::thread_warpTransform_Block_U0_start_full_n() {
    warpTransform_Block_U0_start_full_n = ap_const_logic_1;
}

void warpTransform::thread_warpTransform_Block_U0_start_write() {
    warpTransform_Block_U0_start_write = ap_const_logic_0;
}

void warpTransform::thread_warpTransform_Loop_1_U0_ap_continue() {
    warpTransform_Loop_1_U0_ap_continue = p_src_mat_rows_load_full_n.read();
}

void warpTransform::thread_warpTransform_Loop_1_U0_ap_start() {
    warpTransform_Loop_1_U0_ap_start = (real_start.read() & (ap_sync_reg_warpTransform_Loop_1_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void warpTransform::thread_warpTransform_Loop_1_U0_start_full_n() {
    warpTransform_Loop_1_U0_start_full_n = ap_const_logic_1;
}

void warpTransform::thread_warpTransform_Loop_1_U0_start_write() {
    warpTransform_Loop_1_U0_start_write = ap_const_logic_0;
}

void warpTransform::thread_warpTransform_Loop_4_U0_ap_continue() {
    warpTransform_Loop_4_U0_ap_continue = ap_sync_continue.read();
}

void warpTransform::thread_warpTransform_Loop_4_U0_ap_start() {
    warpTransform_Loop_4_U0_ap_start = start_for_warpTransform_Loop_4_U0_empty_n.read();
}

void warpTransform::thread_warpTransform_Loop_4_U0_start_full_n() {
    warpTransform_Loop_4_U0_start_full_n = ap_const_logic_1;
}

void warpTransform::thread_warpTransform_Loop_4_U0_start_write() {
    warpTransform_Loop_4_U0_start_write = ap_const_logic_0;
}

}

