// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "warp_stream_accel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<8> warp_stream_accel::ap_const_lv8_0 = "00000000";
const sc_lv<1> warp_stream_accel::ap_const_lv1_0 = "0";
const sc_lv<4> warp_stream_accel::ap_const_lv4_0 = "0000";
const sc_logic warp_stream_accel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> warp_stream_accel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic warp_stream_accel::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<2> warp_stream_accel::ap_const_lv2_0 = "00";
const sc_lv<2> warp_stream_accel::ap_const_lv2_1 = "1";
const bool warp_stream_accel::ap_const_boolean_1 = true;
const sc_lv<32> warp_stream_accel::ap_const_lv32_1 = "1";

warp_stream_accel::warp_stream_accel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Block_proc_U0 = new Block_proc("Block_proc_U0");
    Block_proc_U0->ap_clk(ap_clk);
    Block_proc_U0->ap_rst(ap_rst_n_inv);
    Block_proc_U0->ap_start(Block_proc_U0_ap_start);
    Block_proc_U0->ap_done(Block_proc_U0_ap_done);
    Block_proc_U0->ap_continue(Block_proc_U0_ap_continue);
    Block_proc_U0->ap_idle(Block_proc_U0_ap_idle);
    Block_proc_U0->ap_ready(Block_proc_U0_ap_ready);
    Block_proc_U0->imgInput1_rows_out_din(Block_proc_U0_imgInput1_rows_out_din);
    Block_proc_U0->imgInput1_rows_out_full_n(imgInput1_rows_c_full_n);
    Block_proc_U0->imgInput1_rows_out_write(Block_proc_U0_imgInput1_rows_out_write);
    Block_proc_U0->imgInput1_cols_out_din(Block_proc_U0_imgInput1_cols_out_din);
    Block_proc_U0->imgInput1_cols_out_full_n(imgInput1_cols_c_full_n);
    Block_proc_U0->imgInput1_cols_out_write(Block_proc_U0_imgInput1_cols_out_write);
    Block_proc_U0->imgOutput1_rows_out_din(Block_proc_U0_imgOutput1_rows_out_din);
    Block_proc_U0->imgOutput1_rows_out_full_n(imgOutput1_rows_c_full_n);
    Block_proc_U0->imgOutput1_rows_out_write(Block_proc_U0_imgOutput1_rows_out_write);
    Block_proc_U0->imgOutput1_cols_out_din(Block_proc_U0_imgOutput1_cols_out_din);
    Block_proc_U0->imgOutput1_cols_out_full_n(imgOutput1_cols_c_full_n);
    Block_proc_U0->imgOutput1_cols_out_write(Block_proc_U0_imgOutput1_cols_out_write);
    AXIvideo2xfMat_U0 = new AXIvideo2xfMat("AXIvideo2xfMat_U0");
    AXIvideo2xfMat_U0->ap_clk(ap_clk);
    AXIvideo2xfMat_U0->ap_rst(ap_rst_n_inv);
    AXIvideo2xfMat_U0->ap_start(AXIvideo2xfMat_U0_ap_start);
    AXIvideo2xfMat_U0->ap_done(AXIvideo2xfMat_U0_ap_done);
    AXIvideo2xfMat_U0->ap_continue(AXIvideo2xfMat_U0_ap_continue);
    AXIvideo2xfMat_U0->ap_idle(AXIvideo2xfMat_U0_ap_idle);
    AXIvideo2xfMat_U0->ap_ready(AXIvideo2xfMat_U0_ap_ready);
    AXIvideo2xfMat_U0->p_src_TDATA(p_src_TDATA);
    AXIvideo2xfMat_U0->p_src_TVALID(p_src_TVALID);
    AXIvideo2xfMat_U0->p_src_TREADY(AXIvideo2xfMat_U0_p_src_TREADY);
    AXIvideo2xfMat_U0->p_src_TKEEP(p_src_TKEEP);
    AXIvideo2xfMat_U0->p_src_TSTRB(p_src_TSTRB);
    AXIvideo2xfMat_U0->p_src_TUSER(p_src_TUSER);
    AXIvideo2xfMat_U0->p_src_TLAST(p_src_TLAST);
    AXIvideo2xfMat_U0->p_src_TID(p_src_TID);
    AXIvideo2xfMat_U0->p_src_TDEST(p_src_TDEST);
    AXIvideo2xfMat_U0->img_rows_dout(imgInput1_rows_c_dout);
    AXIvideo2xfMat_U0->img_rows_empty_n(imgInput1_rows_c_empty_n);
    AXIvideo2xfMat_U0->img_rows_read(AXIvideo2xfMat_U0_img_rows_read);
    AXIvideo2xfMat_U0->img_cols_dout(imgInput1_cols_c_dout);
    AXIvideo2xfMat_U0->img_cols_empty_n(imgInput1_cols_c_empty_n);
    AXIvideo2xfMat_U0->img_cols_read(AXIvideo2xfMat_U0_img_cols_read);
    AXIvideo2xfMat_U0->img_data_V_din(AXIvideo2xfMat_U0_img_data_V_din);
    AXIvideo2xfMat_U0->img_data_V_full_n(imgInput1_data_V_full_n);
    AXIvideo2xfMat_U0->img_data_V_write(AXIvideo2xfMat_U0_img_data_V_write);
    AXIvideo2xfMat_U0->img_rows_out_din(AXIvideo2xfMat_U0_img_rows_out_din);
    AXIvideo2xfMat_U0->img_rows_out_full_n(imgInput1_rows_c4_full_n);
    AXIvideo2xfMat_U0->img_rows_out_write(AXIvideo2xfMat_U0_img_rows_out_write);
    AXIvideo2xfMat_U0->img_cols_out_din(AXIvideo2xfMat_U0_img_cols_out_din);
    AXIvideo2xfMat_U0->img_cols_out_full_n(imgInput1_cols_c5_full_n);
    AXIvideo2xfMat_U0->img_cols_out_write(AXIvideo2xfMat_U0_img_cols_out_write);
    warpTransform_U0 = new warpTransform("warpTransform_U0");
    warpTransform_U0->ap_start(warpTransform_U0_ap_start);
    warpTransform_U0->start_full_n(start_for_xfMat2AXIvideo_U0_full_n);
    warpTransform_U0->start_out(warpTransform_U0_start_out);
    warpTransform_U0->start_write(warpTransform_U0_start_write);
    warpTransform_U0->p_src_mat_rows_dout(imgInput1_rows_c4_dout);
    warpTransform_U0->p_src_mat_rows_empty_n(imgInput1_rows_c4_empty_n);
    warpTransform_U0->p_src_mat_rows_read(warpTransform_U0_p_src_mat_rows_read);
    warpTransform_U0->p_src_mat_cols_dout(imgInput1_cols_c5_dout);
    warpTransform_U0->p_src_mat_cols_empty_n(imgInput1_cols_c5_empty_n);
    warpTransform_U0->p_src_mat_cols_read(warpTransform_U0_p_src_mat_cols_read);
    warpTransform_U0->p_src_mat_data_V_dout(imgInput1_data_V_dout);
    warpTransform_U0->p_src_mat_data_V_empty_n(imgInput1_data_V_empty_n);
    warpTransform_U0->p_src_mat_data_V_read(warpTransform_U0_p_src_mat_data_V_read);
    warpTransform_U0->p_dst_mat_rows_dout(imgOutput1_rows_c_dout);
    warpTransform_U0->p_dst_mat_rows_empty_n(imgOutput1_rows_c_empty_n);
    warpTransform_U0->p_dst_mat_rows_read(warpTransform_U0_p_dst_mat_rows_read);
    warpTransform_U0->p_dst_mat_cols_dout(imgOutput1_cols_c_dout);
    warpTransform_U0->p_dst_mat_cols_empty_n(imgOutput1_cols_c_empty_n);
    warpTransform_U0->p_dst_mat_cols_read(warpTransform_U0_p_dst_mat_cols_read);
    warpTransform_U0->p_dst_mat_data_V_din(warpTransform_U0_p_dst_mat_data_V_din);
    warpTransform_U0->p_dst_mat_data_V_full_n(imgOutput1_data_V_full_n);
    warpTransform_U0->p_dst_mat_data_V_write(warpTransform_U0_p_dst_mat_data_V_write);
    warpTransform_U0->P_matrix_address0(warpTransform_U0_P_matrix_address0);
    warpTransform_U0->P_matrix_ce0(warpTransform_U0_P_matrix_ce0);
    warpTransform_U0->P_matrix_d0(warpTransform_U0_P_matrix_d0);
    warpTransform_U0->P_matrix_q0(R_q0);
    warpTransform_U0->P_matrix_we0(warpTransform_U0_P_matrix_we0);
    warpTransform_U0->P_matrix_address1(warpTransform_U0_P_matrix_address1);
    warpTransform_U0->P_matrix_ce1(warpTransform_U0_P_matrix_ce1);
    warpTransform_U0->P_matrix_d1(warpTransform_U0_P_matrix_d1);
    warpTransform_U0->P_matrix_q1(ap_var_for_const0);
    warpTransform_U0->P_matrix_we1(warpTransform_U0_P_matrix_we1);
    warpTransform_U0->p_dst_mat_rows_out_din(warpTransform_U0_p_dst_mat_rows_out_din);
    warpTransform_U0->p_dst_mat_rows_out_full_n(imgOutput1_rows_c6_full_n);
    warpTransform_U0->p_dst_mat_rows_out_write(warpTransform_U0_p_dst_mat_rows_out_write);
    warpTransform_U0->p_dst_mat_cols_out_din(warpTransform_U0_p_dst_mat_cols_out_din);
    warpTransform_U0->p_dst_mat_cols_out_full_n(imgOutput1_cols_c7_full_n);
    warpTransform_U0->p_dst_mat_cols_out_write(warpTransform_U0_p_dst_mat_cols_out_write);
    warpTransform_U0->ap_clk(ap_clk);
    warpTransform_U0->ap_rst(ap_rst_n_inv);
    warpTransform_U0->ap_done(warpTransform_U0_ap_done);
    warpTransform_U0->ap_ready(warpTransform_U0_ap_ready);
    warpTransform_U0->ap_idle(warpTransform_U0_ap_idle);
    warpTransform_U0->ap_continue(warpTransform_U0_ap_continue);
    xfMat2AXIvideo_U0 = new xfMat2AXIvideo("xfMat2AXIvideo_U0");
    xfMat2AXIvideo_U0->ap_clk(ap_clk);
    xfMat2AXIvideo_U0->ap_rst(ap_rst_n_inv);
    xfMat2AXIvideo_U0->ap_start(xfMat2AXIvideo_U0_ap_start);
    xfMat2AXIvideo_U0->ap_done(xfMat2AXIvideo_U0_ap_done);
    xfMat2AXIvideo_U0->ap_continue(xfMat2AXIvideo_U0_ap_continue);
    xfMat2AXIvideo_U0->ap_idle(xfMat2AXIvideo_U0_ap_idle);
    xfMat2AXIvideo_U0->ap_ready(xfMat2AXIvideo_U0_ap_ready);
    xfMat2AXIvideo_U0->img_rows_dout(imgOutput1_rows_c6_dout);
    xfMat2AXIvideo_U0->img_rows_empty_n(imgOutput1_rows_c6_empty_n);
    xfMat2AXIvideo_U0->img_rows_read(xfMat2AXIvideo_U0_img_rows_read);
    xfMat2AXIvideo_U0->img_cols_dout(imgOutput1_cols_c7_dout);
    xfMat2AXIvideo_U0->img_cols_empty_n(imgOutput1_cols_c7_empty_n);
    xfMat2AXIvideo_U0->img_cols_read(xfMat2AXIvideo_U0_img_cols_read);
    xfMat2AXIvideo_U0->img_data_V_dout(imgOutput1_data_V_dout);
    xfMat2AXIvideo_U0->img_data_V_empty_n(imgOutput1_data_V_empty_n);
    xfMat2AXIvideo_U0->img_data_V_read(xfMat2AXIvideo_U0_img_data_V_read);
    xfMat2AXIvideo_U0->p_dst_TDATA(xfMat2AXIvideo_U0_p_dst_TDATA);
    xfMat2AXIvideo_U0->p_dst_TVALID(xfMat2AXIvideo_U0_p_dst_TVALID);
    xfMat2AXIvideo_U0->p_dst_TREADY(p_dst_TREADY);
    xfMat2AXIvideo_U0->p_dst_TKEEP(xfMat2AXIvideo_U0_p_dst_TKEEP);
    xfMat2AXIvideo_U0->p_dst_TSTRB(xfMat2AXIvideo_U0_p_dst_TSTRB);
    xfMat2AXIvideo_U0->p_dst_TUSER(xfMat2AXIvideo_U0_p_dst_TUSER);
    xfMat2AXIvideo_U0->p_dst_TLAST(xfMat2AXIvideo_U0_p_dst_TLAST);
    xfMat2AXIvideo_U0->p_dst_TID(xfMat2AXIvideo_U0_p_dst_TID);
    xfMat2AXIvideo_U0->p_dst_TDEST(xfMat2AXIvideo_U0_p_dst_TDEST);
    imgInput1_rows_c_U = new fifo_w12_d2_A_x("imgInput1_rows_c_U");
    imgInput1_rows_c_U->clk(ap_clk);
    imgInput1_rows_c_U->reset(ap_rst_n_inv);
    imgInput1_rows_c_U->if_read_ce(ap_var_for_const1);
    imgInput1_rows_c_U->if_write_ce(ap_var_for_const1);
    imgInput1_rows_c_U->if_din(Block_proc_U0_imgInput1_rows_out_din);
    imgInput1_rows_c_U->if_full_n(imgInput1_rows_c_full_n);
    imgInput1_rows_c_U->if_write(Block_proc_U0_imgInput1_rows_out_write);
    imgInput1_rows_c_U->if_dout(imgInput1_rows_c_dout);
    imgInput1_rows_c_U->if_empty_n(imgInput1_rows_c_empty_n);
    imgInput1_rows_c_U->if_read(AXIvideo2xfMat_U0_img_rows_read);
    imgInput1_cols_c_U = new fifo_w12_d2_A_x("imgInput1_cols_c_U");
    imgInput1_cols_c_U->clk(ap_clk);
    imgInput1_cols_c_U->reset(ap_rst_n_inv);
    imgInput1_cols_c_U->if_read_ce(ap_var_for_const1);
    imgInput1_cols_c_U->if_write_ce(ap_var_for_const1);
    imgInput1_cols_c_U->if_din(Block_proc_U0_imgInput1_cols_out_din);
    imgInput1_cols_c_U->if_full_n(imgInput1_cols_c_full_n);
    imgInput1_cols_c_U->if_write(Block_proc_U0_imgInput1_cols_out_write);
    imgInput1_cols_c_U->if_dout(imgInput1_cols_c_dout);
    imgInput1_cols_c_U->if_empty_n(imgInput1_cols_c_empty_n);
    imgInput1_cols_c_U->if_read(AXIvideo2xfMat_U0_img_cols_read);
    imgOutput1_rows_c_U = new fifo_w12_d3_A("imgOutput1_rows_c_U");
    imgOutput1_rows_c_U->clk(ap_clk);
    imgOutput1_rows_c_U->reset(ap_rst_n_inv);
    imgOutput1_rows_c_U->if_read_ce(ap_var_for_const1);
    imgOutput1_rows_c_U->if_write_ce(ap_var_for_const1);
    imgOutput1_rows_c_U->if_din(Block_proc_U0_imgOutput1_rows_out_din);
    imgOutput1_rows_c_U->if_full_n(imgOutput1_rows_c_full_n);
    imgOutput1_rows_c_U->if_write(Block_proc_U0_imgOutput1_rows_out_write);
    imgOutput1_rows_c_U->if_dout(imgOutput1_rows_c_dout);
    imgOutput1_rows_c_U->if_empty_n(imgOutput1_rows_c_empty_n);
    imgOutput1_rows_c_U->if_read(warpTransform_U0_p_dst_mat_rows_read);
    imgOutput1_cols_c_U = new fifo_w12_d3_A("imgOutput1_cols_c_U");
    imgOutput1_cols_c_U->clk(ap_clk);
    imgOutput1_cols_c_U->reset(ap_rst_n_inv);
    imgOutput1_cols_c_U->if_read_ce(ap_var_for_const1);
    imgOutput1_cols_c_U->if_write_ce(ap_var_for_const1);
    imgOutput1_cols_c_U->if_din(Block_proc_U0_imgOutput1_cols_out_din);
    imgOutput1_cols_c_U->if_full_n(imgOutput1_cols_c_full_n);
    imgOutput1_cols_c_U->if_write(Block_proc_U0_imgOutput1_cols_out_write);
    imgOutput1_cols_c_U->if_dout(imgOutput1_cols_c_dout);
    imgOutput1_cols_c_U->if_empty_n(imgOutput1_cols_c_empty_n);
    imgOutput1_cols_c_U->if_read(warpTransform_U0_p_dst_mat_cols_read);
    imgInput1_data_V_U = new fifo_w8_d1_A("imgInput1_data_V_U");
    imgInput1_data_V_U->clk(ap_clk);
    imgInput1_data_V_U->reset(ap_rst_n_inv);
    imgInput1_data_V_U->if_read_ce(ap_var_for_const1);
    imgInput1_data_V_U->if_write_ce(ap_var_for_const1);
    imgInput1_data_V_U->if_din(AXIvideo2xfMat_U0_img_data_V_din);
    imgInput1_data_V_U->if_full_n(imgInput1_data_V_full_n);
    imgInput1_data_V_U->if_write(AXIvideo2xfMat_U0_img_data_V_write);
    imgInput1_data_V_U->if_dout(imgInput1_data_V_dout);
    imgInput1_data_V_U->if_empty_n(imgInput1_data_V_empty_n);
    imgInput1_data_V_U->if_read(warpTransform_U0_p_src_mat_data_V_read);
    imgInput1_rows_c4_U = new fifo_w12_d2_A_x("imgInput1_rows_c4_U");
    imgInput1_rows_c4_U->clk(ap_clk);
    imgInput1_rows_c4_U->reset(ap_rst_n_inv);
    imgInput1_rows_c4_U->if_read_ce(ap_var_for_const1);
    imgInput1_rows_c4_U->if_write_ce(ap_var_for_const1);
    imgInput1_rows_c4_U->if_din(AXIvideo2xfMat_U0_img_rows_out_din);
    imgInput1_rows_c4_U->if_full_n(imgInput1_rows_c4_full_n);
    imgInput1_rows_c4_U->if_write(AXIvideo2xfMat_U0_img_rows_out_write);
    imgInput1_rows_c4_U->if_dout(imgInput1_rows_c4_dout);
    imgInput1_rows_c4_U->if_empty_n(imgInput1_rows_c4_empty_n);
    imgInput1_rows_c4_U->if_read(warpTransform_U0_p_src_mat_rows_read);
    imgInput1_cols_c5_U = new fifo_w12_d2_A_x("imgInput1_cols_c5_U");
    imgInput1_cols_c5_U->clk(ap_clk);
    imgInput1_cols_c5_U->reset(ap_rst_n_inv);
    imgInput1_cols_c5_U->if_read_ce(ap_var_for_const1);
    imgInput1_cols_c5_U->if_write_ce(ap_var_for_const1);
    imgInput1_cols_c5_U->if_din(AXIvideo2xfMat_U0_img_cols_out_din);
    imgInput1_cols_c5_U->if_full_n(imgInput1_cols_c5_full_n);
    imgInput1_cols_c5_U->if_write(AXIvideo2xfMat_U0_img_cols_out_write);
    imgInput1_cols_c5_U->if_dout(imgInput1_cols_c5_dout);
    imgInput1_cols_c5_U->if_empty_n(imgInput1_cols_c5_empty_n);
    imgInput1_cols_c5_U->if_read(warpTransform_U0_p_src_mat_cols_read);
    imgOutput1_data_V_U = new fifo_w8_d1_A("imgOutput1_data_V_U");
    imgOutput1_data_V_U->clk(ap_clk);
    imgOutput1_data_V_U->reset(ap_rst_n_inv);
    imgOutput1_data_V_U->if_read_ce(ap_var_for_const1);
    imgOutput1_data_V_U->if_write_ce(ap_var_for_const1);
    imgOutput1_data_V_U->if_din(warpTransform_U0_p_dst_mat_data_V_din);
    imgOutput1_data_V_U->if_full_n(imgOutput1_data_V_full_n);
    imgOutput1_data_V_U->if_write(warpTransform_U0_p_dst_mat_data_V_write);
    imgOutput1_data_V_U->if_dout(imgOutput1_data_V_dout);
    imgOutput1_data_V_U->if_empty_n(imgOutput1_data_V_empty_n);
    imgOutput1_data_V_U->if_read(xfMat2AXIvideo_U0_img_data_V_read);
    imgOutput1_rows_c6_U = new fifo_w12_d2_A_x("imgOutput1_rows_c6_U");
    imgOutput1_rows_c6_U->clk(ap_clk);
    imgOutput1_rows_c6_U->reset(ap_rst_n_inv);
    imgOutput1_rows_c6_U->if_read_ce(ap_var_for_const1);
    imgOutput1_rows_c6_U->if_write_ce(ap_var_for_const1);
    imgOutput1_rows_c6_U->if_din(warpTransform_U0_p_dst_mat_rows_out_din);
    imgOutput1_rows_c6_U->if_full_n(imgOutput1_rows_c6_full_n);
    imgOutput1_rows_c6_U->if_write(warpTransform_U0_p_dst_mat_rows_out_write);
    imgOutput1_rows_c6_U->if_dout(imgOutput1_rows_c6_dout);
    imgOutput1_rows_c6_U->if_empty_n(imgOutput1_rows_c6_empty_n);
    imgOutput1_rows_c6_U->if_read(xfMat2AXIvideo_U0_img_rows_read);
    imgOutput1_cols_c7_U = new fifo_w12_d2_A_x("imgOutput1_cols_c7_U");
    imgOutput1_cols_c7_U->clk(ap_clk);
    imgOutput1_cols_c7_U->reset(ap_rst_n_inv);
    imgOutput1_cols_c7_U->if_read_ce(ap_var_for_const1);
    imgOutput1_cols_c7_U->if_write_ce(ap_var_for_const1);
    imgOutput1_cols_c7_U->if_din(warpTransform_U0_p_dst_mat_cols_out_din);
    imgOutput1_cols_c7_U->if_full_n(imgOutput1_cols_c7_full_n);
    imgOutput1_cols_c7_U->if_write(warpTransform_U0_p_dst_mat_cols_out_write);
    imgOutput1_cols_c7_U->if_dout(imgOutput1_cols_c7_dout);
    imgOutput1_cols_c7_U->if_empty_n(imgOutput1_cols_c7_empty_n);
    imgOutput1_cols_c7_U->if_read(xfMat2AXIvideo_U0_img_cols_read);
    start_for_xfMat2Ab3s_U = new start_for_xfMat2Ab3s("start_for_xfMat2Ab3s_U");
    start_for_xfMat2Ab3s_U->clk(ap_clk);
    start_for_xfMat2Ab3s_U->reset(ap_rst_n_inv);
    start_for_xfMat2Ab3s_U->if_read_ce(ap_var_for_const1);
    start_for_xfMat2Ab3s_U->if_write_ce(ap_var_for_const1);
    start_for_xfMat2Ab3s_U->if_din(start_for_xfMat2AXIvideo_U0_din);
    start_for_xfMat2Ab3s_U->if_full_n(start_for_xfMat2AXIvideo_U0_full_n);
    start_for_xfMat2Ab3s_U->if_write(warpTransform_U0_start_write);
    start_for_xfMat2Ab3s_U->if_dout(start_for_xfMat2AXIvideo_U0_dout);
    start_for_xfMat2Ab3s_U->if_empty_n(start_for_xfMat2AXIvideo_U0_empty_n);
    start_for_xfMat2Ab3s_U->if_read(xfMat2AXIvideo_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIvideo2xfMat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2xfMat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_AXIvideo2xfMat_U0_ap_ready );

    SC_METHOD(thread_AXIvideo2xfMat_U0_start_full_n);

    SC_METHOD(thread_AXIvideo2xfMat_U0_start_write);

    SC_METHOD(thread_Block_proc_U0_ap_continue);

    SC_METHOD(thread_Block_proc_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Block_proc_U0_ap_ready );

    SC_METHOD(thread_Block_proc_U0_start_full_n);

    SC_METHOD(thread_Block_proc_U0_start_write);

    SC_METHOD(thread_R_address0);
    sensitive << ( warpTransform_U0_P_matrix_address0 );

    SC_METHOD(thread_R_address1);

    SC_METHOD(thread_R_ce0);
    sensitive << ( warpTransform_U0_P_matrix_ce0 );

    SC_METHOD(thread_R_ce1);

    SC_METHOD(thread_R_d0);

    SC_METHOD(thread_R_d1);

    SC_METHOD(thread_R_we0);

    SC_METHOD(thread_R_we1);

    SC_METHOD(thread_ap_done);
    sensitive << ( xfMat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( Block_proc_U0_ap_idle );
    sensitive << ( AXIvideo2xfMat_U0_ap_idle );
    sensitive << ( warpTransform_U0_ap_idle );
    sensitive << ( xfMat2AXIvideo_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_AXIvideo2xfMat_U0_ap_ready);
    sensitive << ( AXIvideo2xfMat_U0_ap_ready );
    sensitive << ( ap_sync_reg_AXIvideo2xfMat_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Block_proc_U0_ap_ready);
    sensitive << ( Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_Block_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( xfMat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_AXIvideo2xfMat_U0_ap_ready );
    sensitive << ( ap_sync_warpTransform_U0_ap_ready );

    SC_METHOD(thread_ap_sync_warpTransform_U0_ap_ready);
    sensitive << ( warpTransform_U0_ap_ready );
    sensitive << ( ap_sync_reg_warpTransform_U0_ap_ready );

    SC_METHOD(thread_p_dst_TDATA);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TDATA );

    SC_METHOD(thread_p_dst_TDEST);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TDEST );

    SC_METHOD(thread_p_dst_TID);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TID );

    SC_METHOD(thread_p_dst_TKEEP);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TKEEP );

    SC_METHOD(thread_p_dst_TLAST);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TLAST );

    SC_METHOD(thread_p_dst_TSTRB);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TSTRB );

    SC_METHOD(thread_p_dst_TUSER);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TUSER );

    SC_METHOD(thread_p_dst_TVALID);
    sensitive << ( xfMat2AXIvideo_U0_p_dst_TVALID );

    SC_METHOD(thread_p_src_TREADY);
    sensitive << ( AXIvideo2xfMat_U0_p_src_TREADY );

    SC_METHOD(thread_start_for_xfMat2AXIvideo_U0_din);

    SC_METHOD(thread_warpTransform_U0_ap_continue);

    SC_METHOD(thread_warpTransform_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_warpTransform_U0_ap_ready );

    SC_METHOD(thread_xfMat2AXIvideo_U0_ap_continue);

    SC_METHOD(thread_xfMat2AXIvideo_U0_ap_start);
    sensitive << ( start_for_xfMat2AXIvideo_U0_empty_n );

    SC_METHOD(thread_xfMat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_xfMat2AXIvideo_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_sync_reg_Block_proc_U0_ap_ready = SC_LOGIC_0;
    Block_proc_U0_ap_ready_count = "00";
    ap_sync_reg_AXIvideo2xfMat_U0_ap_ready = SC_LOGIC_0;
    AXIvideo2xfMat_U0_ap_ready_count = "00";
    ap_sync_reg_warpTransform_U0_ap_ready = SC_LOGIC_0;
    warpTransform_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "warp_stream_accel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, p_src_TDATA, "(port)p_src_TDATA");
    sc_trace(mVcdFile, p_src_TKEEP, "(port)p_src_TKEEP");
    sc_trace(mVcdFile, p_src_TSTRB, "(port)p_src_TSTRB");
    sc_trace(mVcdFile, p_src_TUSER, "(port)p_src_TUSER");
    sc_trace(mVcdFile, p_src_TLAST, "(port)p_src_TLAST");
    sc_trace(mVcdFile, p_src_TID, "(port)p_src_TID");
    sc_trace(mVcdFile, p_src_TDEST, "(port)p_src_TDEST");
    sc_trace(mVcdFile, p_dst_TDATA, "(port)p_dst_TDATA");
    sc_trace(mVcdFile, p_dst_TKEEP, "(port)p_dst_TKEEP");
    sc_trace(mVcdFile, p_dst_TSTRB, "(port)p_dst_TSTRB");
    sc_trace(mVcdFile, p_dst_TUSER, "(port)p_dst_TUSER");
    sc_trace(mVcdFile, p_dst_TLAST, "(port)p_dst_TLAST");
    sc_trace(mVcdFile, p_dst_TID, "(port)p_dst_TID");
    sc_trace(mVcdFile, p_dst_TDEST, "(port)p_dst_TDEST");
    sc_trace(mVcdFile, R_address0, "(port)R_address0");
    sc_trace(mVcdFile, R_ce0, "(port)R_ce0");
    sc_trace(mVcdFile, R_d0, "(port)R_d0");
    sc_trace(mVcdFile, R_q0, "(port)R_q0");
    sc_trace(mVcdFile, R_we0, "(port)R_we0");
    sc_trace(mVcdFile, R_address1, "(port)R_address1");
    sc_trace(mVcdFile, R_ce1, "(port)R_ce1");
    sc_trace(mVcdFile, R_d1, "(port)R_d1");
    sc_trace(mVcdFile, R_q1, "(port)R_q1");
    sc_trace(mVcdFile, R_we1, "(port)R_we1");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, p_src_TVALID, "(port)p_src_TVALID");
    sc_trace(mVcdFile, p_src_TREADY, "(port)p_src_TREADY");
    sc_trace(mVcdFile, p_dst_TVALID, "(port)p_dst_TVALID");
    sc_trace(mVcdFile, p_dst_TREADY, "(port)p_dst_TREADY");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, Block_proc_U0_ap_start, "Block_proc_U0_ap_start");
    sc_trace(mVcdFile, Block_proc_U0_ap_done, "Block_proc_U0_ap_done");
    sc_trace(mVcdFile, Block_proc_U0_ap_continue, "Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, Block_proc_U0_ap_idle, "Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready, "Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_imgInput1_rows_out_din, "Block_proc_U0_imgInput1_rows_out_din");
    sc_trace(mVcdFile, Block_proc_U0_imgInput1_rows_out_write, "Block_proc_U0_imgInput1_rows_out_write");
    sc_trace(mVcdFile, Block_proc_U0_imgInput1_cols_out_din, "Block_proc_U0_imgInput1_cols_out_din");
    sc_trace(mVcdFile, Block_proc_U0_imgInput1_cols_out_write, "Block_proc_U0_imgInput1_cols_out_write");
    sc_trace(mVcdFile, Block_proc_U0_imgOutput1_rows_out_din, "Block_proc_U0_imgOutput1_rows_out_din");
    sc_trace(mVcdFile, Block_proc_U0_imgOutput1_rows_out_write, "Block_proc_U0_imgOutput1_rows_out_write");
    sc_trace(mVcdFile, Block_proc_U0_imgOutput1_cols_out_din, "Block_proc_U0_imgOutput1_cols_out_din");
    sc_trace(mVcdFile, Block_proc_U0_imgOutput1_cols_out_write, "Block_proc_U0_imgOutput1_cols_out_write");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_ap_start, "AXIvideo2xfMat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_ap_done, "AXIvideo2xfMat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_ap_continue, "AXIvideo2xfMat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_ap_idle, "AXIvideo2xfMat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_ap_ready, "AXIvideo2xfMat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_p_src_TREADY, "AXIvideo2xfMat_U0_p_src_TREADY");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_rows_read, "AXIvideo2xfMat_U0_img_rows_read");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_cols_read, "AXIvideo2xfMat_U0_img_cols_read");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_data_V_din, "AXIvideo2xfMat_U0_img_data_V_din");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_data_V_write, "AXIvideo2xfMat_U0_img_data_V_write");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_rows_out_din, "AXIvideo2xfMat_U0_img_rows_out_din");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_rows_out_write, "AXIvideo2xfMat_U0_img_rows_out_write");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_cols_out_din, "AXIvideo2xfMat_U0_img_cols_out_din");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_img_cols_out_write, "AXIvideo2xfMat_U0_img_cols_out_write");
    sc_trace(mVcdFile, warpTransform_U0_ap_start, "warpTransform_U0_ap_start");
    sc_trace(mVcdFile, warpTransform_U0_start_out, "warpTransform_U0_start_out");
    sc_trace(mVcdFile, warpTransform_U0_start_write, "warpTransform_U0_start_write");
    sc_trace(mVcdFile, warpTransform_U0_p_src_mat_rows_read, "warpTransform_U0_p_src_mat_rows_read");
    sc_trace(mVcdFile, warpTransform_U0_p_src_mat_cols_read, "warpTransform_U0_p_src_mat_cols_read");
    sc_trace(mVcdFile, warpTransform_U0_p_src_mat_data_V_read, "warpTransform_U0_p_src_mat_data_V_read");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_rows_read, "warpTransform_U0_p_dst_mat_rows_read");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_cols_read, "warpTransform_U0_p_dst_mat_cols_read");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_data_V_din, "warpTransform_U0_p_dst_mat_data_V_din");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_data_V_write, "warpTransform_U0_p_dst_mat_data_V_write");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_address0, "warpTransform_U0_P_matrix_address0");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_ce0, "warpTransform_U0_P_matrix_ce0");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_d0, "warpTransform_U0_P_matrix_d0");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_we0, "warpTransform_U0_P_matrix_we0");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_address1, "warpTransform_U0_P_matrix_address1");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_ce1, "warpTransform_U0_P_matrix_ce1");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_d1, "warpTransform_U0_P_matrix_d1");
    sc_trace(mVcdFile, warpTransform_U0_P_matrix_we1, "warpTransform_U0_P_matrix_we1");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_rows_out_din, "warpTransform_U0_p_dst_mat_rows_out_din");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_rows_out_write, "warpTransform_U0_p_dst_mat_rows_out_write");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_cols_out_din, "warpTransform_U0_p_dst_mat_cols_out_din");
    sc_trace(mVcdFile, warpTransform_U0_p_dst_mat_cols_out_write, "warpTransform_U0_p_dst_mat_cols_out_write");
    sc_trace(mVcdFile, warpTransform_U0_ap_done, "warpTransform_U0_ap_done");
    sc_trace(mVcdFile, warpTransform_U0_ap_ready, "warpTransform_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_U0_ap_idle, "warpTransform_U0_ap_idle");
    sc_trace(mVcdFile, warpTransform_U0_ap_continue, "warpTransform_U0_ap_continue");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_ap_start, "xfMat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_ap_done, "xfMat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_ap_continue, "xfMat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_ap_idle, "xfMat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_ap_ready, "xfMat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_img_rows_read, "xfMat2AXIvideo_U0_img_rows_read");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_img_cols_read, "xfMat2AXIvideo_U0_img_cols_read");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_img_data_V_read, "xfMat2AXIvideo_U0_img_data_V_read");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TDATA, "xfMat2AXIvideo_U0_p_dst_TDATA");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TVALID, "xfMat2AXIvideo_U0_p_dst_TVALID");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TKEEP, "xfMat2AXIvideo_U0_p_dst_TKEEP");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TSTRB, "xfMat2AXIvideo_U0_p_dst_TSTRB");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TUSER, "xfMat2AXIvideo_U0_p_dst_TUSER");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TLAST, "xfMat2AXIvideo_U0_p_dst_TLAST");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TID, "xfMat2AXIvideo_U0_p_dst_TID");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_p_dst_TDEST, "xfMat2AXIvideo_U0_p_dst_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, imgInput1_rows_c_full_n, "imgInput1_rows_c_full_n");
    sc_trace(mVcdFile, imgInput1_rows_c_dout, "imgInput1_rows_c_dout");
    sc_trace(mVcdFile, imgInput1_rows_c_empty_n, "imgInput1_rows_c_empty_n");
    sc_trace(mVcdFile, imgInput1_cols_c_full_n, "imgInput1_cols_c_full_n");
    sc_trace(mVcdFile, imgInput1_cols_c_dout, "imgInput1_cols_c_dout");
    sc_trace(mVcdFile, imgInput1_cols_c_empty_n, "imgInput1_cols_c_empty_n");
    sc_trace(mVcdFile, imgOutput1_rows_c_full_n, "imgOutput1_rows_c_full_n");
    sc_trace(mVcdFile, imgOutput1_rows_c_dout, "imgOutput1_rows_c_dout");
    sc_trace(mVcdFile, imgOutput1_rows_c_empty_n, "imgOutput1_rows_c_empty_n");
    sc_trace(mVcdFile, imgOutput1_cols_c_full_n, "imgOutput1_cols_c_full_n");
    sc_trace(mVcdFile, imgOutput1_cols_c_dout, "imgOutput1_cols_c_dout");
    sc_trace(mVcdFile, imgOutput1_cols_c_empty_n, "imgOutput1_cols_c_empty_n");
    sc_trace(mVcdFile, imgInput1_data_V_full_n, "imgInput1_data_V_full_n");
    sc_trace(mVcdFile, imgInput1_data_V_dout, "imgInput1_data_V_dout");
    sc_trace(mVcdFile, imgInput1_data_V_empty_n, "imgInput1_data_V_empty_n");
    sc_trace(mVcdFile, imgInput1_rows_c4_full_n, "imgInput1_rows_c4_full_n");
    sc_trace(mVcdFile, imgInput1_rows_c4_dout, "imgInput1_rows_c4_dout");
    sc_trace(mVcdFile, imgInput1_rows_c4_empty_n, "imgInput1_rows_c4_empty_n");
    sc_trace(mVcdFile, imgInput1_cols_c5_full_n, "imgInput1_cols_c5_full_n");
    sc_trace(mVcdFile, imgInput1_cols_c5_dout, "imgInput1_cols_c5_dout");
    sc_trace(mVcdFile, imgInput1_cols_c5_empty_n, "imgInput1_cols_c5_empty_n");
    sc_trace(mVcdFile, imgOutput1_data_V_full_n, "imgOutput1_data_V_full_n");
    sc_trace(mVcdFile, imgOutput1_data_V_dout, "imgOutput1_data_V_dout");
    sc_trace(mVcdFile, imgOutput1_data_V_empty_n, "imgOutput1_data_V_empty_n");
    sc_trace(mVcdFile, imgOutput1_rows_c6_full_n, "imgOutput1_rows_c6_full_n");
    sc_trace(mVcdFile, imgOutput1_rows_c6_dout, "imgOutput1_rows_c6_dout");
    sc_trace(mVcdFile, imgOutput1_rows_c6_empty_n, "imgOutput1_rows_c6_empty_n");
    sc_trace(mVcdFile, imgOutput1_cols_c7_full_n, "imgOutput1_cols_c7_full_n");
    sc_trace(mVcdFile, imgOutput1_cols_c7_dout, "imgOutput1_cols_c7_dout");
    sc_trace(mVcdFile, imgOutput1_cols_c7_empty_n, "imgOutput1_cols_c7_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_Block_proc_U0_ap_ready, "ap_sync_reg_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Block_proc_U0_ap_ready, "ap_sync_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready_count, "Block_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_AXIvideo2xfMat_U0_ap_ready, "ap_sync_reg_AXIvideo2xfMat_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_AXIvideo2xfMat_U0_ap_ready, "ap_sync_AXIvideo2xfMat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_ap_ready_count, "AXIvideo2xfMat_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_warpTransform_U0_ap_ready, "ap_sync_reg_warpTransform_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_warpTransform_U0_ap_ready, "ap_sync_warpTransform_U0_ap_ready");
    sc_trace(mVcdFile, warpTransform_U0_ap_ready_count, "warpTransform_U0_ap_ready_count");
    sc_trace(mVcdFile, Block_proc_U0_start_full_n, "Block_proc_U0_start_full_n");
    sc_trace(mVcdFile, Block_proc_U0_start_write, "Block_proc_U0_start_write");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_start_full_n, "AXIvideo2xfMat_U0_start_full_n");
    sc_trace(mVcdFile, AXIvideo2xfMat_U0_start_write, "AXIvideo2xfMat_U0_start_write");
    sc_trace(mVcdFile, start_for_xfMat2AXIvideo_U0_din, "start_for_xfMat2AXIvideo_U0_din");
    sc_trace(mVcdFile, start_for_xfMat2AXIvideo_U0_full_n, "start_for_xfMat2AXIvideo_U0_full_n");
    sc_trace(mVcdFile, start_for_xfMat2AXIvideo_U0_dout, "start_for_xfMat2AXIvideo_U0_dout");
    sc_trace(mVcdFile, start_for_xfMat2AXIvideo_U0_empty_n, "start_for_xfMat2AXIvideo_U0_empty_n");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_start_full_n, "xfMat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, xfMat2AXIvideo_U0_start_write, "xfMat2AXIvideo_U0_start_write");
#endif

    }
    mHdltvinHandle.open("warp_stream_accel.hdltvin.dat");
    mHdltvoutHandle.open("warp_stream_accel.hdltvout.dat");
}

warp_stream_accel::~warp_stream_accel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Block_proc_U0;
    delete AXIvideo2xfMat_U0;
    delete warpTransform_U0;
    delete xfMat2AXIvideo_U0;
    delete imgInput1_rows_c_U;
    delete imgInput1_cols_c_U;
    delete imgOutput1_rows_c_U;
    delete imgOutput1_cols_c_U;
    delete imgInput1_data_V_U;
    delete imgInput1_rows_c4_U;
    delete imgInput1_cols_c5_U;
    delete imgOutput1_data_V_U;
    delete imgOutput1_rows_c6_U;
    delete imgOutput1_cols_c7_U;
    delete start_for_xfMat2Ab3s_U;
}

void warp_stream_accel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void warp_stream_accel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void warp_stream_accel::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, AXIvideo2xfMat_U0_ap_ready.read()))) {
        AXIvideo2xfMat_U0_ap_ready_count = (!AXIvideo2xfMat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2xfMat_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, AXIvideo2xfMat_U0_ap_ready.read()))) {
        AXIvideo2xfMat_U0_ap_ready_count = (!AXIvideo2xfMat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2xfMat_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, Block_proc_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        Block_proc_U0_ap_ready_count = (!Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(Block_proc_U0_ap_ready.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        Block_proc_U0_ap_ready_count = (!Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_AXIvideo2xfMat_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_AXIvideo2xfMat_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_AXIvideo2xfMat_U0_ap_ready = ap_sync_AXIvideo2xfMat_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_Block_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Block_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Block_proc_U0_ap_ready = ap_sync_Block_proc_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_warpTransform_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_warpTransform_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_warpTransform_U0_ap_ready = ap_sync_warpTransform_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, warpTransform_U0_ap_ready.read()))) {
        warpTransform_U0_ap_ready_count = (!warpTransform_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, warpTransform_U0_ap_ready.read()))) {
        warpTransform_U0_ap_ready_count = (!warpTransform_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(warpTransform_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void warp_stream_accel::thread_AXIvideo2xfMat_U0_ap_continue() {
    AXIvideo2xfMat_U0_ap_continue = ap_const_logic_1;
}

void warp_stream_accel::thread_AXIvideo2xfMat_U0_ap_start() {
    AXIvideo2xfMat_U0_ap_start = (ap_start.read() & (ap_sync_reg_AXIvideo2xfMat_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void warp_stream_accel::thread_AXIvideo2xfMat_U0_start_full_n() {
    AXIvideo2xfMat_U0_start_full_n = ap_const_logic_1;
}

void warp_stream_accel::thread_AXIvideo2xfMat_U0_start_write() {
    AXIvideo2xfMat_U0_start_write = ap_const_logic_0;
}

void warp_stream_accel::thread_Block_proc_U0_ap_continue() {
    Block_proc_U0_ap_continue = ap_const_logic_1;
}

void warp_stream_accel::thread_Block_proc_U0_ap_start() {
    Block_proc_U0_ap_start = (ap_start.read() & (ap_sync_reg_Block_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void warp_stream_accel::thread_Block_proc_U0_start_full_n() {
    Block_proc_U0_start_full_n = ap_const_logic_1;
}

void warp_stream_accel::thread_Block_proc_U0_start_write() {
    Block_proc_U0_start_write = ap_const_logic_0;
}

void warp_stream_accel::thread_R_address0() {
    R_address0 = warpTransform_U0_P_matrix_address0.read();
}

void warp_stream_accel::thread_R_address1() {
    R_address1 = ap_const_lv4_0;
}

void warp_stream_accel::thread_R_ce0() {
    R_ce0 = warpTransform_U0_P_matrix_ce0.read();
}

void warp_stream_accel::thread_R_ce1() {
    R_ce1 = ap_const_logic_0;
}

void warp_stream_accel::thread_R_d0() {
    R_d0 = ap_const_lv32_0;
}

void warp_stream_accel::thread_R_d1() {
    R_d1 = ap_const_lv32_0;
}

void warp_stream_accel::thread_R_we0() {
    R_we0 = ap_const_logic_0;
}

void warp_stream_accel::thread_R_we1() {
    R_we1 = ap_const_logic_0;
}

void warp_stream_accel::thread_ap_done() {
    ap_done = xfMat2AXIvideo_U0_ap_done.read();
}

void warp_stream_accel::thread_ap_idle() {
    ap_idle = (Block_proc_U0_ap_idle.read() & AXIvideo2xfMat_U0_ap_idle.read() & warpTransform_U0_ap_idle.read() & xfMat2AXIvideo_U0_ap_idle.read());
}

void warp_stream_accel::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void warp_stream_accel::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void warp_stream_accel::thread_ap_sync_AXIvideo2xfMat_U0_ap_ready() {
    ap_sync_AXIvideo2xfMat_U0_ap_ready = (AXIvideo2xfMat_U0_ap_ready.read() | ap_sync_reg_AXIvideo2xfMat_U0_ap_ready.read());
}

void warp_stream_accel::thread_ap_sync_Block_proc_U0_ap_ready() {
    ap_sync_Block_proc_U0_ap_ready = (Block_proc_U0_ap_ready.read() | ap_sync_reg_Block_proc_U0_ap_ready.read());
}

void warp_stream_accel::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void warp_stream_accel::thread_ap_sync_done() {
    ap_sync_done = xfMat2AXIvideo_U0_ap_done.read();
}

void warp_stream_accel::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_Block_proc_U0_ap_ready.read() & ap_sync_AXIvideo2xfMat_U0_ap_ready.read() & ap_sync_warpTransform_U0_ap_ready.read());
}

void warp_stream_accel::thread_ap_sync_warpTransform_U0_ap_ready() {
    ap_sync_warpTransform_U0_ap_ready = (warpTransform_U0_ap_ready.read() | ap_sync_reg_warpTransform_U0_ap_ready.read());
}

void warp_stream_accel::thread_p_dst_TDATA() {
    p_dst_TDATA = xfMat2AXIvideo_U0_p_dst_TDATA.read();
}

void warp_stream_accel::thread_p_dst_TDEST() {
    p_dst_TDEST = xfMat2AXIvideo_U0_p_dst_TDEST.read();
}

void warp_stream_accel::thread_p_dst_TID() {
    p_dst_TID = xfMat2AXIvideo_U0_p_dst_TID.read();
}

void warp_stream_accel::thread_p_dst_TKEEP() {
    p_dst_TKEEP = xfMat2AXIvideo_U0_p_dst_TKEEP.read();
}

void warp_stream_accel::thread_p_dst_TLAST() {
    p_dst_TLAST = xfMat2AXIvideo_U0_p_dst_TLAST.read();
}

void warp_stream_accel::thread_p_dst_TSTRB() {
    p_dst_TSTRB = xfMat2AXIvideo_U0_p_dst_TSTRB.read();
}

void warp_stream_accel::thread_p_dst_TUSER() {
    p_dst_TUSER = xfMat2AXIvideo_U0_p_dst_TUSER.read();
}

void warp_stream_accel::thread_p_dst_TVALID() {
    p_dst_TVALID = xfMat2AXIvideo_U0_p_dst_TVALID.read();
}

void warp_stream_accel::thread_p_src_TREADY() {
    p_src_TREADY = AXIvideo2xfMat_U0_p_src_TREADY.read();
}

void warp_stream_accel::thread_start_for_xfMat2AXIvideo_U0_din() {
    start_for_xfMat2AXIvideo_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void warp_stream_accel::thread_warpTransform_U0_ap_continue() {
    warpTransform_U0_ap_continue = ap_const_logic_1;
}

void warp_stream_accel::thread_warpTransform_U0_ap_start() {
    warpTransform_U0_ap_start = (ap_start.read() & (ap_sync_reg_warpTransform_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void warp_stream_accel::thread_xfMat2AXIvideo_U0_ap_continue() {
    xfMat2AXIvideo_U0_ap_continue = ap_const_logic_1;
}

void warp_stream_accel::thread_xfMat2AXIvideo_U0_ap_start() {
    xfMat2AXIvideo_U0_ap_start = start_for_xfMat2AXIvideo_U0_empty_n.read();
}

void warp_stream_accel::thread_xfMat2AXIvideo_U0_start_full_n() {
    xfMat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void warp_stream_accel::thread_xfMat2AXIvideo_U0_start_write() {
    xfMat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void warp_stream_accel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"p_src_TDATA\" :  \"" << p_src_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_src_TKEEP\" :  \"" << p_src_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_src_TSTRB\" :  \"" << p_src_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_src_TUSER\" :  \"" << p_src_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_src_TLAST\" :  \"" << p_src_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_src_TID\" :  \"" << p_src_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_src_TDEST\" :  \"" << p_src_TDEST.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"p_dst_TDATA\" :  \"" << p_dst_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_dst_TKEEP\" :  \"" << p_dst_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_dst_TSTRB\" :  \"" << p_dst_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_dst_TUSER\" :  \"" << p_dst_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_dst_TLAST\" :  \"" << p_dst_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_dst_TID\" :  \"" << p_dst_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_dst_TDEST\" :  \"" << p_dst_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_address0\" :  \"" << R_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_ce0\" :  \"" << R_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_d0\" :  \"" << R_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"R_q0\" :  \"" << R_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_we0\" :  \"" << R_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_address1\" :  \"" << R_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_ce1\" :  \"" << R_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_d1\" :  \"" << R_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"R_q1\" :  \"" << R_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"R_we1\" :  \"" << R_we1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_src_TVALID\" :  \"" << p_src_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_src_TREADY\" :  \"" << p_src_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"p_dst_TVALID\" :  \"" << p_dst_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"p_dst_TREADY\" :  \"" << p_dst_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

