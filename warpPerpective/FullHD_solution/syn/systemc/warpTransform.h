// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _warpTransform_HH_
#define _warpTransform_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "warpTransform_Block_1.h"
#include "warpTransform_Loop_1.h"
#include "warpTransform_Block_s.h"
#include "warpTransform_Loop_4.h"
#include "fifo_w12_d2_A.h"
#include "fifo_w12_d4_A.h"
#include "fifo_w8_d2_A.h"
#include "start_for_warpTrab2s.h"

namespace ap_rtl {

struct warpTransform : public sc_module {
    // Port declarations 44
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<12> > p_src_mat_rows_dout;
    sc_in< sc_logic > p_src_mat_rows_empty_n;
    sc_out< sc_logic > p_src_mat_rows_read;
    sc_in< sc_lv<12> > p_src_mat_cols_dout;
    sc_in< sc_logic > p_src_mat_cols_empty_n;
    sc_out< sc_logic > p_src_mat_cols_read;
    sc_in< sc_lv<8> > p_src_mat_data_V_dout;
    sc_in< sc_logic > p_src_mat_data_V_empty_n;
    sc_out< sc_logic > p_src_mat_data_V_read;
    sc_in< sc_lv<12> > p_dst_mat_rows_dout;
    sc_in< sc_logic > p_dst_mat_rows_empty_n;
    sc_out< sc_logic > p_dst_mat_rows_read;
    sc_in< sc_lv<12> > p_dst_mat_cols_dout;
    sc_in< sc_logic > p_dst_mat_cols_empty_n;
    sc_out< sc_logic > p_dst_mat_cols_read;
    sc_out< sc_lv<8> > p_dst_mat_data_V_din;
    sc_in< sc_logic > p_dst_mat_data_V_full_n;
    sc_out< sc_logic > p_dst_mat_data_V_write;
    sc_out< sc_lv<4> > P_matrix_address0;
    sc_out< sc_logic > P_matrix_ce0;
    sc_out< sc_lv<32> > P_matrix_d0;
    sc_in< sc_lv<32> > P_matrix_q0;
    sc_out< sc_logic > P_matrix_we0;
    sc_out< sc_lv<4> > P_matrix_address1;
    sc_out< sc_logic > P_matrix_ce1;
    sc_out< sc_lv<32> > P_matrix_d1;
    sc_in< sc_lv<32> > P_matrix_q1;
    sc_out< sc_logic > P_matrix_we1;
    sc_out< sc_lv<12> > p_dst_mat_rows_out_din;
    sc_in< sc_logic > p_dst_mat_rows_out_full_n;
    sc_out< sc_logic > p_dst_mat_rows_out_write;
    sc_out< sc_lv<12> > p_dst_mat_cols_out_din;
    sc_in< sc_logic > p_dst_mat_cols_out_full_n;
    sc_out< sc_logic > p_dst_mat_cols_out_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    warpTransform(sc_module_name name);
    SC_HAS_PROCESS(warpTransform);

    ~warpTransform();

    sc_trace_file* mVcdFile;

    warpTransform_Block_1* warpTransform_Block_1_U0;
    warpTransform_Loop_1* warpTransform_Loop_1_U0;
    warpTransform_Block_s* warpTransform_Block_U0;
    warpTransform_Loop_4* warpTransform_Loop_4_U0;
    fifo_w12_d2_A* p_src_mat_cols_load33_1_U;
    fifo_w12_d2_A* p_src_mat_rows_c_i_U;
    fifo_w12_d4_A* p_dst_mat_rows_c_i_U;
    fifo_w12_d4_A* p_dst_mat_cols_c_i_U;
    fifo_w8_d2_A* in_stream_V_V_U;
    fifo_w12_d2_A* p_src_mat_cols_load33_U;
    fifo_w12_d2_A* p_src_mat_rows_load_U;
    fifo_w8_d2_A* out_stream_V_V_U;
    start_for_warpTrab2s* start_for_warpTrab2s_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > warpTransform_Block_1_U0_ap_start;
    sc_signal< sc_logic > warpTransform_Block_1_U0_ap_done;
    sc_signal< sc_logic > warpTransform_Block_1_U0_ap_continue;
    sc_signal< sc_logic > warpTransform_Block_1_U0_ap_idle;
    sc_signal< sc_logic > warpTransform_Block_1_U0_ap_ready;
    sc_signal< sc_logic > warpTransform_Block_1_U0_start_out;
    sc_signal< sc_logic > warpTransform_Block_1_U0_start_write;
    sc_signal< sc_logic > warpTransform_Block_1_U0_scalar_dst_mat_cols_read;
    sc_signal< sc_lv<12> > warpTransform_Block_1_U0_p_dst_mat_cols_out_din;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_dst_mat_cols_out_write;
    sc_signal< sc_logic > warpTransform_Block_1_U0_scalar_dst_mat_rows_read;
    sc_signal< sc_lv<12> > warpTransform_Block_1_U0_p_dst_mat_rows_out_din;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_dst_mat_rows_out_write;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_src_mat_cols_read;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_src_mat_rows_read;
    sc_signal< sc_lv<12> > warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write;
    sc_signal< sc_lv<12> > warpTransform_Block_1_U0_p_src_mat_rows_c_i_din;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_src_mat_rows_c_i_write;
    sc_signal< sc_lv<12> > warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write;
    sc_signal< sc_lv<12> > warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din;
    sc_signal< sc_logic > warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_ap_start;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_ap_done;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_ap_continue;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_ap_idle;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_ap_ready;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_p_src_mat_rows_read;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_p_src_mat_data_V_read;
    sc_signal< sc_lv<8> > warpTransform_Loop_1_U0_in_stream_V_V_din;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_in_stream_V_V_write;
    sc_signal< sc_lv<12> > warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write;
    sc_signal< sc_lv<12> > warpTransform_Loop_1_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_p_src_mat_rows_load;
    sc_signal< sc_logic > p_src_mat_rows_load_full_n;
    sc_signal< sc_logic > warpTransform_Block_U0_ap_start;
    sc_signal< sc_logic > warpTransform_Block_U0_ap_done;
    sc_signal< sc_logic > warpTransform_Block_U0_ap_continue;
    sc_signal< sc_logic > warpTransform_Block_U0_ap_idle;
    sc_signal< sc_logic > warpTransform_Block_U0_ap_ready;
    sc_signal< sc_lv<4> > warpTransform_Block_U0_P_matrix_address0;
    sc_signal< sc_logic > warpTransform_Block_U0_P_matrix_ce0;
    sc_signal< sc_logic > warpTransform_Block_U0_p_src_mat_cols_load337_loc_read;
    sc_signal< sc_logic > warpTransform_Block_U0_in_stream_V_V_read;
    sc_signal< sc_lv<8> > warpTransform_Block_U0_out_stream_V_V_din;
    sc_signal< sc_logic > warpTransform_Block_U0_out_stream_V_V_write;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_ap_start;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_ap_done;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_ap_continue;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_ap_idle;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_ap_ready;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_p_dst_mat_rows_read;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_p_dst_mat_cols_read;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_out_stream_V_V_read;
    sc_signal< sc_lv<8> > warpTransform_Loop_4_U0_p_dst_mat_data_V_din;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_p_dst_mat_data_V_write;
    sc_signal< sc_logic > p_src_mat_cols_load33_1_full_n;
    sc_signal< sc_lv<12> > p_src_mat_cols_load33_1_dout;
    sc_signal< sc_logic > p_src_mat_cols_load33_1_empty_n;
    sc_signal< sc_logic > p_src_mat_rows_c_i_full_n;
    sc_signal< sc_lv<12> > p_src_mat_rows_c_i_dout;
    sc_signal< sc_logic > p_src_mat_rows_c_i_empty_n;
    sc_signal< sc_logic > p_dst_mat_rows_c_i_full_n;
    sc_signal< sc_lv<12> > p_dst_mat_rows_c_i_dout;
    sc_signal< sc_logic > p_dst_mat_rows_c_i_empty_n;
    sc_signal< sc_logic > p_dst_mat_cols_c_i_full_n;
    sc_signal< sc_lv<12> > p_dst_mat_cols_c_i_dout;
    sc_signal< sc_logic > p_dst_mat_cols_c_i_empty_n;
    sc_signal< sc_logic > in_stream_V_V_full_n;
    sc_signal< sc_lv<8> > in_stream_V_V_dout;
    sc_signal< sc_logic > in_stream_V_V_empty_n;
    sc_signal< sc_logic > p_src_mat_cols_load33_full_n;
    sc_signal< sc_lv<12> > p_src_mat_cols_load33_dout;
    sc_signal< sc_logic > p_src_mat_cols_load33_empty_n;
    sc_signal< sc_lv<12> > p_src_mat_rows_load_dout;
    sc_signal< sc_logic > p_src_mat_rows_load_empty_n;
    sc_signal< sc_logic > out_stream_V_V_full_n;
    sc_signal< sc_lv<8> > out_stream_V_V_dout;
    sc_signal< sc_logic > out_stream_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_warpTransform_Block_1_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_warpTransform_Block_1_U0_ap_ready;
    sc_signal< sc_lv<2> > warpTransform_Block_1_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_warpTransform_Loop_1_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_warpTransform_Loop_1_U0_ap_ready;
    sc_signal< sc_lv<2> > warpTransform_Loop_1_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_warpTransform_Block_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_warpTransform_Block_U0_ap_ready;
    sc_signal< sc_lv<2> > warpTransform_Block_U0_ap_ready_count;
    sc_signal< sc_lv<1> > start_for_warpTransform_Loop_4_U0_din;
    sc_signal< sc_logic > start_for_warpTransform_Loop_4_U0_full_n;
    sc_signal< sc_lv<1> > start_for_warpTransform_Loop_4_U0_dout;
    sc_signal< sc_logic > start_for_warpTransform_Loop_4_U0_empty_n;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_start_full_n;
    sc_signal< sc_logic > warpTransform_Loop_1_U0_start_write;
    sc_signal< sc_logic > warpTransform_Block_U0_start_full_n;
    sc_signal< sc_logic > warpTransform_Block_U0_start_write;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_start_full_n;
    sc_signal< sc_logic > warpTransform_Loop_4_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_P_matrix_address0();
    void thread_P_matrix_address1();
    void thread_P_matrix_ce0();
    void thread_P_matrix_ce1();
    void thread_P_matrix_d0();
    void thread_P_matrix_d1();
    void thread_P_matrix_we0();
    void thread_P_matrix_we1();
    void thread_ap_channel_done_p_src_mat_rows_load();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_ap_sync_warpTransform_Block_1_U0_ap_ready();
    void thread_ap_sync_warpTransform_Block_U0_ap_ready();
    void thread_ap_sync_warpTransform_Loop_1_U0_ap_ready();
    void thread_internal_ap_ready();
    void thread_p_dst_mat_cols_out_din();
    void thread_p_dst_mat_cols_out_write();
    void thread_p_dst_mat_cols_read();
    void thread_p_dst_mat_data_V_din();
    void thread_p_dst_mat_data_V_write();
    void thread_p_dst_mat_rows_out_din();
    void thread_p_dst_mat_rows_out_write();
    void thread_p_dst_mat_rows_read();
    void thread_p_src_mat_cols_read();
    void thread_p_src_mat_data_V_read();
    void thread_p_src_mat_rows_read();
    void thread_real_start();
    void thread_start_for_warpTransform_Loop_4_U0_din();
    void thread_start_out();
    void thread_start_write();
    void thread_warpTransform_Block_1_U0_ap_continue();
    void thread_warpTransform_Block_1_U0_ap_start();
    void thread_warpTransform_Block_U0_ap_continue();
    void thread_warpTransform_Block_U0_ap_start();
    void thread_warpTransform_Block_U0_start_full_n();
    void thread_warpTransform_Block_U0_start_write();
    void thread_warpTransform_Loop_1_U0_ap_continue();
    void thread_warpTransform_Loop_1_U0_ap_start();
    void thread_warpTransform_Loop_1_U0_start_full_n();
    void thread_warpTransform_Loop_1_U0_start_write();
    void thread_warpTransform_Loop_4_U0_ap_continue();
    void thread_warpTransform_Loop_4_U0_ap_start();
    void thread_warpTransform_Loop_4_U0_start_full_n();
    void thread_warpTransform_Loop_4_U0_start_write();
};

}

using namespace ap_rtl;

#endif
