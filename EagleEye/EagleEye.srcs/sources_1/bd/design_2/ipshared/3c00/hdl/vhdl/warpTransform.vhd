-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity warpTransform is
port (
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_mat_rows_empty_n : IN STD_LOGIC;
    p_src_mat_rows_read : OUT STD_LOGIC;
    p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_mat_cols_empty_n : IN STD_LOGIC;
    p_src_mat_cols_read : OUT STD_LOGIC;
    p_src_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_data_V_empty_n : IN STD_LOGIC;
    p_src_mat_data_V_read : OUT STD_LOGIC;
    p_dst_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_dst_mat_rows_empty_n : IN STD_LOGIC;
    p_dst_mat_rows_read : OUT STD_LOGIC;
    p_dst_mat_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    p_dst_mat_cols_empty_n : IN STD_LOGIC;
    p_dst_mat_cols_read : OUT STD_LOGIC;
    p_dst_mat_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_mat_data_V_full_n : IN STD_LOGIC;
    p_dst_mat_data_V_write : OUT STD_LOGIC;
    P_matrix_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_matrix_EN_A : OUT STD_LOGIC;
    P_matrix_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_matrix_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    P_matrix_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_dst_mat_rows_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    p_dst_mat_rows_out_full_n : IN STD_LOGIC;
    p_dst_mat_rows_out_write : OUT STD_LOGIC;
    p_dst_mat_cols_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    p_dst_mat_cols_out_full_n : IN STD_LOGIC;
    p_dst_mat_cols_out_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of warpTransform is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal internal_ap_ready : STD_LOGIC;
    signal warpTransform_Block_1_U0_ap_start : STD_LOGIC;
    signal warpTransform_Block_1_U0_ap_done : STD_LOGIC;
    signal warpTransform_Block_1_U0_ap_continue : STD_LOGIC;
    signal warpTransform_Block_1_U0_ap_idle : STD_LOGIC;
    signal warpTransform_Block_1_U0_ap_ready : STD_LOGIC;
    signal warpTransform_Block_1_U0_start_out : STD_LOGIC;
    signal warpTransform_Block_1_U0_start_write : STD_LOGIC;
    signal warpTransform_Block_1_U0_scalar_dst_mat_cols_read : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_dst_mat_cols_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal warpTransform_Block_1_U0_p_dst_mat_cols_out_write : STD_LOGIC;
    signal warpTransform_Block_1_U0_scalar_dst_mat_rows_read : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_dst_mat_rows_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal warpTransform_Block_1_U0_p_dst_mat_rows_out_write : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_src_mat_cols_read : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_src_mat_rows_read : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din : STD_LOGIC_VECTOR (11 downto 0);
    signal warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_src_mat_rows_c_i_din : STD_LOGIC_VECTOR (11 downto 0);
    signal warpTransform_Block_1_U0_p_src_mat_rows_c_i_write : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din : STD_LOGIC_VECTOR (11 downto 0);
    signal warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write : STD_LOGIC;
    signal warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din : STD_LOGIC_VECTOR (11 downto 0);
    signal warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal warpTransform_Loop_1_U0_ap_start : STD_LOGIC;
    signal warpTransform_Loop_1_U0_ap_done : STD_LOGIC;
    signal warpTransform_Loop_1_U0_ap_continue : STD_LOGIC;
    signal warpTransform_Loop_1_U0_ap_idle : STD_LOGIC;
    signal warpTransform_Loop_1_U0_ap_ready : STD_LOGIC;
    signal warpTransform_Loop_1_U0_p_src_mat_rows_read : STD_LOGIC;
    signal warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read : STD_LOGIC;
    signal warpTransform_Loop_1_U0_p_src_mat_data_V_read : STD_LOGIC;
    signal warpTransform_Loop_1_U0_in_stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal warpTransform_Loop_1_U0_in_stream_V_V_write : STD_LOGIC;
    signal warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write : STD_LOGIC;
    signal warpTransform_Loop_1_U0_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_channel_done_p_src_mat_rows_load : STD_LOGIC;
    signal p_src_mat_rows_load_full_n : STD_LOGIC;
    signal warpTransform_Block_U0_ap_start : STD_LOGIC;
    signal warpTransform_Block_U0_ap_done : STD_LOGIC;
    signal warpTransform_Block_U0_ap_continue : STD_LOGIC;
    signal warpTransform_Block_U0_ap_idle : STD_LOGIC;
    signal warpTransform_Block_U0_ap_ready : STD_LOGIC;
    signal warpTransform_Block_U0_P_matrix_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal warpTransform_Block_U0_P_matrix_EN_A : STD_LOGIC;
    signal warpTransform_Block_U0_P_matrix_WEN_A : STD_LOGIC_VECTOR (3 downto 0);
    signal warpTransform_Block_U0_P_matrix_Din_A : STD_LOGIC_VECTOR (31 downto 0);
    signal warpTransform_Block_U0_p_src_mat_cols_load337_loc_read : STD_LOGIC;
    signal warpTransform_Block_U0_in_stream_V_V_read : STD_LOGIC;
    signal warpTransform_Block_U0_out_stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal warpTransform_Block_U0_out_stream_V_V_write : STD_LOGIC;
    signal warpTransform_Loop_4_U0_ap_start : STD_LOGIC;
    signal warpTransform_Loop_4_U0_ap_done : STD_LOGIC;
    signal warpTransform_Loop_4_U0_ap_continue : STD_LOGIC;
    signal warpTransform_Loop_4_U0_ap_idle : STD_LOGIC;
    signal warpTransform_Loop_4_U0_ap_ready : STD_LOGIC;
    signal warpTransform_Loop_4_U0_p_dst_mat_rows_read : STD_LOGIC;
    signal warpTransform_Loop_4_U0_p_dst_mat_cols_read : STD_LOGIC;
    signal warpTransform_Loop_4_U0_out_stream_V_V_read : STD_LOGIC;
    signal warpTransform_Loop_4_U0_p_dst_mat_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal warpTransform_Loop_4_U0_p_dst_mat_data_V_write : STD_LOGIC;
    signal p_src_mat_cols_load33_1_full_n : STD_LOGIC;
    signal p_src_mat_cols_load33_1_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_src_mat_cols_load33_1_empty_n : STD_LOGIC;
    signal p_src_mat_rows_c_i_full_n : STD_LOGIC;
    signal p_src_mat_rows_c_i_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_src_mat_rows_c_i_empty_n : STD_LOGIC;
    signal p_dst_mat_rows_c_i_full_n : STD_LOGIC;
    signal p_dst_mat_rows_c_i_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_dst_mat_rows_c_i_empty_n : STD_LOGIC;
    signal p_dst_mat_cols_c_i_full_n : STD_LOGIC;
    signal p_dst_mat_cols_c_i_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_dst_mat_cols_c_i_empty_n : STD_LOGIC;
    signal in_stream_V_V_full_n : STD_LOGIC;
    signal in_stream_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal in_stream_V_V_empty_n : STD_LOGIC;
    signal p_src_mat_cols_load33_full_n : STD_LOGIC;
    signal p_src_mat_cols_load33_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_src_mat_cols_load33_empty_n : STD_LOGIC;
    signal p_src_mat_rows_load_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal p_src_mat_rows_load_empty_n : STD_LOGIC;
    signal out_stream_V_V_full_n : STD_LOGIC;
    signal out_stream_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal out_stream_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_warpTransform_Block_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_warpTransform_Block_1_U0_ap_ready : STD_LOGIC;
    signal warpTransform_Block_1_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_warpTransform_Loop_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_warpTransform_Loop_1_U0_ap_ready : STD_LOGIC;
    signal warpTransform_Loop_1_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_warpTransform_Block_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_warpTransform_Block_U0_ap_ready : STD_LOGIC;
    signal warpTransform_Block_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_warpTransform_Loop_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_warpTransform_Loop_4_U0_full_n : STD_LOGIC;
    signal start_for_warpTransform_Loop_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_warpTransform_Loop_4_U0_empty_n : STD_LOGIC;
    signal warpTransform_Loop_1_U0_start_full_n : STD_LOGIC;
    signal warpTransform_Loop_1_U0_start_write : STD_LOGIC;
    signal warpTransform_Block_U0_start_full_n : STD_LOGIC;
    signal warpTransform_Block_U0_start_write : STD_LOGIC;
    signal warpTransform_Loop_4_U0_start_full_n : STD_LOGIC;
    signal warpTransform_Loop_4_U0_start_write : STD_LOGIC;

    component warpTransform_Block_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        scalar_dst_mat_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        scalar_dst_mat_cols_empty_n : IN STD_LOGIC;
        scalar_dst_mat_cols_read : OUT STD_LOGIC;
        p_dst_mat_cols_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        p_dst_mat_cols_out_full_n : IN STD_LOGIC;
        p_dst_mat_cols_out_write : OUT STD_LOGIC;
        scalar_dst_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        scalar_dst_mat_rows_empty_n : IN STD_LOGIC;
        scalar_dst_mat_rows_read : OUT STD_LOGIC;
        p_dst_mat_rows_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        p_dst_mat_rows_out_full_n : IN STD_LOGIC;
        p_dst_mat_rows_out_write : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC;
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_load337_loc_c_i_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_cols_load337_loc_c_i_full_n : IN STD_LOGIC;
        p_src_mat_cols_load337_loc_c_i_write : OUT STD_LOGIC;
        p_src_mat_rows_c_i_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_rows_c_i_full_n : IN STD_LOGIC;
        p_src_mat_rows_c_i_write : OUT STD_LOGIC;
        p_dst_mat_rows_c_i_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        p_dst_mat_rows_c_i_full_n : IN STD_LOGIC;
        p_dst_mat_rows_c_i_write : OUT STD_LOGIC;
        p_dst_mat_cols_c_i_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        p_dst_mat_cols_c_i_full_n : IN STD_LOGIC;
        p_dst_mat_cols_c_i_write : OUT STD_LOGIC );
    end component;


    component warpTransform_Loop_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_load337_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_cols_load337_loc_empty_n : IN STD_LOGIC;
        p_src_mat_cols_load337_loc_read : OUT STD_LOGIC;
        p_src_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_mat_data_V_empty_n : IN STD_LOGIC;
        p_src_mat_data_V_read : OUT STD_LOGIC;
        in_stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_stream_V_V_full_n : IN STD_LOGIC;
        in_stream_V_V_write : OUT STD_LOGIC;
        p_src_mat_cols_load337_loc_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_cols_load337_loc_out_full_n : IN STD_LOGIC;
        p_src_mat_cols_load337_loc_out_write : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component warpTransform_Block_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        P_matrix_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_matrix_EN_A : OUT STD_LOGIC;
        P_matrix_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
        P_matrix_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_matrix_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_cols_load337_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_mat_cols_load337_loc_empty_n : IN STD_LOGIC;
        p_src_mat_cols_load337_loc_read : OUT STD_LOGIC;
        in_stream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_stream_V_V_empty_n : IN STD_LOGIC;
        in_stream_V_V_read : OUT STD_LOGIC;
        out_stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_stream_V_V_full_n : IN STD_LOGIC;
        out_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component warpTransform_Loop_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_dst_mat_rows_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_dst_mat_rows_empty_n : IN STD_LOGIC;
        p_dst_mat_rows_read : OUT STD_LOGIC;
        p_dst_mat_cols_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        p_dst_mat_cols_empty_n : IN STD_LOGIC;
        p_dst_mat_cols_read : OUT STD_LOGIC;
        out_stream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        out_stream_V_V_empty_n : IN STD_LOGIC;
        out_stream_V_V_read : OUT STD_LOGIC;
        p_dst_mat_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_mat_data_V_full_n : IN STD_LOGIC;
        p_dst_mat_data_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w12_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w12_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_warpTrab2s IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    warpTransform_Block_1_U0 : component warpTransform_Block_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => warpTransform_Block_1_U0_ap_start,
        start_full_n => start_for_warpTransform_Loop_4_U0_full_n,
        ap_done => warpTransform_Block_1_U0_ap_done,
        ap_continue => warpTransform_Block_1_U0_ap_continue,
        ap_idle => warpTransform_Block_1_U0_ap_idle,
        ap_ready => warpTransform_Block_1_U0_ap_ready,
        start_out => warpTransform_Block_1_U0_start_out,
        start_write => warpTransform_Block_1_U0_start_write,
        scalar_dst_mat_cols_dout => p_dst_mat_cols_dout,
        scalar_dst_mat_cols_empty_n => p_dst_mat_cols_empty_n,
        scalar_dst_mat_cols_read => warpTransform_Block_1_U0_scalar_dst_mat_cols_read,
        p_dst_mat_cols_out_din => warpTransform_Block_1_U0_p_dst_mat_cols_out_din,
        p_dst_mat_cols_out_full_n => p_dst_mat_cols_out_full_n,
        p_dst_mat_cols_out_write => warpTransform_Block_1_U0_p_dst_mat_cols_out_write,
        scalar_dst_mat_rows_dout => p_dst_mat_rows_dout,
        scalar_dst_mat_rows_empty_n => p_dst_mat_rows_empty_n,
        scalar_dst_mat_rows_read => warpTransform_Block_1_U0_scalar_dst_mat_rows_read,
        p_dst_mat_rows_out_din => warpTransform_Block_1_U0_p_dst_mat_rows_out_din,
        p_dst_mat_rows_out_full_n => p_dst_mat_rows_out_full_n,
        p_dst_mat_rows_out_write => warpTransform_Block_1_U0_p_dst_mat_rows_out_write,
        p_src_mat_cols_dout => p_src_mat_cols_dout,
        p_src_mat_cols_empty_n => p_src_mat_cols_empty_n,
        p_src_mat_cols_read => warpTransform_Block_1_U0_p_src_mat_cols_read,
        p_src_mat_rows_dout => p_src_mat_rows_dout,
        p_src_mat_rows_empty_n => p_src_mat_rows_empty_n,
        p_src_mat_rows_read => warpTransform_Block_1_U0_p_src_mat_rows_read,
        p_src_mat_cols_load337_loc_c_i_din => warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din,
        p_src_mat_cols_load337_loc_c_i_full_n => p_src_mat_cols_load33_1_full_n,
        p_src_mat_cols_load337_loc_c_i_write => warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write,
        p_src_mat_rows_c_i_din => warpTransform_Block_1_U0_p_src_mat_rows_c_i_din,
        p_src_mat_rows_c_i_full_n => p_src_mat_rows_c_i_full_n,
        p_src_mat_rows_c_i_write => warpTransform_Block_1_U0_p_src_mat_rows_c_i_write,
        p_dst_mat_rows_c_i_din => warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din,
        p_dst_mat_rows_c_i_full_n => p_dst_mat_rows_c_i_full_n,
        p_dst_mat_rows_c_i_write => warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write,
        p_dst_mat_cols_c_i_din => warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din,
        p_dst_mat_cols_c_i_full_n => p_dst_mat_cols_c_i_full_n,
        p_dst_mat_cols_c_i_write => warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write);

    warpTransform_Loop_1_U0 : component warpTransform_Loop_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => warpTransform_Loop_1_U0_ap_start,
        ap_done => warpTransform_Loop_1_U0_ap_done,
        ap_continue => warpTransform_Loop_1_U0_ap_continue,
        ap_idle => warpTransform_Loop_1_U0_ap_idle,
        ap_ready => warpTransform_Loop_1_U0_ap_ready,
        p_src_mat_rows_dout => p_src_mat_rows_c_i_dout,
        p_src_mat_rows_empty_n => p_src_mat_rows_c_i_empty_n,
        p_src_mat_rows_read => warpTransform_Loop_1_U0_p_src_mat_rows_read,
        p_src_mat_cols_load337_loc_dout => p_src_mat_cols_load33_1_dout,
        p_src_mat_cols_load337_loc_empty_n => p_src_mat_cols_load33_1_empty_n,
        p_src_mat_cols_load337_loc_read => warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read,
        p_src_mat_data_V_dout => p_src_mat_data_V_dout,
        p_src_mat_data_V_empty_n => p_src_mat_data_V_empty_n,
        p_src_mat_data_V_read => warpTransform_Loop_1_U0_p_src_mat_data_V_read,
        in_stream_V_V_din => warpTransform_Loop_1_U0_in_stream_V_V_din,
        in_stream_V_V_full_n => in_stream_V_V_full_n,
        in_stream_V_V_write => warpTransform_Loop_1_U0_in_stream_V_V_write,
        p_src_mat_cols_load337_loc_out_din => warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din,
        p_src_mat_cols_load337_loc_out_full_n => p_src_mat_cols_load33_full_n,
        p_src_mat_cols_load337_loc_out_write => warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write,
        ap_return => warpTransform_Loop_1_U0_ap_return);

    warpTransform_Block_U0 : component warpTransform_Block_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => warpTransform_Block_U0_ap_start,
        ap_done => warpTransform_Block_U0_ap_done,
        ap_continue => warpTransform_Block_U0_ap_continue,
        ap_idle => warpTransform_Block_U0_ap_idle,
        ap_ready => warpTransform_Block_U0_ap_ready,
        P_matrix_Addr_A => warpTransform_Block_U0_P_matrix_Addr_A,
        P_matrix_EN_A => warpTransform_Block_U0_P_matrix_EN_A,
        P_matrix_WEN_A => warpTransform_Block_U0_P_matrix_WEN_A,
        P_matrix_Din_A => warpTransform_Block_U0_P_matrix_Din_A,
        P_matrix_Dout_A => P_matrix_Dout_A,
        p_read => p_src_mat_rows_load_dout,
        p_src_mat_cols_load337_loc_dout => p_src_mat_cols_load33_dout,
        p_src_mat_cols_load337_loc_empty_n => p_src_mat_cols_load33_empty_n,
        p_src_mat_cols_load337_loc_read => warpTransform_Block_U0_p_src_mat_cols_load337_loc_read,
        in_stream_V_V_dout => in_stream_V_V_dout,
        in_stream_V_V_empty_n => in_stream_V_V_empty_n,
        in_stream_V_V_read => warpTransform_Block_U0_in_stream_V_V_read,
        out_stream_V_V_din => warpTransform_Block_U0_out_stream_V_V_din,
        out_stream_V_V_full_n => out_stream_V_V_full_n,
        out_stream_V_V_write => warpTransform_Block_U0_out_stream_V_V_write);

    warpTransform_Loop_4_U0 : component warpTransform_Loop_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => warpTransform_Loop_4_U0_ap_start,
        ap_done => warpTransform_Loop_4_U0_ap_done,
        ap_continue => warpTransform_Loop_4_U0_ap_continue,
        ap_idle => warpTransform_Loop_4_U0_ap_idle,
        ap_ready => warpTransform_Loop_4_U0_ap_ready,
        p_dst_mat_rows_dout => p_dst_mat_rows_c_i_dout,
        p_dst_mat_rows_empty_n => p_dst_mat_rows_c_i_empty_n,
        p_dst_mat_rows_read => warpTransform_Loop_4_U0_p_dst_mat_rows_read,
        p_dst_mat_cols_dout => p_dst_mat_cols_c_i_dout,
        p_dst_mat_cols_empty_n => p_dst_mat_cols_c_i_empty_n,
        p_dst_mat_cols_read => warpTransform_Loop_4_U0_p_dst_mat_cols_read,
        out_stream_V_V_dout => out_stream_V_V_dout,
        out_stream_V_V_empty_n => out_stream_V_V_empty_n,
        out_stream_V_V_read => warpTransform_Loop_4_U0_out_stream_V_V_read,
        p_dst_mat_data_V_din => warpTransform_Loop_4_U0_p_dst_mat_data_V_din,
        p_dst_mat_data_V_full_n => p_dst_mat_data_V_full_n,
        p_dst_mat_data_V_write => warpTransform_Loop_4_U0_p_dst_mat_data_V_write);

    p_src_mat_cols_load33_1_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_din,
        if_full_n => p_src_mat_cols_load33_1_full_n,
        if_write => warpTransform_Block_1_U0_p_src_mat_cols_load337_loc_c_i_write,
        if_dout => p_src_mat_cols_load33_1_dout,
        if_empty_n => p_src_mat_cols_load33_1_empty_n,
        if_read => warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_read);

    p_src_mat_rows_c_i_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Block_1_U0_p_src_mat_rows_c_i_din,
        if_full_n => p_src_mat_rows_c_i_full_n,
        if_write => warpTransform_Block_1_U0_p_src_mat_rows_c_i_write,
        if_dout => p_src_mat_rows_c_i_dout,
        if_empty_n => p_src_mat_rows_c_i_empty_n,
        if_read => warpTransform_Loop_1_U0_p_src_mat_rows_read);

    p_dst_mat_rows_c_i_U : component fifo_w12_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Block_1_U0_p_dst_mat_rows_c_i_din,
        if_full_n => p_dst_mat_rows_c_i_full_n,
        if_write => warpTransform_Block_1_U0_p_dst_mat_rows_c_i_write,
        if_dout => p_dst_mat_rows_c_i_dout,
        if_empty_n => p_dst_mat_rows_c_i_empty_n,
        if_read => warpTransform_Loop_4_U0_p_dst_mat_rows_read);

    p_dst_mat_cols_c_i_U : component fifo_w12_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Block_1_U0_p_dst_mat_cols_c_i_din,
        if_full_n => p_dst_mat_cols_c_i_full_n,
        if_write => warpTransform_Block_1_U0_p_dst_mat_cols_c_i_write,
        if_dout => p_dst_mat_cols_c_i_dout,
        if_empty_n => p_dst_mat_cols_c_i_empty_n,
        if_read => warpTransform_Loop_4_U0_p_dst_mat_cols_read);

    in_stream_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Loop_1_U0_in_stream_V_V_din,
        if_full_n => in_stream_V_V_full_n,
        if_write => warpTransform_Loop_1_U0_in_stream_V_V_write,
        if_dout => in_stream_V_V_dout,
        if_empty_n => in_stream_V_V_empty_n,
        if_read => warpTransform_Block_U0_in_stream_V_V_read);

    p_src_mat_cols_load33_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_din,
        if_full_n => p_src_mat_cols_load33_full_n,
        if_write => warpTransform_Loop_1_U0_p_src_mat_cols_load337_loc_out_write,
        if_dout => p_src_mat_cols_load33_dout,
        if_empty_n => p_src_mat_cols_load33_empty_n,
        if_read => warpTransform_Block_U0_p_src_mat_cols_load337_loc_read);

    p_src_mat_rows_load_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Loop_1_U0_ap_return,
        if_full_n => p_src_mat_rows_load_full_n,
        if_write => warpTransform_Loop_1_U0_ap_done,
        if_dout => p_src_mat_rows_load_dout,
        if_empty_n => p_src_mat_rows_load_empty_n,
        if_read => warpTransform_Block_U0_ap_ready);

    out_stream_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => warpTransform_Block_U0_out_stream_V_V_din,
        if_full_n => out_stream_V_V_full_n,
        if_write => warpTransform_Block_U0_out_stream_V_V_write,
        if_dout => out_stream_V_V_dout,
        if_empty_n => out_stream_V_V_empty_n,
        if_read => warpTransform_Loop_4_U0_out_stream_V_V_read);

    start_for_warpTrab2s_U : component start_for_warpTrab2s
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_warpTransform_Loop_4_U0_din,
        if_full_n => start_for_warpTransform_Loop_4_U0_full_n,
        if_write => warpTransform_Block_1_U0_start_write,
        if_dout => start_for_warpTransform_Loop_4_U0_dout,
        if_empty_n => start_for_warpTransform_Loop_4_U0_empty_n,
        if_read => warpTransform_Loop_4_U0_ap_ready);





    ap_sync_reg_warpTransform_Block_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_warpTransform_Block_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_warpTransform_Block_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_warpTransform_Block_1_U0_ap_ready <= ap_sync_warpTransform_Block_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_warpTransform_Block_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_warpTransform_Block_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_warpTransform_Block_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_warpTransform_Block_U0_ap_ready <= ap_sync_warpTransform_Block_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_warpTransform_Loop_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_warpTransform_Loop_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((real_start and ap_sync_ready) = ap_const_logic_1)) then 
                    ap_sync_reg_warpTransform_Loop_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_warpTransform_Loop_1_U0_ap_ready <= ap_sync_warpTransform_Loop_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    warpTransform_Block_1_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((warpTransform_Block_1_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                warpTransform_Block_1_U0_ap_ready_count <= std_logic_vector(unsigned(warpTransform_Block_1_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (warpTransform_Block_1_U0_ap_ready = ap_const_logic_1))) then 
                warpTransform_Block_1_U0_ap_ready_count <= std_logic_vector(unsigned(warpTransform_Block_1_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    warpTransform_Block_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((warpTransform_Block_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                warpTransform_Block_U0_ap_ready_count <= std_logic_vector(unsigned(warpTransform_Block_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (warpTransform_Block_U0_ap_ready = ap_const_logic_1))) then 
                warpTransform_Block_U0_ap_ready_count <= std_logic_vector(unsigned(warpTransform_Block_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    warpTransform_Loop_1_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((warpTransform_Loop_1_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                warpTransform_Loop_1_U0_ap_ready_count <= std_logic_vector(unsigned(warpTransform_Loop_1_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (warpTransform_Loop_1_U0_ap_ready = ap_const_logic_1))) then 
                warpTransform_Loop_1_U0_ap_ready_count <= std_logic_vector(unsigned(warpTransform_Loop_1_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    P_matrix_Addr_A <= warpTransform_Block_U0_P_matrix_Addr_A;
    P_matrix_Din_A <= ap_const_lv32_0;
    P_matrix_EN_A <= warpTransform_Block_U0_P_matrix_EN_A;
    P_matrix_WEN_A <= (0=>ap_const_logic_0, others=>'-');
    ap_channel_done_p_src_mat_rows_load <= warpTransform_Loop_1_U0_ap_done;
    ap_done <= ap_sync_done;
    ap_idle <= (warpTransform_Loop_4_U0_ap_idle and warpTransform_Loop_1_U0_ap_idle and warpTransform_Block_U0_ap_idle and warpTransform_Block_1_U0_ap_idle and (p_src_mat_rows_load_empty_n xor ap_const_logic_1));
    ap_ready <= internal_ap_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (warpTransform_Loop_4_U0_ap_done and warpTransform_Block_1_U0_ap_done);
    ap_sync_ready <= (ap_sync_warpTransform_Loop_1_U0_ap_ready and ap_sync_warpTransform_Block_U0_ap_ready and ap_sync_warpTransform_Block_1_U0_ap_ready);
    ap_sync_warpTransform_Block_1_U0_ap_ready <= (warpTransform_Block_1_U0_ap_ready or ap_sync_reg_warpTransform_Block_1_U0_ap_ready);
    ap_sync_warpTransform_Block_U0_ap_ready <= (warpTransform_Block_U0_ap_ready or ap_sync_reg_warpTransform_Block_U0_ap_ready);
    ap_sync_warpTransform_Loop_1_U0_ap_ready <= (warpTransform_Loop_1_U0_ap_ready or ap_sync_reg_warpTransform_Loop_1_U0_ap_ready);
    internal_ap_ready <= ap_sync_ready;
    p_dst_mat_cols_out_din <= warpTransform_Block_1_U0_p_dst_mat_cols_out_din;
    p_dst_mat_cols_out_write <= warpTransform_Block_1_U0_p_dst_mat_cols_out_write;
    p_dst_mat_cols_read <= warpTransform_Block_1_U0_scalar_dst_mat_cols_read;
    p_dst_mat_data_V_din <= warpTransform_Loop_4_U0_p_dst_mat_data_V_din;
    p_dst_mat_data_V_write <= warpTransform_Loop_4_U0_p_dst_mat_data_V_write;
    p_dst_mat_rows_out_din <= warpTransform_Block_1_U0_p_dst_mat_rows_out_din;
    p_dst_mat_rows_out_write <= warpTransform_Block_1_U0_p_dst_mat_rows_out_write;
    p_dst_mat_rows_read <= warpTransform_Block_1_U0_scalar_dst_mat_rows_read;
    p_src_mat_cols_read <= warpTransform_Block_1_U0_p_src_mat_cols_read;
    p_src_mat_data_V_read <= warpTransform_Loop_1_U0_p_src_mat_data_V_read;
    p_src_mat_rows_read <= warpTransform_Block_1_U0_p_src_mat_rows_read;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_for_warpTransform_Loop_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    warpTransform_Block_1_U0_ap_continue <= ap_sync_continue;
    warpTransform_Block_1_U0_ap_start <= (real_start and (ap_sync_reg_warpTransform_Block_1_U0_ap_ready xor ap_const_logic_1));
    warpTransform_Block_U0_ap_continue <= ap_const_logic_1;
    warpTransform_Block_U0_ap_start <= (real_start and p_src_mat_rows_load_empty_n and (ap_sync_reg_warpTransform_Block_U0_ap_ready xor ap_const_logic_1));
    warpTransform_Block_U0_start_full_n <= ap_const_logic_1;
    warpTransform_Block_U0_start_write <= ap_const_logic_0;
    warpTransform_Loop_1_U0_ap_continue <= p_src_mat_rows_load_full_n;
    warpTransform_Loop_1_U0_ap_start <= (real_start and (ap_sync_reg_warpTransform_Loop_1_U0_ap_ready xor ap_const_logic_1));
    warpTransform_Loop_1_U0_start_full_n <= ap_const_logic_1;
    warpTransform_Loop_1_U0_start_write <= ap_const_logic_0;
    warpTransform_Loop_4_U0_ap_continue <= ap_sync_continue;
    warpTransform_Loop_4_U0_ap_start <= start_for_warpTransform_Loop_4_U0_empty_n;
    warpTransform_Loop_4_U0_start_full_n <= ap_const_logic_1;
    warpTransform_Loop_4_U0_start_write <= ap_const_logic_0;
end behav;
